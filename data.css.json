[{"url":"https:\/\/developer.mozilla.org\/en\/CSS","title":"CSS","description":"Documentation about CSS\n CSS Reference Describes every properties, types, values, dimensions, selectors, pseudo-classes, pseudo-elements and @-rules of CSS (and CSS extensions specific to Mozilla). CSS Key Concepts Introduces fundamentals like specificity and inheritance, the box model and margin collapsing, stacking and block-formatting contexts, or the initial, computed, used and actual values. Using CSS transforms Presents the 2D operations that can be applied to each element in order to rotate, skew, translate it. Using CSS&nbsp;transitions Explains how to change the aspect of an element using a smooth animation between the initial and final state. Using CSS animations Describes how to define animations of an element but also how to detect in Javascript if the browser supports it. Using CSS gradients Explains how to define gradients, images composed of smooth variations of colors. Using CSS multi-column layouts Presents how to make multi-column page settings using the CSS Level 3 multi-column layout. Using CSS media queries Presents how to select style sheets based on details of the rendering device, like its viewport size, its resolution or if it has a touchscreen. Using CSS counters Explains how to use automatic counters and numbering, essentially used as list counters. Fonts and Typography Informs about managing your fonts using @font-face\n and the WOFF font format. Consistent List Indentation Trying to change the indentation of lists with CSS is trickier than it looks, but only because CSS-conformant browsers took different paths to default indentation. Find out how to get them all in line. Using dynamic styling information How to obtain information on and manipulate styling via the DOM\n\nView All...Getting help from the community You need help on a CSS-related problem and can't find the solution in the documentation?  Consult the dedicated Mozilla forum: \n as a mailing list as a newsgroup as a Google Group as a Web feed   Ask your question on the Mozilla IRC channel: #css Ask your question on the CSS-Discuss site and list  Don't forget about the netiquette... Tools easing CSS development  The W3C CSS Validation Service checks if a given CSS is valid. It is an invaluable debugging tool.   Firefox' Firebug extension, a popular extension of that navigator that allows to edit live CSS on watched sites. Very practical to test some changes, though this extension does much more. Firefox' Web Developer extension also allows to watch and edit live CSS on watched sites. Simpler than Firebug, though less powerful. Firefox' EditCSS extension allows editing CSS in the sidebar.  View All... Related Topics  Mozilla Learn CSS resources.   Open Web languages on which CSS is often applied: HTML, SVG, XHTML, XML. Mozilla technologies which make extensive use of CSS: XUL, Firefox and Thunderbird extensions and themes.  "},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation","title":"animation","description":"Summary\nThe animation property is a shorthand property for animation-name\n, animation-duration\n, animation-timing-function\n, animation-delay\n, animation-iteration-count\n and animation-direction\n.\nA list of CSS properties that can be animated is available; it's worth noting that these are the same properties supported by CSS transitions.\n Initial value\n: 0 Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\nanimation:  [ &lt;animation-name&gt; || &lt;animation-duration&gt; || &lt;animation-timing-function&gt; || &lt;animation-delay&gt; ||\n              &lt;animation-iteration-count&gt; || &lt;animation-direction&gt;] \n            [, [&lt;animation-name&gt; || &lt;animation-duration&gt; || &lt;animation-timing-function&gt; || &lt;animation-delay&gt; ||\n              &lt;animation-iteration-count&gt; || &lt;animation-direction&gt;] ]*  \n\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz 10\n-ms -- 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? 5.0 (5.0)\n\n-moz ? -- iOS 2.0\n-webkit   \n\nSpecifications\n \nCSS Animations Module Level 3: animationWD\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/CSS_Reference\/Mozilla_Extensions","title":"Mozilla CSS Extensions","description":"Properties\nA  -moz-appearance\n  B  -moz-background-clip\n -moz-background-inline-policy\n -moz-background-origin\n -moz-background-size\n \nRequires Gecko 1.9.2\n -moz-binding\n -moz-border-bottom-colors\n -moz-border-left-colors\n -moz-border-right-colors\n -moz-border-top-colors\n -moz-border-end\n -moz-border-end-color\n -moz-border-end-style\n -moz-border-end-width\n -moz-border-image\n \nRequires Gecko 1.9.1\n -moz-border-start\n -moz-border-start-color\n -moz-border-start-style\n -moz-border-start-width\n -moz-box-align\n -moz-box-direction\n -moz-box-flex\n -moz-box-flexgroup\n -moz-box-ordinal-group\n -moz-box-orient\n -moz-box-pack\n -moz-box-sizing\n  C D E  -moz-column-count\n -moz-column-gap\n -moz-column-width\n -moz-column-rule\n \nRequires Gecko 1.9.1\n -moz-column-rule-width\n \nRequires Gecko 1.9.1\n -moz-column-rule-style\n \nRequires Gecko 1.9.1\n -moz-column-rule-color\n\nRequires Gecko 1.9.1\n  F G  -moz-filter\n -moz-float-edge\n -moz-font-feature-settings\n \nRequires Gecko 2.0\n -moz-font-language-override\n \nRequires Gecko 2.0\n -moz-force-broken-image-icon\n  I J K L  -moz-image-region\n  M N  -moz-margin-end\n -moz-margin-start\n -moz-mask\n  O  -moz-opacity\n \n\nObsolete -moz-orient\n -moz-outline\n \n\nObsolete -moz-outline-color\n \n\nObsolete -moz-outline-offset\n \n\nObsolete -moz-outline-radius\n -moz-outline-radius-bottomleft\n -moz-outline-radius-bottomright\n -moz-outline-radius-topleft\n -moz-outline-radius-topright\n -moz-outline-style\n \n\nObsolete -moz-outline-width\n \n\nObsolete  P Q R  -moz-padding-end\n -moz-padding-start\n  S  -moz-stack-sizing\n \nRequires Gecko 1.9.1\n  T  -moz-tab-size\n \nRequires Gecko 2.0\n -moz-text-blink\n \nRequires Gecko 6.0\n -moz-text-decoration-color\n \nRequires Gecko 6.0\n -moz-text-decoration-line\n \nRequires Gecko 6.0\n -moz-text-decoration-style\n \nRequires Gecko 6.0\n -moz-transform\n \nRequires Gecko 1.9.1\n -moz-transform-origin\n \nRequires Gecko 1.9.1\n -moz-transition\n \nRequires Gecko 2.0\n -moz-transition-delay\n \nRequires Gecko 2.0\n -moz-transition-duration\n \nRequires Gecko 2.0\n -moz-transition-property\n \nRequires Gecko 2.0\n -moz-transition-timing-function\n \nRequires Gecko 2.0\n  U V  -moz-user-focus\n -moz-user-input\n -moz-user-modify\n -moz-user-select\n  W X Y Z  -moz-window-shadow\n \nRequires Gecko 1.9.1\n \n\nValues\nFor all properties\n -moz-initial\n\n\n-moz-appearance\n\n button button-arrow-down button-arrow-next button-arrow-previous button-arrow-up button-bevel checkbox checkbox-container checkbox-label checkmenuitem dialog groupbox listbox menuarrow menucheckbox menuimage menuitem menuitemtext menulist menulist-button menulist-text menulist-textfield menupopup menuradio menuseparator -moz-mac-unified-toolbar \nNew in Firefox 3.5\n -moz-win-borderless-glass -moz-win-browsertabbar-toolbox \nNew in Firefox 3\n -moz-win-communications-toolbox \nNew in Firefox 3\n -moz-win-glass -moz-win-media-toolbox \nNew in Firefox 3\n -moz-window-button-box -moz-window-button-box-maximized -moz-window-button-close -moz-window-button-maximize -moz-window-button-minimize -moz-window-button-restore -moz-window-titlebar -moz-window-titlebar-maximized progressbar progresschunk radio radio-container radio-label radiomenuitem resizer resizerpanel scale-horizontal scalethumb-horizontal scalethumb-vertical scale-vertical scrollbarbutton-down scrollbarbutton-left scrollbarbutton-right scrollbarbutton-up scrollbar-small scrollbarthumb-horizontal scrollbarthumb-vertical scrollbartrack-horizontal scrollbartrack-vertical separator spinner spinner-downbutton spinner-textfield spinner-upbutton statusbar statusbarpanel tab tabpanels tab-scroll-arrow-back tab-scroll-arrow-forward textfield textfield-multiline toolbar toolbarbutton-dropdown toolbox tooltip treeheadercell treeheadersortarrow treeitem treetwisty treetwistyopen treeview window\n\nbackground-image\n\n Gradients \nRequires Gecko 1.9.2\n  -moz-linear-gradient\n -moz-radial-gradient\n   Elements \nRequires Gecko 2.0\n  -moz-element\n   Sub-images  -moz-image-rect\n \nRequires Gecko 2.0\n  \n\nborder-color\n\n -moz-use-text-color \n\nDeprecated\n\n Use currentColor\n\n\nborder-style\n&nbsp; and&nbsp; outline-style\n\n -moz-bg-inset | -moz-bg-outset | -moz-bg-solid  \n\nObsolete&nbsp; dropped in Gecko 1.9 (Firefox 3.0)\n\n&lt;color&gt;\n&nbsp; keywords\n -moz-activehyperlinktext -moz-hyperlinktext -moz-visitedhyperlinktext -moz-buttondefault -moz-buttonhoverface -moz-buttonhovertext -moz-default-background-color \nRequires Gecko 5.0\n -moz-default-color \nRequires Gecko 5.0\n -moz-cellhighlight -moz-cellhighlighttext -moz-field -moz-fieldtext -moz-dialog -moz-dialogtext -moz-dragtargetzone -moz-mac-accentdarkestshadow -moz-mac-accentdarkshadow -moz-mac-accentface -moz-mac-accentlightesthighlight -moz-mac-accentlightshadow -moz-mac-accentregularhighlight -moz-mac-accentregularshadow -moz-mac-chrome-active \nRequires Gecko 1.9.1\n -moz-mac-chrome-inactive \nRequires Gecko 1.9.1\n -moz-mac-focusring -moz-mac-menuselect -moz-mac-menushadow -moz-mac-menutextselect -moz-menuhover -moz-menuhovertext -moz-win-communicationstext \nNew in Firefox 3\n -moz-win-mediatext \nRequires Gecko 1.9\n -moz-nativehyperlinktext \nRequires Gecko 1.9.1\n\n\ncursor\n\n -moz-alias\n \n\nObsolete use alias\n -moz-cell\n \n\nObsolete use cell\n -moz-context-menu\n \n\nObsolete use context-menu\n -moz-copy\n \n\nObsolete use copy\n -moz-grab\n -moz-grabbing\n -moz-spinning\n \n\nObsolete use progress\n -moz-zoom-in\n -moz-zoom-out\n\n\ndisplay\n\n -moz-box -moz-inline-block \n\nObsolete -moz-inline-box -moz-inline-grid -moz-inline-stack -moz-inline-table \n\nObsolete -moz-grid -moz-grid-group -moz-grid-line -moz-groupbox -moz-deck -moz-popup -moz-stack -moz-marker\n\nempty-cells\n\n -moz-show-background (default value in quirks mode)\n\nfont\n\n -moz-button -moz-info -moz-desktop -moz-dialog (also a color) -moz-document -moz-workspace -moz-window -moz-list -moz-pull-down-menu -moz-field (also a color)\n\nfont-family\n\n -moz-fixed\n\nimage-rendering\n\n -moz-crisp-edges\n \nRequires Gecko 1.9.2\n\n\n\n&lt;length&gt;\n\n -moz-calc\n \nRequires Gecko 2.0\n\n\nlist-style-type\n\n -moz-arabic-indic -moz-bengali -moz-cjk-earthly-branch -moz-cjk-heavenly-stem -moz-devanagari -moz-ethiopic-halehame -moz-ethiopic-halehame-am -moz-ethiopic-halehame-ti-er -moz-ethiopic-halehame-ti-et -moz-ethiopic-numeric -moz-gujarati -moz-gurmukhi -moz-hangul -moz-hangul-consonant -moz-japanese-formal -moz-japanese-informal -moz-kannada -moz-khmer -moz-lao -moz-malayalam -moz-myanmar -moz-oriya -moz-persian -moz-simp-chinese-formal -moz-simp-chinese-informal -moz-tamil -moz-telugu -moz-thai -moz-trad-chinese-formal -moz-trad-chinese-informal -moz-urdu\n\noverflow\n\n -moz-scrollbars-none\n \n\nObsolete -moz-scrollbars-horizontal\n \n\nDeprecated\n\n -moz-scrollbars-vertical\n \n\nDeprecated\n\n -moz-hidden-unscrollable\n\n\ntext-align\n\n -moz-center\n -moz-left\n -moz-right\n\n\ntext-decoration\n\n -moz-anchor-decoration\n\n-moz-user-select\n\n -moz-all -moz-none\n\nwidth\n,&nbsp; min-width\n&nbsp; and&nbsp; max-width\n\n -moz-min-content \nNew in Firefox 3\n -moz-fit-content \nNew in Firefox 3\n -moz-max-content \nNew in Firefox 3\n -moz-available \nNew in Firefox 3\n\n\nFor all properties\n -moz-initial\n\n\n-moz-appearance\n\n button button-arrow-down button-arrow-next button-arrow-previous button-arrow-up button-bevel checkbox checkbox-container checkbox-label checkmenuitem dialog groupbox listbox menuarrow menucheckbox menuimage menuitem menuitemtext menulist menulist-button menulist-text menulist-textfield menupopup menuradio menuseparator -moz-mac-unified-toolbar \nNew in Firefox 3.5\n -moz-win-borderless-glass -moz-win-browsertabbar-toolbox \nNew in Firefox 3\n -moz-win-communications-toolbox \nNew in Firefox 3\n -moz-win-glass -moz-win-media-toolbox \nNew in Firefox 3\n -moz-window-button-box -moz-window-button-box-maximized -moz-window-button-close -moz-window-button-maximize -moz-window-button-minimize -moz-window-button-restore -moz-window-titlebar -moz-window-titlebar-maximized progressbar progresschunk radio radio-container radio-label radiomenuitem resizer resizerpanel scale-horizontal scalethumb-horizontal scalethumb-vertical scale-vertical scrollbarbutton-down scrollbarbutton-left scrollbarbutton-right scrollbarbutton-up scrollbar-small scrollbarthumb-horizontal scrollbarthumb-vertical scrollbartrack-horizontal scrollbartrack-vertical separator spinner spinner-downbutton spinner-textfield spinner-upbutton statusbar statusbarpanel tab tabpanels tab-scroll-arrow-back tab-scroll-arrow-forward textfield textfield-multiline toolbar toolbarbutton-dropdown toolbox tooltip treeheadercell treeheadersortarrow treeitem treetwisty treetwistyopen treeview window\n\nbackground-image\n\n Gradients \nRequires Gecko 1.9.2\n  -moz-linear-gradient\n -moz-radial-gradient\n   Elements \nRequires Gecko 2.0\n  -moz-element\n   Sub-images  -moz-image-rect\n \nRequires Gecko 2.0\n  \n\nborder-color\n\n -moz-use-text-color \n\nDeprecated\n\n Use currentColor\n\n\nborder-style\n&nbsp; and&nbsp; outline-style\n\n -moz-bg-inset | -moz-bg-outset | -moz-bg-solid  \n\nObsolete&nbsp; dropped in Gecko 1.9 (Firefox 3.0)\n\n&lt;color&gt;\n&nbsp; keywords\n -moz-activehyperlinktext -moz-hyperlinktext -moz-visitedhyperlinktext -moz-buttondefault -moz-buttonhoverface -moz-buttonhovertext -moz-default-background-color \nRequires Gecko 5.0\n -moz-default-color \nRequires Gecko 5.0\n -moz-cellhighlight -moz-cellhighlighttext -moz-field -moz-fieldtext -moz-dialog -moz-dialogtext -moz-dragtargetzone -moz-mac-accentdarkestshadow -moz-mac-accentdarkshadow -moz-mac-accentface -moz-mac-accentlightesthighlight -moz-mac-accentlightshadow -moz-mac-accentregularhighlight -moz-mac-accentregularshadow -moz-mac-chrome-active \nRequires Gecko 1.9.1\n -moz-mac-chrome-inactive \nRequires Gecko 1.9.1\n -moz-mac-focusring -moz-mac-menuselect -moz-mac-menushadow -moz-mac-menutextselect -moz-menuhover -moz-menuhovertext -moz-win-communicationstext \nNew in Firefox 3\n -moz-win-mediatext \nRequires Gecko 1.9\n -moz-nativehyperlinktext \nRequires Gecko 1.9.1\n\n\ncursor\n\n -moz-alias\n \n\nObsolete use alias\n -moz-cell\n \n\nObsolete use cell\n -moz-context-menu\n \n\nObsolete use context-menu\n -moz-copy\n \n\nObsolete use copy\n -moz-grab\n -moz-grabbing\n -moz-spinning\n \n\nObsolete use progress\n -moz-zoom-in\n -moz-zoom-out\n\n\ndisplay\n\n -moz-box -moz-inline-block \n\nObsolete -moz-inline-box -moz-inline-grid -moz-inline-stack -moz-inline-table \n\nObsolete -moz-grid -moz-grid-group -moz-grid-line -moz-groupbox -moz-deck -moz-popup -moz-stack -moz-marker\n\nempty-cells\n\n -moz-show-background (default value in quirks mode)\n\nfont\n\n -moz-button -moz-info -moz-desktop -moz-dialog (also a color) -moz-document -moz-workspace -moz-window -moz-list -moz-pull-down-menu -moz-field (also a color)\n\nfont-family\n\n -moz-fixed\n\nimage-rendering\n\n -moz-crisp-edges\n \nRequires Gecko 1.9.2\n\n\n\n&lt;length&gt;\n\n -moz-calc\n \nRequires Gecko 2.0\n\n\nlist-style-type\n\n -moz-arabic-indic -moz-bengali -moz-cjk-earthly-branch -moz-cjk-heavenly-stem -moz-devanagari -moz-ethiopic-halehame -moz-ethiopic-halehame-am -moz-ethiopic-halehame-ti-er -moz-ethiopic-halehame-ti-et -moz-ethiopic-numeric -moz-gujarati -moz-gurmukhi -moz-hangul -moz-hangul-consonant -moz-japanese-formal -moz-japanese-informal -moz-kannada -moz-khmer -moz-lao -moz-malayalam -moz-myanmar -moz-oriya -moz-persian -moz-simp-chinese-formal -moz-simp-chinese-informal -moz-tamil -moz-telugu -moz-thai -moz-trad-chinese-formal -moz-trad-chinese-informal -moz-urdu\n\noverflow\n\n -moz-scrollbars-none\n \n\nObsolete -moz-scrollbars-horizontal\n \n\nDeprecated\n\n -moz-scrollbars-vertical\n \n\nDeprecated\n\n -moz-hidden-unscrollable\n\n\ntext-align\n\n -moz-center\n -moz-left\n -moz-right\n\n\ntext-decoration\n\n -moz-anchor-decoration\n\n-moz-user-select\n\n -moz-all -moz-none\n\nwidth\n,&nbsp; min-width\n&nbsp; and&nbsp; max-width\n\n -moz-min-content \nNew in Firefox 3\n -moz-fit-content \nNew in Firefox 3\n -moz-max-content \nNew in Firefox 3\n -moz-available \nNew in Firefox 3\n\n\nPseudo-elements and pseudo-classes\n ::-moz-anonymous-block\n  ::-moz-anonymous-positioned-block\n :-moz-any\n \nRequires Gecko 2.0\n :-moz-any-link\n (matches&nbsp;:link and&nbsp;:visited) :-moz-bound-element\n :-moz-broken\n \nRequires Gecko 1.9\n ::-moz-canvas\n  ::-moz-cell-content\n  :-moz-drag-over\n :-moz-first-node\n ::-moz-focus-inner\n ::-moz-focus-outer\n :-moz-focusring\n \nRequires Gecko 2.0\n :-moz-full-screen\n \nRequires Gecko 9.0\n :-moz-full-screen-ancestor\n \nRequires Gecko 10.0\n :-moz-handler-blocked\n \nRequires Gecko 1.9.1\n :-moz-handler-crashed\n \nRequires Gecko 2.0\n :-moz-handler-disabled\n \nRequires Gecko 1.9.1\n ::-moz-inline-table\n  :-moz-last-node\n :-moz-list-bullet\n :-moz-list-number\n :-moz-loading\n \nRequires Gecko 1.9\n :-moz-locale-dir(ltr)\n \nRequires Gecko 1.9.2\n :-moz-locale-dir(rtl)\n \nRequires Gecko 1.9.2\n :-moz-lwtheme\n \nRequires Gecko 1.9.2\n :-moz-lwtheme-brighttext\n \nRequires Gecko 1.9.2\n :-moz-lwtheme-darktext\n \nRequires Gecko 1.9.2\n :-moz-math-stretchy\n :-moz-math-anonymous\n :-moz-only-whitespace\n ::-moz-page\n  ::-moz-page-sequence\n  ::-moz-pagebreak\n  ::-moz-pagecontent\n  :-moz-placeholder\n \nRequires Gecko 1.9\n ::-moz-selection\n ::-moz-scrolled-canvas\n  ::-moz-scrolled-content\n  ::-moz-scrolled-page-sequence\n  :-moz-suppressed\n \nRequires Gecko 1.9\n :-moz-submit-invalid\n \nRequires Gecko 2.0\n ::-moz-svg-foreign-content\n  :-moz-system-metric(images-in-menus)\n \nRequires Gecko 1.9\n :-moz-system-metric(mac-graphite-theme)\n \nRequires Gecko 1.9.1\n :-moz-system-metric(scrollbar-end-backward)\n \nRequires Gecko 1.9\n :-moz-system-metric(scrollbar-end-forward)\n \nRequires Gecko 1.9\n :-moz-system-metric(scrollbar-start-backward)\n \nRequires Gecko 1.9\n :-moz-system-metric(scrollbar-start-forward)\n \nNew in Firefox 3\n :-moz-system-metric(scrollbar-thumb-proportional)\n \nRequires Gecko 1.9\n :-moz-system-metric(touch-enabled)\n \nRequires Gecko 1.9.2\n :-moz-system-metric(windows-default-theme)\n \nNew in Firefox 3\n ::-moz-table\n  ::-moz-table-cell\n  ::-moz-table-column\n  ::-moz-table-column-group\n  ::-moz-table-outer\n  ::-moz-table-row\n  ::-moz-table-row-group\n  :-moz-tree-checkbox\n :-moz-tree-cell\n :-moz-tree-cell-text\n :-moz-tree-cell-text(hover)\n \nRequires Gecko 1.9\n :-moz-tree-column\n :-moz-tree-drop-feedback\n :-moz-tree-image\n :-moz-tree-indentation\n :-moz-tree-line\n :-moz-tree-progressmeter\n :-moz-tree-row\n :-moz-tree-row(hover)\n \nRequires Gecko 1.9\n :-moz-tree-separator\n :-moz-tree-twisty\n :-moz-ui-invalid\n\nRequires Gecko 2.0\n :-moz-ui-valid\n\nRequires Gecko 2.0\n :-moz-user-disabled\n \nRequires Gecko 1.9\n ::-moz-viewport\n  ::-moz-viewport-scroll\n  :-moz-window-inactive\n \nRequires Gecko 2.0\n ::-moz-xul-anonymous-block\n \nAt-rules\n @-moz-document\n\n\nMedia Queries\n -moz-images-in-menus\n \nRequires Gecko 1.9.2\n -moz-mac-graphite-theme\n \nRequires Gecko 1.9.2\n -moz-maemo-classic\n \nRequires Gecko 1.9.2\n -moz-device-pixel-ratio\n \nRequires Gecko 2.0\n -moz-scrollbar-end-backward\n \nRequires Gecko 1.9.2\n -moz-scrollbar-end-forward\n \nRequires Gecko 1.9.2\n -moz-scrollbar-start-backward\n \nRequires Gecko 1.9.2\n -moz-scrollbar-start-forward\n \nRequires Gecko 1.9.2\n -moz-scrollbar-thumb-proportional\n \nRequires Gecko 1.9.2\n -moz-touch-enabled\n \nRequires Gecko 1.9.2\n -moz-windows-classic\n \nRequires Gecko 1.9.2\n -moz-windows-compositor\n \nRequires Gecko 1.9.2\n -moz-windows-default-theme\n \nRequires Gecko 1.9.2\n -moz-windows-theme\n \nRequires Gecko 2.0\n\n\nOthers\n -moz-math-columnline\n -moz-math-firstcolumn\n -moz-math-firstrow\n -moz-math-font-size\n -moz-math-font-style\n -moz-math-lastcolumn\n -moz-math-lastrow\n -moz-math-rowline\n -moz-alt-content\n \n\nbug 11011\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation-delay","title":"animation-delay","description":"Summary\nThe animation-delay property specifies when the animation should start. This lets the animation sequence begin some time after it's applied to an element.\nA value of 0 (the default) indicates that the animation should begin as soon as it's applied. Otherwise, the value specifies an offset from the moment the animation is applied to the element; animation will begin that amount of time after being applied.\nSpecifying a negative value for the animation delay causes the animation to begin executing immediately. However, it will appear to have begun executing partway through its cycle. For example, if you specify -1s as the animation delay time, the animation will begin immediately but will start 1 second into the animation sequence.\nIf you specify a negative value for the animation delay, but the starting value is implicit, the starting value is taken from the moment the animation is applied to the element.\nIt is often convenient to use the shorthand property animation\n to set all animation properties at once.\n Initial value\n: 0 Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nanimation-delay: &lt;time&gt; [, &lt;time&gt;]*\n\nValues\n &lt;time&gt; The time offset from the time at which the animation is applied to the element at which the animation should begin. This may be specified in either seconds (by specifying &quot;s&quot; as the unit) or milliseconds (by specifying &quot;ms&quot; as the unit). If you don't specify a unit, seconds are assumed.\nValues\n &lt;time&gt; The time offset from the time at which the animation is applied to the element at which the animation should begin. This may be specified in either seconds (by specifying &quot;s&quot; as the unit) or milliseconds (by specifying &quot;ms&quot; as the unit). If you don't specify a unit, seconds are assumed.\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz 10 \n-ms [1] ? 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n \nCSS Animations Module Level 3: animation-delayWD\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation-direction","title":"animation-direction","description":"Summary\nThe animation-direction CSS property indicates whether the animation should play in reverse on alternate cycles.\nIt is often convenient to use the shorthand property animation\n to set all animation properties at once.\n Initial value\n: normal Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nanimation-direction: normal | alternate [, normal | alternate]*\n\nValues\n normal The animation should play forward each cycle. In other words, each time the animation cycles, the animation will reset to the beginning state and start over again. This is the default animation direction setting. alternate The animation should reverse direction each cycle. When playing in reverse, the animation steps are performed backward. In addition, timing functions are also reversed; for example, an ease-in animation is replaced with an ease-out animation when played in reverse.\n\nValues\n normal The animation should play forward each cycle. In other words, each time the animation cycles, the animation will reset to the beginning state and start over again. This is the default animation direction setting. alternate The animation should reverse direction each cycle. When playing in reverse, the animation steps are performed backward. In addition, timing functions are also reversed; for example, an ease-in animation is replaced with an ease-out animation when played in reverse.\n\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz 10 \n-ms [1] ? 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n \nCSS Animations Module Level 3: animation-directionWD\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation-duration","title":"animation-duration","description":"Summary\nThe animation-duration CSS property specifies the length of time that an animation should take to complete one cycle.\nA value of 0 (the default) indicates that no animation should occur.\nIt is often convenient to use the shorthand property animation\n to set all animation properties at once.\n Initial value\n: 0 Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nanimation-duration: &lt;time&gt; [, &lt;time&gt;]*\n\nValues\n &lt;time&gt; The duration that an animation should take to complete one cycle. This may be specified in either seconds (by specifying &quot;s&quot; as the unit) or milliseconds (by specifying &quot;ms&quot; as the unit). If you don't specify a unit, seconds are assumed.\n\nNote: Negative values are treated as 0.\nValues\n &lt;time&gt; The duration that an animation should take to complete one cycle. This may be specified in either seconds (by specifying &quot;s&quot; as the unit) or milliseconds (by specifying &quot;ms&quot; as the unit). If you don't specify a unit, seconds are assumed.\n\nNote: Negative values are treated as 0.\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 3.0\n-webkit 5.0 (5.0)\n\n-moz 10 \n-ms [1] -- 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support 2.0\n-webkit 5.0 (5.0)\n\n-moz -- -- 4.2\n-webkit   \n\nSpecifications\n \nCSS Animations Module Level 3: animation-durationWD\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation-fill-mode","title":"animation-fill-mode","description":"Summary\nThe animation-fill-mode property specifies how a CSS animation should apply styles to its target before and after it is executing.\n Initial value\n: none Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nanimation-fill-mode: none | forwards | backwards | both [, none | forwards | backwards | both]*\n\nValues\n none The animation will not apply any styles to the target before or after it is executing. forwards The target will retain the computed values set by the last keyframe encountered during execution. This is usually the '100%' or 'to' keyframe, unless animation-direction\n is 'alternate' and animation-iteration-count\n is set to an even number, in which case it is the '0%' or 'to' keyframe. backwards The animation will apply the values defined in the '0%' or 'from' keyframe as soon as it is applied to the target, and retain this during the animation-delay\n period. both The animation will follow the rules for both forwards and backwards, thus extending the animation properties in both directions.\n\nValues\n none The animation will not apply any styles to the target before or after it is executing. forwards The target will retain the computed values set by the last keyframe encountered during execution. This is usually the '100%' or 'to' keyframe, unless animation-direction\n is 'alternate' and animation-iteration-count\n is set to an even number, in which case it is the '0%' or 'to' keyframe. backwards The animation will apply the values defined in the '0%' or 'from' keyframe as soon as it is applied to the target, and retain this during the animation-delay\n period. both The animation will follow the rules for both forwards and backwards, thus extending the animation properties in both directions.\n\nExamples\n\r\n          h1 {\n  animation-fill-mode: forwards;\n}\r\n        \nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz 10 \n-ms [1] ? 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n \nCSS Animations Module Level 3: animation-fill-modeED\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation-name","title":"animation-name","description":"Summary\nThe animation-name CSS property specifies a list of animations that should be applied to the selected element. Each name indicates a @keyframes\n at-rule that defines the property values for the animation sequence.\nIt is often convenient to use the shorthand property animation\n to set all animation properties at once.\n Initial value\n: none Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nanimation-name: none | &lt;name&gt; [, none | &lt;name&gt;]*\n\nValues\n &lt;name&gt; A string identifying the animation.\n\nValues\n &lt;name&gt; A string identifying the animation.\n\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz 10 \n-ms [1] ? 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n \nCSS Animations Module Level 3: animation-nameWD\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation-iteration-count","title":"animation-iteration-count","description":"Summary\nThe animation-iteration-count CSS property defines the number of times an animation cycle should be played before stopping.\nIt is often convenient to use the shorthand property animation\n to set all animation properties at once.\n Initial value\n: 1 Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nanimation-iteration-count: infinite | &lt;number&gt; [, infinite | &lt;number&gt;]*\n\nValues\n infinite The animation will repeat forever. &lt;number&gt; The number of times the animation should repeat; this is 1 by default. Negative values are treated like 0. You may specify non-integer values to play part of an animation cycle (for example 0.5 will play half of the animation cycle).\n\nValues\n infinite The animation will repeat forever. &lt;number&gt; The number of times the animation should repeat; this is 1 by default. Negative values are treated like 0. You may specify non-integer values to play part of an animation cycle (for example 0.5 will play half of the animation cycle).\n\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz 10 \n-ms [1] ? 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n \nCSS Animations Module Level 3: animation-iteration-countWD\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation-play-state","title":"animation-play-state","description":"Summary\nThe animation-play-state CSS property determines whether an animation is running or paused. You can query this property's value to determine whether or not the animation is currently running; in addition, you can set its value to pause and resume playback of an animation.\nNote: At this time, this property is being considered for removal from the specification, since its functionality can be simulated by other means.\nResuming a paused animation will start the animation from where it left off at the time it was paused, rather than starting over from the beginning of the animation sequence.\n Initial value\n: running Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nanimation-play-state: running | paused [, running | paused]*\n\nValues\n running The animation is currently playing. paused The animation is currently paused.\n\nValues\n running The animation is currently playing. paused The animation is currently paused.\n\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz ? ? (Supported)\n-webkit  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n \nCSS Animations Module Level 3: animation-play-stateWD\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/animation-timing-function","title":"animation-timing-function","description":"Summary\nThe animation-timing-function property specifies how a CSS animation should progress over the duration of each cycle. The possible values are one or several &lt;timing-function&gt;\n .\nFor keyframed animations, the timing function applies between keyframes rather than over the entire animation. In other words, the timing function is applied at the start of the keyframe and at the end of the keyframe.\nAn animation timing function defined within a keyframe block applies to that keyframe; otherwise. If no timing function is specified for the keyframe, the timing function specified for the overall animation is used.\nIt is often convenient to use the shorthand property animation\n to set all animation properties at once.\n Initial value\n: ease Applies to: block-level and inline-level elements Inherited\n: no Media: visual\n  Computed value\n: as specified\nSyntax\nanimation-timing-function: &lt;timing-function&gt; [, &lt;timing-function&gt;]*\n\nwhere:\n Each &lt;timing-function&gt;\n  represents the timing function to link to the corresponding property to animate, as defined in animation-property\n.\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz 10 \n-ms [1] ? 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n \nCSS Animations Module Level 3: animation-timing-functionWD\n\nSee also\n CSS animations AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/backface-visibility","title":"backface-visibility","description":"Summary\nThe backface-visibility CSS property determines whether or not the back face of the element is visible when facing the user. The back face of an element always is a transparent background, letting, when visible, a mirror image of the front face be displayed.\nThere are cases when we do not want the front face of an element to be visible through the back face, like when doing a flipping card effect (setting two elements side-to-side).\n Initial value\n : visible Applies to : block and inline elements Inherited\n: no Media: visual\n  Computed value\n: same as specified value.\n\nSyntax\nbackface-visibility: visibility\n\nwhere :\n visibility Is a keyword indicating if the backface must be visible or not. It can have the following values:  visible meaning that the back face is visible, allowing the front face to be displayed mirrored; hidden meaning that the back face is not visible, hiding the front face.  \n\nExamples\n   backface-visibility: visible; backface-visibility: hidden;      1 2 3 4 5 6       1 2 3 4 5 6   Though not opaque, the front sides don't let the back faces of the hidden sides to be displayed.   \n\nSpecifications\n   Specification Status Comment     CSS 3D Transforms Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 12\n-webkit 10.0 (10)\n\n-moz 10\n-ms -- (Supported)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 3.0\n-webkit 10.0 (10)\n\n-moz ? -- (Supported)\n-webkit   \n\nSee also\n CSS Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background","title":"background","description":"Summary\nThe background CSS property is a shorthand property for setting the individual background property values in a single place in the style sheet. background can be used to set the values for one or more of: background-color\n, background-image\n, background-position\n, background-repeat\n, -moz-background-size\n, and background-attachment\n.\nThe background shorthand property assigns explicit given values and sets missing properties to their initial values.\n Initial value\n:&nbsp; transparent || none || repeat || scroll || 0% 0% Applies to: all elements Inherited\n: no Percentages: allowed on background-position\n Media: visual\n  Computed value\n: see individual properties\n\nSyntax\n\nbackground:  [&lt;bg-layer&gt;, ]* &lt;final-bg-layer&gt;\n\nWhere:\n &lt;bg-layer&gt; [ &lt;background-image&gt; || &lt;background-repeat&gt; || &lt;background-attachment&gt; || &lt;background-position&gt; ] |&nbsp; inherit\n &lt;final-bg-layer&gt; [ &lt;background-color&gt; || &lt;background-image&gt; || &lt;background-repeat&gt; || &lt;background-attachment&gt; || &lt;background-position&gt; ] |&nbsp; inherit\n\n\nNote: The background-color can only be defined on the last background, as there is only one background color for the whole element.\n \nGecko 1.9.2 note(Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n Support for multiple backgrounds was added in Gecko 1.9.2; prior to this, only a single background could be specified.\n\n \nGecko 2.0 note(Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\n Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n introduced support for using SVG images as CSS&nbsp;backgrounds.\nValues\nOne or more of the following, in any order:\n &lt;background-color&gt; See background-color\n &lt;background-image&gt; See background-image\n &lt;background-repeat&gt; See background-repeat\n &lt;background-attachment&gt; See background-attachment\n &lt;background-position&gt; See background-position\n\n\nExamples\n\nView Live Examples\n\nbody { background: red; }\n\n.topbanner { background: url(&quot;topbanner.png&quot;) #00D repeat-y fixed; }\n\nNotes\nThe background property first sets the individual background properties to their initial values, then assigns the explicit values specified in the declaration. You do not have to define a value for each of the individual properties, only those you want to change from their initial defaults.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 1.0 (1.7 or earlier)\n 1.0 4.0 3.5 1.0   Multiple backgrounds 3.6 (1.9.2)\n 1.0 9.0 10.5 1.3  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 (1.9.2)\n 2.1 ? 10.0 3.2   Multiple backgrounds 1.0 (1.9.2)\n 2.1 ? 10.0 3.2  \n\n\nSpecifications\n CSS Backgrounds and Borders Module Level 3 CSS 2.1 Colors and backgrounds #background\n\nSee also\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n -moz-background-size\n, -moz-background-inline-policy\n Using gradients Multiple backgrounds\n\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background-attachment","title":"background-attachment","description":"Summary\nIf a background-image\n is specified, background-attachment determines whether that image's position is fixed within the viewport, or scrolls along with its containing block.\n Initial value\n: scroll Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nbackground-attachment:  &lt;attachment&gt;[, &lt;attachment&gt;]*\n\nWhere:\n &lt;attachment&gt; scroll | fixed | local\n\n\n\nGecko 1.9.2 noteGecko 1.9.2 introduced support for multiple background images; prior to 1.9.2, only one  value is supported.\nValues\n scroll If scroll is specified, the background image will scroll within the viewport along with the block the image is contained within. fixed If fixed is specified, the background image will not scroll with its containing element, instead remaining stationary within the viewport. local \nUnimplemented\n in Gecko (Firefox)\n\nExamples\n\nView Live Examples\n\nbody {\n\tbackground-image: url(&quot;images\/cartooncat.png&quot;);\n\tbackground-attachment: fixed;\n}\n\nMultiple background image support\nGecko 1.9.2 supports multiple background images. You can specify a different &lt;attachment&gt; for each background, separated by commas:\n\nbody {\n&nbsp; background-image: url(&quot;img1.png&quot;), url(&quot;img2.png&quot;);\n&nbsp; background-attachment: scroll, fixed;\n} \n\nEach image is matched with the corresponding attachment type, from first specified to last.\nMultiple background image support\nGecko 1.9.2 supports multiple background images. You can specify a different &lt;attachment&gt; for each background, separated by commas:\n\nbody {\n&nbsp; background-image: url(&quot;img1.png&quot;), url(&quot;img2.png&quot;);\n&nbsp; background-attachment: scroll, fixed;\n} \n\nEach image is matched with the corresponding attachment type, from first specified to last.\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7 or earlier)\n 4.0 3.5 1.0   Multiple backgrounds 1.0 3.6 (1.9.2)\n 9.0 10.5 1.3   local 4.0 -- [1] 9.0 10.5 5.0   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 2.1 1.0 (1.9.2)\n ? 10.0 3.2   Multiple backgrounds 2.1 1.0 (1.9.2)\n ? 10.0 3.2   local ? -- [2] ? ? ?   \n\nSpecifications\n CSS 2.1 Colors and Backgrounds #background-attachment CSS 3 Backgrounds and Borders #background-attachment&nbsp;\n\nSee also\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n Multiple backgrounds Quirksmode background compatibility\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background-clip","title":"background-clip | -moz-background-clip","description":"Summary\nThe background-clip CSS property specifies whether an element's background, either the color or image, extends underneath its border.\n-moz-background-clip is supported up to Gecko version 1.9.2 (Firefox 3.6). To support both, older and newer versions of Gecko (Firefox), you have to add both properties in the stylesheet (see examples).\nIf there is no background-image, this property has only visual effect when the border has transparent regions (because of border-style\n) or partially opaque regions; otherwise the border covers up the difference.\n Initial value\n: border-box Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nbackground-clip:  [ border-box | padding-box | content-box][, [ border-box | padding-box | content-box]]*\n\n-moz-background-clip:  [border | padding][, [border | padding]]* &nbsp; \/* Gecko 1.2-1.9.2 (Firefox 1.0-3.6) *\/\n\nValues\n border-box \nRequires Gecko 2.0\n border (Firefox 1.0-3.6) The background extends to the outside edge of the border (but underneath the border in z-ordering). Default value, but see Browser compatibility section below for special case Internet Explorer 7. padding-box \nRequires Gecko 2.0\n padding (Firefox 1.0-3.6) No background is drawn below the border (background extends to the outside edge of the padding). content-box \nRequires Gecko 2.0\n The background is painted within (clipped to) the content box.\n\nExamples\n\n pre {\n   border: 5px navy;\n   border-style: dotted double;\n   background: #F8D575;\n   \/* The yellow background will not go behind the border *\/\n      -moz-background-clip: padding;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \/* Firefox 1.0-3.6 *\/\n&nbsp;&nbsp; -webkit-background-clip: padding-box;&nbsp; \/* Safari, Chrome *\/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; background-clip: padding-box;&nbsp; \/* Firefox 4.0+, Opera 10.5, Chrome *\/\n&nbsp;}\n\nBrowser compatibility\n   Browser Lowest version Support of   Chrome 1.0 -webkit-background-clip: padding | border | content -webkit-background-clip: padding-box | border-box | content-box   1.0  background-clip: padding-box | border-box background-clip: padding-box | border-box | content-box    Firefox (Gecko) 1.0-3.6 (1.2-1.9.2) -moz-background-clip: padding | border   4.0 (2.0) background-clip: padding-box | border-box | content-box    Internet Explorer 9.0 [*] background-clip: padding-box | border-box | content-box   Opera 10.5 background-clip: padding-box | border-box   Safari (WebKit) 3.0 (522) -webkit-background-clip: padding | border | content -webkit-background-clip: padding-box | border-box | content-box  \n\n [*]&nbsp; IE 7 (not other versions of IE) behaves like background-clip:padding if overflow: hidden | auto | scroll.  Konqueror 3.5.4 supports -khtml-background-clip.\n\nSpecifications\n CSS 3 Backgrounds and Borders #background-clip Latest Editor's Draft (includes content-box)\n\nSee also\n -moz-background-size\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n clip\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background-color","title":"background-color","description":"Summary\nbackground-color sets the background color of an element, either through a color value or the keyword transparent.\n Initial value\n: transparent Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nbackground-color: color | transparent | inherit\n\nValues\n color&nbsp; The color can be specified as a hexadecimal RGB value, a regular RGB value, or by using one of the pre-defined color keywords. transparent&nbsp; The default value for background-color is transparent meaning the element has no color of its own, instead showing the color of the element behind it.\n\nExamples\n\nView Live Examples\n\n.exampleOne {\n\tbackground-color: teal;\n\tcolor: white;\n}\n\n.exampleTwo {\n\tbackground-color: rgb(153,102,153);\n\tcolor: rgb(255,255,204);\n}\n\n.exampleThree {\n\tbackground-color: #666699;\n\tcolor: #FFFFFF;\n}\n\n\nNotes\nColor reference: See color values.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari (WebKit)   Basic support 1.0 (1.7 or earlier)\n 1.0 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE Phone Opera Mobile Safari Mobile   Basic support 1.0 (1.9.2)\n (Supported) (Supported) (Supported) (Supported)  \n\n\nSpecifications\n CSS 2.1 Colors and Backgrounds CSS 3 Backgrounds &amp; Borders\n\nSee also\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n Multiple backgrounds\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background-image","title":"background-image","description":"Summary\nThe background-image CSS property sets the background image for an element. It is often more convenient to use the shorthand background\n.\n Initial value\n: none Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: absolute URI or none\n\nSyntax\n\nbackground-image:  &lt;bg-image&gt;[, &lt;bg-image&gt;]*\n\nWhere:\n &lt;bg-image&gt; &lt;image&gt;\n  | none\n\n\n\nGecko 1.9.2 noteSupport for multiple, comma-separated, background images was added in Gecko 1.9.2.\n \nGecko 2.0 note(Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\n Starting in Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n, you can use SVG images as CSS&nbsp;backgrounds.\nValues\n &lt;uri&gt; The location of the image resource to be used as a background image. none Used to specify that an element is to have no background image.\n\nExamples\n\nView Live Examples\n\nbody { background-image: url(&quot;images\/darkpattern.png&quot;); }\n\ndiv { background-image:&nbsp;url(&quot;images\/foo.png&quot;), url(&quot;images\/bar.png&quot;); }\n\np { background-image: none; }\n\nNotes\nDevelopers should ensure that they specify a background-color\n to be used if an image is not available. Background images are rendered on top of the background color.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 1.0 (1.7 or earlier)\n 1.0 4.0 3.5 1.0   Multiple backgrounds 3.6 (1.9.2)\n 1.0 9.0 yes 1.3   Gradients 3.6 (1.9.2)\n\n-moz 1.0\n-webkit -- -- 4.0\n-webkit   SVG background 4.0 (2.0)\n 8.0 9.0 9.5 5.0  \n\n\n\n   Feature iOS Safari Opera Mini Opera Mobile Android Browser   Basic support yes yes yes yes   Multiple backgrounds yes yes yes yes   Gradients yes \n-webkit ? ? yes\n-webkit   SVG background yes, but see below yes yes --  \n\n\nNotes\n Support of SVG in CSS background is incomplete in the current version of iOS Safari (4.2-4.3). The same for Safari prior 5.0.\n\nNotes\n Support of SVG in CSS background is incomplete in the current version of iOS Safari (4.2-4.3). The same for Safari prior 5.0.\n\nSpecifications\n CSS 2.1 Colors and backgrounds #background-image CSS 3 Backgrounds and borders #background-image\n\nSee also\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n -moz-linear-gradient\n, -moz-radial-gradient\n -moz-image-rect\n Multiple backgrounds When can I use SVG in CSS backgrounds?\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background-origin","title":"background-origin","description":"Summary\nThe background-origin CSS property determines the background positioning area (the origin of a background-image). background-origin does not apply when background-attachment\n is fixed.\nThis property is reset to its initial value by the background\n shorthand property.\n Initial value\n: padding\n Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: as specified  \nSyntax\n\n\/* since Gecko 2.0 (Firefox 4.0) *\/\nbackground-origin: [padding-box | border-box | content-box][, [border-box | padding-box | content-box]]*\n\n\/* older versions (multiple backgrounds since Gecko 1.9.2 \/ Firefox 3.6) *\/\n-moz-background-origin: [padding | border | content][, [border | padding | content]]*\n\nValues\n  padding-box \nNew in Firefox 4\n padding (Firefox 1.0-3.6) Default value. The background position is relative to the padding. (For single boxes &quot;0 0&quot; is the upper left corner of the padding edge, &quot;100% 100%&quot; is the lower right corner.) border-box \nNew in Firefox 4\n border (Firefox 1.0-3.6) The background position is relative to the border, so the image can go behind the border. content-box \nNew in Firefox 4\n content (Firefox 1.0-3.6) The background position is relative to the content.\n\nExamples\n\n .example {\n   border: 10px double;\n   padding: 10px;\n   background: url('image.jpg');\n   background-position: center left;\n   \/* The background will be inside the padding *\/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n &nbsp; -moz-background-origin: content;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \/* Firefox 1.0-3.6 *\/\n&nbsp;&nbsp; -webkit-background-origin: content-box;&nbsp;&nbsp; \/* Safari, Chrome *\/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; background-origin: content-box;&nbsp;&nbsp; \/* Firefox 4.0+ *\/\n}\n\n\ndiv {\n&nbsp; background-image:&nbsp;url('mainback.png'), url('logo.jpg');\n&nbsp; background-position: 0px 0px, top right;\n&nbsp; -moz-background-origin: padding, content;\n&nbsp; -webkit-background-origin: padding-box, content;\n          background-origin: padding-box, content-box;\n}\nBrowser compatibility\n   Browser Lowest version Support of   Chrome 1.0 -webkit-background-origin: padding | border | content  -webkit-background-origin: padding-box | border-box | content-box   1.0 background-origin: padding | border | content  background-origin: padding-box | border-box | content-box   Firefox (Gecko) 1.0-3.6 (1.2-1.9.2) -moz-background-origin: padding | border | content   4.0 (2.0) background-origin: padding-box | border-box | content-box   Internet Explorer 9.0 [*] background-origin: padding-box | border-box | content-box   Opera 10.5 background-origin: padding-box | border-box | content-box   Safari (WebKit) 3.0 (522) -webkit-background-origin: padding | border | content    4.0 -webkit-background-origin: padding-box | border-box | content-box   5.0 background-origin: padding-box | border-box | content-box  \n\n [*] IE up to version 7 behaves as if it were background-origin: border-box; [**] IE 8 behaves as if it were background-origin: padding-box;   Konqueror 3.5.4 supports -khtml-background-origin.\nSpecifications\n CSS 3 Background and borders #background-origin Specifies the values border-box | padding-box | content-box.\n\nSee also\n -moz-background-size\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background-position","title":"background-position","description":"Summary\nThe background-position CSS property sets the initial position of any background image that has been set.\nIt is often more convenient to use the shorthand background\n.\n Initial value\n: 0% 0% Applies to: all elements Inherited\n: no Percentages: refer to the size of the box itself Media: visual\n  Computed value\n: for &lt;length&gt; the absolute value, otherwise a percentage\n\nSyntax\nbackground-position:  &lt;bg-position&gt;[, &lt;bg-position&gt;]*\nbackground-position:  [ &lt;percentage&gt;\n| \n&lt;length&gt;\n| left | center | right  ] \n                      [ &lt;percentage&gt; | &lt;length&gt; | top  | center | bottom ]?\n\nbackground-position:  [ top | center | bottom ]\n\nbackground-position:  inherit\n\n\nWhere:\n &lt;bg-position&gt; is one of: [ &lt;percentage&gt;\n| \n&lt;length&gt;\n| left | center | right&nbsp; ] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [ &lt;percentage&gt; | &lt;length&gt; | top&nbsp; | center | bottom ]? [ top | center | bottom ] inherit\n\n\nValues\nAccepts one or two values, up to four values in supporting browsers. Negative &lt;percentage&gt;\n and \n&lt;length&gt;\n values are allowed.\n If only one value is specified, the second value is assumed to be center. The first value represents the horizontal position and the second represents the vertical position (if at least one value is not a keyword).\n\nThe specifications allow for 4 values enabling offsetting a background image from any corner, not just the top left. If four values are specified, they must include two sides and two offsets. This is not yet fully supported in all browsers.\n &lt;percentage&gt; With a value pair of 0% 0%, (is equal to 0 0) the upper left corner of the image is aligned with the upper left corner of the box's padding edge. A value pair of 100% 100% places the lower right corner of the image in the lower right corner of padding area. With a value pair of 14% 84%, the point 14% across and 84% down the image is to be placed at the point 14% across and 84% down the padding area. &lt;length&gt; With a value pair of 2cm 1cm, the upper left corner of the image is placed 2cm to the right and 1cm below the upper left corner of the padding area. top Equivalent to 0% for the vertical position. right Equivalent to 100% for the horizontal position. bottom Equivalent to 100% for the vertical position. left Equivalent to 0% for the horizontal position. center Equivalent to 50% for the horizontal position if it is not otherwise given, or 50% for the vertical position if it is.\n\nExamples\n\nView the live example\n\n.exampleone {\n\tbackground-image: url(&quot;logo.png&quot;);\n\tbackground-position: top;\n}\n\n.exampletwo {\n\tbackground-image: url(&quot;logo.png&quot;);\n\tbackground-position: 25% 75%;\n}\n\n.examplethree {\n\tbackground: url(&quot;logo.png&quot;) 2cm bottom;\n}\n\n.examplefour {\n\tbackground-image: url(&quot;logo.png&quot;);\n\tbackground-position: center 10%;\n}\n\n.examplefive {\n\tbackground: url(&quot;logo.png&quot;) 3em 50%;\n}\n\n.examplesix {\n\tbackground-image: url(&quot;logo.png&quot;);\n\tbackground-position: right 20px bottom 20px;\n\n&nbsp;\nMultiple background image support\nGecko 1.9.2 supports multiple background images. You can specify a different &lt;bg-position&gt; for each background, separated by commas:\n.examplesix {\n&nbsp; background-image: url(&quot;img1.png&quot;), url(&quot;img2.png&quot;);\n&nbsp; background-position: 0px 0px, center;\n} \n\nEach image is matched with the corresponding position style, from first specified to last.\nMultiple background image support\nGecko 1.9.2 supports multiple background images. You can specify a different &lt;bg-position&gt; for each background, separated by commas:\n.examplesix {\n&nbsp; background-image: url(&quot;img1.png&quot;), url(&quot;img2.png&quot;);\n&nbsp; background-position: 0px 0px, center;\n} \n\nEach image is matched with the corresponding position style, from first specified to last.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7 or earlier)\n 4.0 3.5 1.0 (85)   Multiple backgrounds 1.0 3.6 (1.9.2)\n 9.0 10.5 1.3 (312)   Four values -- -- 9.0 10.5 --   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support (Supported) 1.0 (1)\n (Supported) (Supported) (Supported)   Multiple backgrounds ? 1.0 (1.9.2)\n ? ? ?   Four values -- -- ? ? --   \n\nSpecifications\n CSS 2.1 Colors and backgrounds #background-position CSS Backgrounds and Borders Module Level 3\n\nSee also\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n Multiple backgrounds\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background-repeat","title":"background-repeat","description":"Summary\nbackground-repeat specifies whether the image is repeated (tiled), and how.\n Initial value\n: repeat Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: as specified\n\nSyntax\nbackground-repeat: &lt;repeat-style&gt;[, &lt;repeat-style&gt;]*\n\nWhere:\n &lt;repeat-style&gt; repeat | repeat-x | repeat-y | no-repeat | inherit | round | space&nbsp;\n\n\n\nGecko 1.9.2 noteGecko 1.9.2 added support for multiple background repeat values.\nValues\n repeat The image is repeated both horizontally and vertically. repeat-x The image is repeated horizontally only. repeat-y The image is repeated vertically only. no-repeat The image is not repeated; only one copy of the image is drawn. space The image is repeated as many times as can fully fit, separated by white space if repeating does not create an exact fit. round &nbsp;The image is repeated as often as will fit. If it doesn't fit a whole number of times, the background images are rescaled so they do.\n\n If a &lt;repeat-style&gt; value specifies two keywords, the first is for the horizontal direction and the second is for the vertical direction. Examples \nView the live example\n .exampleone {\n\tbackground-image: url(&quot;logo.png&quot;);\n\tbackground-repeat: repeat-x;\n}\n\n.exampletwo {\n\tbackground-image: url(&quot;logo.png&quot;);\n\tbackground-repeat: no-repeat;\n}\n Multiple background image support Gecko 1.9.2 supports multiple background images. You can specify a different &lt;repeat-style&gt; for each background, separated by commas: .examplethree {\n&nbsp; background-image: url(&quot;img1.png&quot;), url(&quot;img2.png&quot;);\n&nbsp; background-repeat:&nbsp;repeat-x, repeat-y;\n} \n Each image is matched with the corresponding repeat style, from first specified to last. Specifications  CSS 1 CSS 2.1 CSS 3  Browser compatibility    Browser Lowest Version Space | Round Multiple Backgrounds Different Values for X &amp; Y   Chrome 1.0 -- 1.0 &radic;   Firefox (Gecko) 1.0 (1.0) -- 3.6 (1.9.2) --   Internet Explorer 4.0 9.0 9.0 9.0   Opera 3.5 10.5 10.5 &radic;   Safari (Webkit) 1.0 (85) -- 1.3 (312) &radic;    Round \/ Space values are supported in IE9+ and Opera 11+ See also  background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n Multiple backgrounds  \nExamples \nView the live example\n .exampleone {\n\tbackground-image: url(&quot;logo.png&quot;);\n\tbackground-repeat: repeat-x;\n}\n\n.exampletwo {\n\tbackground-image: url(&quot;logo.png&quot;);\n\tbackground-repeat: no-repeat;\n}\n Multiple background image support Gecko 1.9.2 supports multiple background images. You can specify a different &lt;repeat-style&gt; for each background, separated by commas: .examplethree {\n&nbsp; background-image: url(&quot;img1.png&quot;), url(&quot;img2.png&quot;);\n&nbsp; background-repeat:&nbsp;repeat-x, repeat-y;\n} \n Each image is matched with the corresponding repeat style, from first specified to last. Multiple background image support Gecko 1.9.2 supports multiple background images. You can specify a different &lt;repeat-style&gt; for each background, separated by commas: .examplethree {\n&nbsp; background-image: url(&quot;img1.png&quot;), url(&quot;img2.png&quot;);\n&nbsp; background-repeat:&nbsp;repeat-x, repeat-y;\n} \n Each image is matched with the corresponding repeat style, from first specified to last. Specifications  CSS 1 CSS 2.1 CSS 3  Browser compatibility    Browser Lowest Version Space | Round Multiple Backgrounds Different Values for X &amp; Y   Chrome 1.0 -- 1.0 &radic;   Firefox (Gecko) 1.0 (1.0) -- 3.6 (1.9.2) --   Internet Explorer 4.0 9.0 9.0 9.0   Opera 3.5 10.5 10.5 &radic;   Safari (Webkit) 1.0 (85) -- 1.3 (312) &radic;    Round \/ Space values are supported in IE9+ and Opera 11+ See also  background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n Multiple backgrounds  \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border","title":"border","description":"Summary\nThe border property is a shorthand property for setting the individual border property values in a single place in the style sheet. border can be used to set the values for one or more of: border-width\n, border-style\n, border-color\n.\n Initial value\n: see individual properties for details Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: see individual properties\n\nSyntax\n\nborder:  [ &lt;border-width&gt; || &lt;border-style&gt; || &lt;border-color&gt; ] | inherit\n\nValues\n border-width Optional, default value medium is used if absent. See border-width\n. border-style&nbsp; Required, default value none is used if absent. See border-style\n. border-color&nbsp; Optional, default value if absent: The value of the element's color\n property (foreground color). See border-color\n.\n\nExamples\n\nView Live Examples\n\nelement { border: dashed }          \/* dashed border of medium thickness, the same color as the text *\/\nelement { border: dotted 1.5em }    \/* dotted, 1.5em thick border, the same color as the text *\/\nelement { border: solid red }       \/* solid, red border of medium thickness *\/\nelement { border: solid blue 10px } \/* solid, blue border of 10px thickness *\/\n\nNotes\nWhile the border-width\n, border-style\n, and border-color\n properties accept up to four values, this property only accepts one value for each property.\nSpecifications\n CSS 1 CSS 2.1 Box #border-shorthand CSS 3 Backgrounds and Borders #border-shorthand\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 1.0 (1.7 or earlier)\n 1.0 4.0 3.5 1.0 (85) [1]   \n\n    Feature Firefox Mobile (Gecko) Android IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 (1.9.2)\n ? ? ? 1.0 [2]   \n\nSee also\n\nborder\n, border-width\n, border-style\n, border-color\n, margin\n, padding\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/background-size","title":"background-size","description":"Summary\nThe background-size CSS property specifies the size of the background images.\n Initial value\n: auto Applies to: all elements Inherited\n: no Percentages: see below Media: visual\n  Computed value\n: for &lt;length&gt; the absolute value, otherwise a percentage\n\nSyntax\nbackground-size:  &lt;bg-size&gt;[, &lt;bg-size&gt;]*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \/* Gecko 2.0 (Firefox 4.0) and later *\/\n\nWhere &lt;bg-size&gt; is one of:\n [ &lt;percentage&gt;\n| \n&lt;length&gt;\n| auto ] [ &lt;percentage&gt;\n| \n&lt;length&gt;\n| auto ] ? contain  cover\n\nMultiple values apply to individual background layers, from front to back, in the same manner as for all other background properties.\nValues\n &lt;percentage&gt; Scales the background image in the desired dimension to the specified percentage of the background positioning area, which is determined by the value of background-origin\n. The background positioning area is, by default, the area containing the content of the box and its padding; the area may also be changed to just the content or to the area containing borders, padding, and content. If the background's attachment\n is fixed, the background positioning area is instead the entire area of the browser window, not including the area covered by scrollbars if they are present. &lt;length&gt; Scales the background image to the specified length in the desired dimension. auto Scales the background image in the relevant direction such that its intrinsic proportion is maintained.\n\nThe first value determines how the image is scaled horizontally, the second how it is scaled vertically. If only one value is specified, the second value is implicitly auto.&nbsp; Negative sizes are not allowed.\n contain Specifies that the background image should be scaled to be as large as possible while ensuring both its dimensions are less than or equal to the corresponding dimensions of the background positioning area. cover Specifies that the background image should be scaled to be as small as possible while ensuring both its dimensions are greater than or equal to the corresponding dimensions of the background positioning area.\n\nInterpretation of possible values depends on the image's intrinsic dimensions (width and height) and intrinsic proportion (ratio of width and height).&nbsp; A bitmap image always has intrinsic dimensions and an intrinsic proportion.&nbsp; A vector image may have both intrinsic dimensions (and thus must have an intrinsic proportion).&nbsp; It also may have one or no intrinsic dimension, and in either case it might or might not have an intrinsic proportion.&nbsp; Gradients are treated as images with no intrinsic dimensions or intrinsic proportion.\n \nGecko 8.0 note(Firefox 8.0 \/ Thunderbird 8.0 \/ SeaMonkey 2.5)\n\n This behavior changed in Gecko 8.0 (Firefox 8.0 \/ Thunderbird 8.0 \/ SeaMonkey 2.5)\n. Before this, gradients were treated as images with no intrinsic dimensions, with an intrinsic proportion identical to that of the background positioning area.\n\nBackground images generated from elements using -moz-element\n (which actually match an element) are currently treated as images with the dimensions of the element, or of the background positioning area if the element is SVG, with the corresponding intrinsic proportion.\nNote: This is not the currently-specified behavior, which is that the intrinsic dimensions and proportion should be those of the element in all cases.\nThe rendered size of the background image is then computed as follows:\n If both components of background-size are specified and are not auto: The background image renders at the specified size. If the background-size is contain or cover: The image is rendered, preserving its intrinsic proportion, at the largest size contained within, or covering, the background positioning area.&nbsp; If the image has no intrinsic proportion, then it is rendered at the size of the background positioning area. If the background-size is auto or auto auto: If the image has both intrinsic dimensions, it is rendered at that size.&nbsp; If it has no intrinsic dimensions and no intrinsic proportion, it is rendered at the size of the background positioning area.&nbsp; If it has no dimensions but has a proportion, it's rendered as if contain had been specified instead.&nbsp; If the image has one intrinsic dimension and a proportion, it's rendered at the size determined by that one dimension and the proportion.&nbsp; If the image has one intrinsic dimension but no proportion, it's rendered using the intrinsic dimension and the corresponding dimension of the background positioning area. If the background-size has one auto component and one non-auto component: If the image has an intrinsic proportion, then render it using the specified dimension, and compute the other dimension from the specified dimension and the intrinsic proportion.&nbsp; If the image has no intrinsic proportion, use the specified dimension for that dimension.&nbsp; For the other dimension, use the image's corresponding intrinsic dimension if there is one.&nbsp; If there is no such intrinsic dimension, use the corresponding dimension of the background positioning area.\n\nNote that background sizing for vector images that lack intrinsic dimensions or proportion is not yet fully implemented in all browsers.&nbsp; Be careful about relying on the behavior described above, and test in multiple browsers (specifically including versions of Firefox 7 or earlier and Firefox 8 or greater) to be sure different renderings are acceptable.\nExamples\nThis demonstration of background-size: cover and this demonstration of background-size: contain are meant to be opened in new windows so that you can see how contain and cover behave when the background positioning area's dimensions vary. This series of demos of how background-size works and interacts with other background-* properties should pretty much cover the remaining ground in how to use background-size alone and in conjunction with other properties.\nNotes\nWhile this property is new in Gecko 1.9.2 (Firefox 3.6), it is possible to stretch a image fully over the background in Firefox 3.5 by using -moz-border-image\n.\n\r\n          .foo {\n        background-image: url(bg-image.png);\n\n       -moz-background-size: 100% 100%;           \/* Gecko 1.9.2 (Firefox 3.6) *\/\n         -o-background-size: 100% 100%;           \/* Opera 9.5 *\/\n    -webkit-background-size: 100% 100%;           \/* Safari 3.0 *\/\n            background-size: 100% 100%;           \/* Gecko 2.0 (Firefox 4.0) and other CSS3-compliant browsers *\/\n \n       -moz-border-image: url(bg-image.png) 0;    \/* Gecko 1.9.1 (Firefox 3.5) *\/\n}\r\n        \nIf you are specifying a gradient as background and have specified a background-size to go with it, it's best not to specify a size that uses a single auto component, or is specified using only a width value (for example, background-size: 50%).&nbsp; Rendering of gradients in such cases changed in Firefox 8, and at present it is generally inconsistent across browsers, which do not all implement rendering in full accordance with the CSS3 background-size specification and with the CSS3 Image Values gradient specification.\n\r\n          .bar {\n       width: 50px; height: 100px;\n       background-image: gradient(...);\n\n       \/* NOT RECOMMENDED *\/\n       background-size: 25px;\n       background-size: 50%;\n       background-size: auto 50px;\n       background-size: auto 50%;\n\n       \/* OKAY *\/\n       background-size: 25px 50px;\n       background-size: 50% 50%;\n}\r\n        \nNote that it's particularly not recommended to use a pixel dimension and an auto dimension with a gradient, because it's impossible to replicate rendering in versions of Firefox prior to 8, and in browsers not implementing Firefox 8's rendering, without knowing the exact size of the element whose background is being specified.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0\n-webkit 3.6 (1.9.2)\n\n-moz 9.0 9.5\n-o with some bugs (see below) 3.0 (522)\n-webkit but from an older CSS3 draft (see below)   3.0 4.0 (2.0)\n 10.0   Support for contain | cover 3.0 3.6 (1.9.2)\n 9.0 10.0 4.1 (532)   Support for SVG backgrounds ? 8.0 (8.0)\n ? ? ?   \n\n    Feature Android Firefox Mobile (Gecko) Windows Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   Support for SVG backgrounds ? 8.0 (8.0)\n ? ? ?   \n\n As of July 2009, Opera 9.5's computation of the background positioning area is incorrect for fixed backgrounds.&nbsp; Opera 9.5 also interprets the two-value form as a horizontal scaling factor and, from appearances, a vertical clipping dimension. WebKit-based browsers as of July 2009 implement an older draft of CSS3 background-size in which an omitted second value is treated as duplicating the first value; this draft does not include the contain or cover keywords. Konqueror 3.5.4 supports -khtml-background-size. -moz-background-size is no longer supported in Gecko 2.0; you must use background-size instead. See Scaling of SVG backgrounds for details on how SVG images are scaled when used for background-size.\nSpecifications\n CSS 3 Backgrounds and borders #background-size\n\nSee also\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n -moz-background-origin\n, -moz-background-clip\n Multiple backgrounds\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-bottom","title":"border-bottom","description":"Summary\nThe border-bottom property is a shorthand property that sets the values of border-bottom-color\n, border-bottom-style\n, and border-bottom-width\n. These properties describe the bottom border of elements.\n Initial value\n: see individual properties for details Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: see individual properties\n\nSyntax\n\nborder-bottom: [ &lt;border-width&gt; || &lt;border-style&gt; || &lt;border-color&gt; ] | inherit\n\nValues\n &lt;border-width&gt;&nbsp; See border-bottom-width\n. &lt;border-style&gt;&nbsp; See border-bottom-style\n. &lt;border-color&gt;&nbsp; See border-bottom-color\n.\n\nExamples\n\nView Live Examples\n\nelement { \n    border-bottom: 1px solid #000;\n}\n\nNotes\nThe three values of the shorthand property can be specified in any order, and one or two of them may be omitted.\nAs with all shorthand properties, border-bottom always sets the values of all of the properties that it can set, even if they are not specified. It sets those that are not specified to their default values. This means that:\n\n  border-bottom-style: dotted;\n  border-bottom: thick green;\nis actually the same as\n\n  border-bottom-style: dotted;\n  border-bottom: none thick green;\nand the value of border-bottom-style\n given before border-bottom is ignored.\nSince the default value of border-bottom-style\n is none, not specifying the &lt;border-style&gt; part of the value means that the property specifies no border.\nSpecifications\n CSS 1 CSS 2.1 CSS 3\n\nBrowser compatibility\n   Browser Lowest Version   Chrome 1.0   Firefox 1   Internet Explorer 4   Netscape 4   Opera 3.5  \n\nSee also\nborder\n, border-bottom\n, border-bottom-width\n, border-bottom-style\n, border-bottom-color\n,\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-bottom-color","title":"border-bottom-color","description":"Summary\nThe border-bottom-color CSS property sets the color of the bottom border of an element.\nSee border-top-color\n for more and detailed information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-bottom-right-radius","title":"border-bottom-right-radius","description":"Summary\nThe CSS property border-bottom-right-radius sets the rounding of the bottom-right corner of the border. Previous to Gecko 2.0 (Firefox 4.0) this was named  -moz-border-radius-bottomright. \nSee the border-top-left-radius\n and border-radius\n properties for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-bottom-left-radius","title":"border-bottom-left-radius","description":"Summary\nThe CSS property border-bottom-left-radius sets the rounding of the bottom-left corner of the border. Previous to Gecko 2.0 (Firefox 4.0) this was named  -moz-border-radius-bottomleft. \nSee the border-top-left-radius and border-radius properties for more information.\n&nbsp;\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-bottom-style","title":"border-bottom-style","description":"Summary\nborder-bottom-style sets the line style of the bottom border of a box.\n Initial value\n: none\n Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nborder-bottom-style: &lt;border-style&gt; | inherit\n\n&lt;border-style&gt; Values\n none&nbsp; No border. hidden&nbsp; Same as 'none', except in terms of border conflict resolution for table elements. dotted&nbsp; Series of dots. dashed&nbsp; Series of short dashes or line segments. solid&nbsp; Single, straight, solid line. double&nbsp; Two straight lines that add up to the pixel amount defined as border-width. groove&nbsp; Carved effect. ridge&nbsp; Opposite of 'groove'. The border appears 3D (coming out). inset&nbsp; Makes the box appear embedded. outset&nbsp; Opposite of 'inset'. Makes the box appear 3D (embossed).\n\nRelated properties\n border-left-style\n border-right-style\n border-top-style\n border-style\n\n\nExamples\n\nView Live Examples\n\nelement {\n        border-bottom-size: 1px;\n        border-bottom-style: dotted;\n        border-bottom-color: #000;\n}\n\nNotes\nUnless a border-style value is set, your border will not appear because the default value is set to 'none.'\nSpecifications\n CSS 2.1 CSS 3\n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 5.5 9.2 1.0  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee Also\nborder-bottom-style\n, border-bottom\n, border-bottom-color\n, border-bottom-width\n,\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-collapse","title":"border-collapse","description":"Summary\nThe border-collapse CSS property selects a table's border model. This has a big influence on the look and style of the table cells.\nThe separated model is the traditional HTML table border model. Adjacent cells each have their own distinct borders. The distance between them given by the border-spacing\n property.\nIn the collapsed border model, adjacent table cells share borders.\n Initial value\n: separate Applies to: table and inline-table elements Inherited\n: Yes Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nborder-collapse:  collapse | separate | inherit\nValues\n separate Default, use the &quot;separated borders&quot; rendering model collapse Use the &quot;collapsed borders&quot; rendering model\n\nExamples\n\nView Live Examples\n\nth, td { border: solid 1px red; }\ntable { border-collapse: collapse; }\n\n &lt;table border=6&gt;   Browser Layout Engine   Internet Explorer Trident   Firefox Gecko   Opera Presto   Safari WebKit  \n\n &lt;table border=6 style= &quot;border-collapse:collapse&quot;&gt;   Browser Layout Engine   Internet Explorer Trident   Firefox Gecko   Opera Presto   Safari WebKit  \n\nNotes\nIn the &quot;collapsed border&quot; rendering model, the border-style\n value of inset behaves like groove, and outset behaves like ridge.\nSpecifications\n CSS 2.1 Table #borders\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 1.0 (1.7 or earlier)\n 1.0 5.0 4.0 1.2 (125)  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 (1.9.2)\n ? ? ? ?  \n\nSee also\n\n\ncaption-side\n, table-layout\n, border-collapse\n, border-spacing\n, empty-cells\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-bottom-width","title":"border-bottom-width","description":"Summary\nborder-bottom-width sets the width of the bottom border of a box.\n Initial value\n: medium\n Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: absolute length; '0' if the border style is 'none' or 'hidden'\n\nSyntax\n\nborder-bottom-width: &lt;border-width&gt; | inherit\n\n&lt;border-width&gt; Values\n thin A thin border. medium A medium border. thick A thick border. &lt;length&gt; The border's thickness has an explicit value. Explicit border widths cannot be negative.\n\nNote: An em value is also supported.\nRelated properties\n border-left-width\n border-right-width\n border-top-width\n border-width\n\n\n&nbsp;\nExamples\n\nView Live Examples\n\nelement { \n    border-bottom-width: thin;\n    border-bottom-style: solid;\n    border-bottom-color: #000;\n}\n\nSpecifications\n CSS 1 CSS 2.1 CSS 3\n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee Also\nborder\n, border-bottom\n, border-bottom-style\n, border-bottom-color\n,\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-color","title":"border-color","description":"Summary\nThe border-color CSS property is a shorthand property for setting the color of the four sides of an element's border: border-top-color\n, border-right-color\n, border-bottom-color\n, border-left-color\n\n Initial value\n: the element's color\n property Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: the computed value of color by default, or as specified.\n\nSyntax\n\nborder-color:  [ &lt;color&gt; || transparent ]{1,4} | inherit\nValues\nAccepts one, two, tree or four values.\n &lt;color&gt; See &lt;color&gt;\n value for possible keywords and units. transparent The border is not drawn but it still takes up space on the page.\n\nIf one color value is given, it applies to all four borders.\nTwo values apply first to the top and bottom border and second to the left and right border.\nThree values apply first to the top, second to the left and right and third to the bottom border.\nFour values apply to top, right, bottom and left border in that order.\nExamples\n\nView Live Examples\n\npre { \n  border-style: ridge dashed solid;\n  border-color: orange blue;\n}\nNotes\nIn order to see the border you must at least set the border-style\n to something visible.\nSpecifications\n CSS 2.1 #border-color\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 1.0 (1.7 or earlier)\n 1.0 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 (1.9.2)\n ? ? ? ?  \n\n\nMozilla Extensions\nThe following Mozilla extensions set the border sides to multiple colors for Gecko based browsers like Firefox.\n-moz-border-top-colors\n, -moz-border-right-colors\n, -moz-border-bottom-colors\n, -moz-border-left-colors\n\nSee also\nborder\n, border-top-color\n, border-right-color\n, border-bottom-color\n, border-left-color\n, border-width\n, border-style\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-image","title":"border-image","description":"Summary\nThe border-image CSS property allows drawing an image on the borders of elements. This makes drawing complex looking widgets much simpler than it has been and removes the need for nine boxes in some cases.\nWarning: The official CSS&nbsp;3 specification for the border-image property changed significantly between the time this feature was frozen for Gecko 1.9.1 and its release. As such, both the syntax and semantics of this feature will probably change in future releases of Gecko. In particular, the optional border-width override has been removed from the specification and will almost certainly be removed in a future version of Gecko.\nThe border-image is used instead of the border styles given by the border-style\n properties.&nbsp; If the value is none or if the image cannot be displayed, the border styles will be used. An additional background image for the element is drawn on top of the background-image\n.\n Initial value\n: none\n Applies to: all elements, except table elements when border-collapse\n is collapse Inherited\n: no Media: visual\n  Computed value\n: any URI made absolute, any &lt;length&gt; made absolute, other parts as specified\n\nSyntax\nnone | \n  [ &lt;image&gt; [ &lt;number&gt; | &lt;percentage&gt; ]{1,4} [\/ &lt;border-width&gt;{1,4}]? ] &amp;&amp; [ stretch | repeat | round ]{0,2} \nValues\n none No image displayed, other border styles are used. &lt;image&gt; (required) The image value is a &lt;uri&gt;\n, e.g. url(http:\/\/example.org\/image.png) &lt;number&gt; | &lt;percentage&gt; (required) One, two, three or four values represent inward offsets from the top, right, bottom, and left edges of the image (respectively), dividing it into nine regions: four corners, four edges and a middle.  One value belongs to all four sides of the image. Two values belong 1. to top and bottom and 2. to right and left side. Three values belong 1. to top, 2. to the right and left side and 3. to bottom. Four values belong to the top, right, bottom and left edge of the image in that order.  In Gecko 1.9.1 (Firefox 3.5) the middle part of the image is drawn like a background-image of the element. This may change in future versions.  Percentages are relative to the width\/height of the image. Numbers represent pixels in the image (if the image is a raster image) or vector coordinates (if the image is an SVG image). &lt;border-width&gt; (optional) If the slash \/ is present in the property value, the one, two, three or four values after it are used for the width of the border instead of the border-width\n properties. The order of the values is the same as for border-width\n. stretch | round | repeat (optional) One or two keywords, that specify how the images for the sides and the middle part are scaled and tiled. stretch&nbsp; (default value) will cause images to be scaled to fit their box. round &nbsp;&nbsp; will tile the images, but also scale them so that a whole number fit in the box. repeat &nbsp; simply tiles the images inside the box. The first keyword describes how to draw the top, middle, and bottom images, while the second describes the left and right borders. If the second is absent, it is assumed to be the same as the first. If both are absent, the default value stretch is used.\n\nExamples\n[needs some instructive live examples]\n#header  { -moz-border-image: url(border.png) 27 27 27 27 round round; } \n\n.button  { -moz-border-image: url(button.png) 0 5 0 5; }\n\n.example { -moz-border-image: url(example.jpg) 3 4 6 8 \/ 10px 12px 14px 22px; }\n\n\/* Edge case, acts like a full scaled background-image in Firefox 3.5 *\/\n\n div     { -moz-border-image: url(bgimage.png) 0; } \n\nBrowser compatibility\nNote:&nbsp; Features beyond basic support are not yet documented in above sections. Please read the spec if you are interested.\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 3.5 (1.9.1)\n\n-moz 7.0\n-webkit -- 10.5 \/ 11.0\n-o 3.0\n-webkit   optional &lt;border-image-slice&gt; -- \nUnimplemented (see\n\nbug 497995\n)\n ? -- ? ?   fill keyword -- ? -- ? ?   \n\n    Feature iOS Safari Opera Mini Opera Mobile Android Browser   Basic support 3.2\n-webkit -- 11.0\n-o 2.1\n-webkit   optional &lt;border-image-slice&gt; ? -- ? ?   fill keyword ? -- ? ?   \n\nNotes\n Unusually, for Opera, the prefixed property was added after the non-prefixed.\n\nNotes\n Unusually, for Opera, the prefixed property was added after the non-prefixed.\n\nSpecifications\n CSS 3 Backgrounds and borders #border-image\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-left","title":"border-left","description":"Summary\nThe border-left is a shorthand property for setting the width, style and color of left border of a box. This property can be used to set the values for one or more of: border-left-width\n, border-left-style\n, border-left-color\n. Omitted values are set to their initial values.\n Initial value\n: see individual properties for details Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: see individual properties\n\nSyntax\n\nborder-left: [border-width || border-style || border-color | inherit]&nbsp;;\n\nValues\n border-width See border-width\n. border-style&nbsp; See border-style\n. border-color&nbsp; See border-color\n.\n\nExamples\n\nelement { \n    border-left: 1px solid #000;\n}\n\nNotes\nIf the rule does not specify a border color, the border will have the color specified by the color\n property.\nSpecifications\n CSS 1 CSS 2.1 CSS 3\n\nBrowser compatibility\n   Browser Lowest Version   Chrome 1.0   Firefox 1   Internet Explorer 4   Netscape 4   Opera 3.5  \n\nSee also\n\nborder\n, border-width\n, border-style\n, border-color\n, margin\n, padding\n\nborder-right\n, border-right-color\n, border-right-style\n, border-right-width\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-left-color","title":"border-left-color","description":"Summary\nThe border-left-color CSS property sets the color of the left border of an element.\nSee border-top-color\n for more and detailed information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-left-style","title":"border-left-style","description":"Summary\nborder-left-style sets the line style of the left border of a box.\nSee the border-bottom-style\n property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-left-width","title":"border-left-width","description":"Summary\nborder-left-width sets the width of the left border of a box.\nSee the border-bottom-width property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-radius","title":"border-radius","description":"Summary\nThe border-radius CSS property can be used to give borders rounded corners. The radius applies also to the background even if the element has no border.\nborder-radius is a shortcut to set the four properties border-top-left-radius\n, border-top-right-radius\n, border-bottom-right-radius\n and border-bottom-left-radius\n.\n Initial value\n: 0 Applies to: all elements, except the table element when border-collapse is collapse Inherited\n: no Percentages: yes Media: visual\n  Computed value\n\n\nSyntax\n\nborder-radius:   &lt;border-radius&gt;{1,4} [ \/ &lt;border-radius&gt;{1,4}]?\nValues\nAccepts one, two, three or four &lt;border-radius&gt;  values, optional followed by a slash \/ and a second set of values. &lt;border-radius&gt; represents one of:\n &lt;length&gt; See \n&lt;length&gt;\n for possible units. &lt;percentage&gt; Percentages for the horizontal radius are relative to the width of the border box, whereas percentages for the vertical radius are relative to the height of the border box.\n\nIf one value is set, this radius applies to all 4 corners.\nIf two values are set, the first applies to top-left and bottom-right corner, the second applies to top-right and bottom-left corner.\nFour values apply to the top-left, top-right, bottom-right, bottom-left corner in that order.\nThree values: The second value applies to top-right and also bottom-left.\nIf the slash followed by a second set of radii is specified, the values before the slash are used to specify the horizontal radius, while the values after the slash specify the vertical radius.&nbsp; If the slash is omitted, then the same values are used to set both horizontal and vertical radii.\nFor example:\n\r\n          border-radius: 1em\/5em;\n\n\/* is equivalent to *\/\n\nborder-top-left-radius:     1em 5em;\nborder-top-right-radius:    1em 5em;\nborder-bottom-right-radius: 1em 5em;\nborder-bottom-left-radius:  1em 5em;\r\n        \n\r\n          border-radius: 4px 3px 6px \/ 2px 4px;\n\n\/* is equivalent to: *\/\n\nborder-top-left-radius:     4px 2px;\nborder-top-right-radius:    3px 4px;\nborder-bottom-right-radius: 6px 2px;\nborder-bottom-left-radius:  3px 4px;\r\n        \nValues\nAccepts one, two, three or four &lt;border-radius&gt;  values, optional followed by a slash \/ and a second set of values. &lt;border-radius&gt; represents one of:\n &lt;length&gt; See \n&lt;length&gt;\n for possible units. &lt;percentage&gt; Percentages for the horizontal radius are relative to the width of the border box, whereas percentages for the vertical radius are relative to the height of the border box.\n\nIf one value is set, this radius applies to all 4 corners.\nIf two values are set, the first applies to top-left and bottom-right corner, the second applies to top-right and bottom-left corner.\nFour values apply to the top-left, top-right, bottom-right, bottom-left corner in that order.\nThree values: The second value applies to top-right and also bottom-left.\nIf the slash followed by a second set of radii is specified, the values before the slash are used to specify the horizontal radius, while the values after the slash specify the vertical radius.&nbsp; If the slash is omitted, then the same values are used to set both horizontal and vertical radii.\nFor example:\n\r\n          border-radius: 1em\/5em;\n\n\/* is equivalent to *\/\n\nborder-top-left-radius:     1em 5em;\nborder-top-right-radius:    1em 5em;\nborder-bottom-right-radius: 1em 5em;\nborder-bottom-left-radius:  1em 5em;\r\n        \n\r\n          border-radius: 4px 3px 6px \/ 2px 4px;\n\n\/* is equivalent to: *\/\n\nborder-top-left-radius:     4px 2px;\nborder-top-right-radius:    3px 4px;\nborder-bottom-right-radius: 6px 2px;\nborder-bottom-left-radius:  3px 4px;\r\n        \nExamples\n\n border: solid 10px;\n \n \/* the border will curve into a 'D' *\/\n border-radius: 0 50px 50px 0;\n\n\n border: groove 1em red;\n border-radius: 2em;\n\n\n  background: gold;\n  border: ridge gold;\n  border-radius: 13em\/3em;\n\n\n   background: gold;\n   border-radius: 40px 10px; \n\n\nbackground: black;\ncolor: gray;\nborder-radius: 50%;\n\nNotes\n Dotted and dashed rounded border corners are rendered as solid in Gecko; see \n\nbug 382721\n. border-radius does not apply to table elements when border-collapse\n is collapse. Old WebKit handles multiple values different, see below.\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 4.0 (2.0)\n 1.0 (1.7 or earlier)\n\n-moz 4.0 0.2\n-webkit 9.0 10.5 5.0 3.0\n-webkit   Elliptical borders 3.5 (1.9.1)\n yes yes yes yes, but see below   4 values for 4 corners yes 4.0 yes yes 5.0   Percentages yes was Non-standard      (see below)  yes yes 11.5 5.1  \n\n\n\n   Feature iOS Safari Opera Mini Opera Mobile Android Browser   Basic support 3.2\n-webkit -- -- 2.1\n-webkit   Elliptical borders ? -- -- ?   4 values for 4 corners ? -- -- ?   Percentages ? -- -- ?  \n\n\n&lt;percentage&gt; values\n are not supported in older Chrome and Safari versions (it was fixed in Sepember 2010) are buggy in Opera prior to 11.50 are implemented in a non-standard way prior to Gecko 2.0 (Firefox 4). Both horizontal and vertical radii were relative to the width of the border box.\n\nNotes\nOlder Safari and Chrome versions (prior to WebKit 532.5)\n support only one value for all 4 corners. For different radii the long form properties must be used don't support the slash \/ notation. If two values are specified, an elliptical border is drawn on all 4 corners \r\n          \/* this is equivalent: *\/\n\n-webkit-border-radius: 40px 10px;\n        border-radius: 40px\/10px;\r\n         \n\nIn Gecko 2.0 -moz-border-radius is renamed to border-radius. -moz-border-radius is supported as an alias for a transitional period (at least until the next version of Gecko). In order to conform to the CSS3 standard, Gecko 2.0\n changes the handling of &lt;percentage&gt;\n values to match the specification. You can specify an ellipse as border on an arbitrary sized element just with border-radius: 50%; makes rounded corners clip content and images (if overflow\n: visible is not set)\n\nIn Opera (prior to Opera 12), applying border-radius to replaced elements will not have rounded corners.&lt;percentage&gt; values\n are not supported in older Chrome and Safari versions (it was fixed in Sepember 2010) are buggy in Opera prior to 11.50 are implemented in a non-standard way prior to Gecko 2.0 (Firefox 4). Both horizontal and vertical radii were relative to the width of the border box.\n\nNotes\nOlder Safari and Chrome versions (prior to WebKit 532.5)\n support only one value for all 4 corners. For different radii the long form properties must be used don't support the slash \/ notation. If two values are specified, an elliptical border is drawn on all 4 corners \r\n          \/* this is equivalent: *\/\n\n-webkit-border-radius: 40px 10px;\n        border-radius: 40px\/10px;\r\n         \n\nIn Gecko 2.0 -moz-border-radius is renamed to border-radius. -moz-border-radius is supported as an alias for a transitional period (at least until the next version of Gecko). In order to conform to the CSS3 standard, Gecko 2.0\n changes the handling of &lt;percentage&gt;\n values to match the specification. You can specify an ellipse as border on an arbitrary sized element just with border-radius: 50%; makes rounded corners clip content and images (if overflow\n: visible is not set)\n\nIn Opera (prior to Opera 12), applying border-radius to replaced elements will not have rounded corners.Specifications\n \nCSS3 Backgrounds and Borders Module: border-radiusCR\nSee also\nborder-top-left-radius\n, border-top-right-radius\n, border-bottom-right-radius\n, border-bottom-left-radius\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-right","title":"border-right","description":"Summary\nThe border-right is a shorthand property for setting the width, style and color of right border of a box. This property can be used to set the values for one or more of: border-right-width\n, border-right-style\n, border-right-color\n. Omitted values are set to their initial values.\n Initial value\n: see individual properties for details Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: see individual properties\n\nSyntax\n\nborder-right: [border-width || border-style || border-color | inherit]&nbsp;;\n\nValues\n border-width See border-width\n. border-style&nbsp; See border-style\n. border-color&nbsp; See border-color\n.\n\nExamples\n\nelement { \n    border-right: 1px solid #000;\n}\n\nNotes\nIf the rule does not specify a border color, the border will have the color specified by the color\n property.\nSpecifications\n CSS 1 CSS 2.1 CSS 3\n\nBrowser compatibility\nSee also\n\nborder\n, border-width\n, border-style\n, border-color\n, margin\n, padding\n\n\nborder-right\n, border-right-color\n, border-right-style\n, border-right-width\n\n&nbsp;"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-right-color","title":"border-right-color","description":"Summary\nborder-right-color sets the color of the right border of an element.\nSee the border-top-color\n property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-right-style","title":"border-right-style","description":"Summary\nborder-right-style sets the line style of the right border of a box.\nSee the border-bottom-style\n property for more information.\n&nbsp;"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-top-left-radius","title":"border-top-left-radius","description":"Summary\nThe border-top-left-radius CSS property sets the rounding of the top-left corner of the element.\nPrevious to Gecko 2.0 (Firefox 4.0) it was named -moz-border-radius-topleft. This is supported as an alias for a short transitional period.\nSee border-radius\n for more information.\n Initial value\n: 0  Applies to: all elements Inherited\n: no Percentages: yes Media: visual\n  Computed value\n: two absolute \n&lt;length&gt;\ns\n\nSyntax\n\n-moz-border-radius-topleft:&nbsp; &lt;border-radius&gt; &lt;border-radius&gt;?\nborder-top-left-radius: &nbsp; &nbsp;&nbsp; &lt;border-radius&gt; &lt;border-radius&gt;? \n\nValues\nAccepts one &lt;border-radius&gt; value.\n\nNew in Firefox 3.5\n An optional second value for elliptical corners. The two values define the radii of a quarter ellipse that defines the shape of the corner. The first value is the horizontal radius. The optional second value is the vertical radius, if omitted it's equal to the first. \n&lt;border-radius&gt; represents one of:\n &lt;length&gt; See \n&lt;length&gt;\n for possible units. &lt;percentage&gt; Since Gecko 2.0 (Firefox 4.0): Percentages for the horizontal radius refer to the width of the box, whereas percentages for the vertical radius refer to the height of the box. In previous Gecko\/Firefox versions Non-standard     : Relative to the width of the box (the percentage is relative to the width even when specifying the radius for a height).\n\nExamples\n\ndiv { -moz-border-radius-topleft:  20px;  \/* Firefox up to version 3.6 *\/\n   -webkit-border-top-left-radius: 20px;  \/* Safari, Chrome (before WebKit version 533) *\/\n           border-top-left-radius: 20px;  \/* Firefox 4; browsers with CSS3 support *\/\n}\n\n\n\/* elliptical corners supported since Firefox 3.5 (Gecko 1.9.1) *\/\n  \ndiv { -moz-border-radius-topleft:   20px;       \/* round corner, fallback for Firefox 1-3.0 *\/\n      -moz-border-radius-topleft:   20px 10px;  \/* elliptical border, Firefox 3.5-3.6 *\/\n    -webkit-border-top-left-radius: 20px 10px;  \/* Safari, Chrome (before WebKit version 532.5) *\/\n            border-top-left-radius: 20px 10px;  \/* Firefox 4; browsers with CSS3 support *\/\n}\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support  0.2  -webkit-border-top-left-radius -webkit-border-top-right-radius -webkit-border-bottom-right-radius -webkit-border-bottom-left-radius  1.0 (1.0)  -moz-border-radius-topleft -moz-border-radius-topright -moz-border-radius-bottomright -moz-border-radius-bottomleft  9.0 &nbsp;  border-top-left-radius border-top-right-radius border-bottom-right-radius border-bottom-left-radius 10.5 border-top-left-radius border-top-right-radius border-bottom-right-radius border-bottom-left-radius 3.0 (522) -webkit-border-top-left-radius -webkit-border-top-right-radius -webkit-border-bottom-right-radius -webkit-border-bottom-left-radius    4.0 &nbsp;  border-top-left-radius border-top-right-radius border-bottom-right-radius border-bottom-left-radius 4.0 (2.0) border-top-left-radius border-top-right-radius border-bottom-right-radius border-bottom-left-radius 5.0 (532.5) border-top-left-radius border-top-right-radius border-bottom-right-radius border-bottom-left-radius   Percentages 4.0 1.0 (1.0) Non-standard      9.0 10.5 5.0 (532.5)   4.0 (2.0)   Elliptical corners 0.2 3.5 (1.9.1) 9.0 10.5 3.0 (522 )  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\nCSS 3 Backgrounds and Borders #border-radius\nSee also\nborder-radius\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-top-width","title":"border-top-width","description":"Summary\nborder-top-width sets the width of the top border of a box.\nSee the border-bottom-width property for more information.\n&nbsp;"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-top-right-radius","title":"border-top-right-radius","description":"Summary\nThe CSS property border-top-right-radius sets the rounding of the top-right corner of the border. Previous to Gecko 2.0 (Firefox 4.0) this was named  -moz-border-radius-topright. \nSee the border-top-left-radius and border-radius properties for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-top-style","title":"border-top-style","description":"Summary\nborder-top-style sets the line style of the top border of a box.\nSee the border-bottom-style\n property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/border-width","title":"border-width","description":"Summary\nThe border-width CSS property sets the width of the border of a box. Using the shortcut property border\n is often more convenient.\n Initial value\n: medium\n Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: absolute length; 0 if the border-style is none or hidden\n\nSyntax\n\n border-width:  &lt;border-width&gt; {1,4}\n\nValues\nAccepts one, two, three or four &lt;border-width&gt; values. These whitespace separated values set the width of the top, right, bottom, and left border of a box.\nIf one value is set, this width applies to all 4 sides.\nIf two values are set, the first applies to top and bottom, the second applies to the right and left side.\nThree values apply to the top, right and bottom side. The left side takes the second value.\nFour values apply to the top, right, bottom, left side in that order.\n &lt;border-width&gt; is one value or keyword of:&nbsp;&nbsp; \n&lt;length&gt;\n | thin | medium | thick  thin Depends on the UA. Typically 1px in desktop browsers like Firefox and IE 8. 2px in IE 4-7. medium Depends on the UA. Typically 3px in desktop browsers like Firefox and IE 8. 4px in IE 4-7. thick Depends on the UA. Typically 5px in desktop browsers like Firefox and IE 8. 6px in IE 4-7. &lt;length&gt; The border's thickness has an explicit value. Cannot be negative. See \n&lt;length&gt;\n for possible units.\n\nRelated properties\n border-bottom-width\n border-left-width\n border-right-width\n border-top-width\n&nbsp;\n\nExamples\n\nborder: ridge #ccc;\nborder-width: 6px;  \/* same as &quot;border: ridge #ccc 6px&quot;;  6px wide border on all 4 sides *\/\n\nborder: solid red;\nborder-width: 2px 10px;  \/* 2px wide top and bottom border, 10px right and left border *\/\n\n\nborder: dotted orange;\nborder-width: 0.3em 0;   \/* 0.3em wide top and bottom border, no border right and left *\/\n\n\nborder: solid lightgreen;\nborder-width: medium 0 1px thick;  \/* three different width, no right border *\/\n\nSpecifications\n CSS 2.1 Box #border-width CSS 3 Background #border-width\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 1.0 (1.7 or earlier)\n 1.0 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 (1.9.2)\n ? ? ? ?  \n\n\nSee Also\nborder\n, border-style\n, border-color\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/bottom","title":"bottom","description":"Summary\nThe bottom property specifies part of the position of positioned elements.\nFor absolutely positioned elements (those with position: absolute or position: fixed), it specifies the distance between the bottom margin edge of the element and the bottom edge of its containing block.\nFor relatively positioned elements (those with position: relative), it specifies the amount the element is moved above its normal position. However, the top\n property overrides the bottom property, so if top is not auto, the computed value of bottom is the negative of the computed value of top.\n Initial value\n: auto\n Applies to: positioned elements Inherited\n: no Percentages: refer to height of containing block Media: visual\n  Computed value\n: absolute length, percentage, or auto\n\nSyntax\n\n   bottom: &lt;length&gt; | &lt;percentage&gt; | auto | inherit\n\nValues\n &lt;length&gt;&nbsp; A length, used as described in the summary. Can be negative, zero, or positive. &lt;percentage&gt;&nbsp; A percentage of the containing block's height, used as described in the summary. auto&nbsp; For absolutely positioned elements, position the element based on the top\n property and treat height: auto as a height based on the content. For relatively positioned elements, offset the element from its original position based on the top\n property, or if top is also auto, do not offset it at all. inherit&nbsp; Inherits the computed value from its parent element (which may not be its containing block). This computed value is then handled like it was a &lt;length&gt;, a &lt;percentage&gt;, or auto\n\nExamples\n\nelement { \n    position: absolute;\n    bottom: 20px; \n    height: 200px;\n    border: 1px solid #000;\n}\n\nThe following sample page contrasts position:absolute and position:fixed. When the regular text becomes taller than the viewable portion of the page (the browser window's viewport), blocks positioned with position:absolute will scroll with the page, while blocks positioned with position:fixed will not. Note that IE6 does not support position:fixed.\n\n&lt;!DOCTYPE html PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.01\/\/EN&quot; \n   &quot;http:\/\/www.w3.org\/TR\/html4\/strict.dtd&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text\/html; charset=iso-8859-1&quot;&gt;\n&lt;title&gt;Position at bottom, absolute or fixed&lt;\/title&gt;\n&lt;style type=&quot;text\/css&quot;&gt;\np {font-size:30px; line-height:3em;}\ndiv.pos {width:49%; text-align:center; border:2px solid #00f;}\ndiv#abs {position:absolute; bottom:0; left:0;}\ndiv#fix {position:fixed; bottom:0; right:0;}\n&lt;\/style&gt;\n&lt;\/head&gt;\n&lt;body&gt;\n  &lt;p&gt;This&lt;br&gt;is&lt;br&gt;some&lt;br&gt;tall,&lt;br&gt;tall,\n    &lt;br&gt;tall,&lt;br&gt;tall,&lt;br&gt;tall&lt;br&gt;content.&lt;\/p&gt;\n  &lt;div id=&quot;fix&quot; class=&quot;pos&quot;&gt;&lt;p&gt;Fixed&lt;\/p&gt;&lt;\/div&gt;\n  &lt;div id=&quot;abs&quot; class=&quot;pos&quot;&gt;&lt;p&gt;Absolute&lt;\/p&gt;&lt;\/div&gt;\n&lt;\/body&gt;\n&lt;\/html&gt;\nNotes\nFor absolutely positioned elements whose containing block is based on a block-level element, this property is an offset from the padding edge of that element.\nFor absolutely positioned elements, the bottom property has no visible effect when all of top\n, height\n, and margin-top\n are not auto (which is the default value for top and height).\nSpecifications\n CSS 2.1 CSS 3\n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.7 or earlier)\n 5 6 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? 1.0 (1.9.2)\n ? ? ?  \n\n\n\nSee also\nposition\n, top\n, right\n, left\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/box-shadow","title":"box-shadow","description":"Summary\nThe box-shadow CSS property accepts one or more shadow effects as a comma-separated list. It allows casting a drop shadow from the frame of almost any element. If a border-radius\n is specified on the element with a box shadow, the box shadow takes on the same rounded corners. The z-ordering of multiple box shadows is the same as multiple text shadows (the first specified shadow is on top).\n Initial value\n: none\n Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: as specified (any \n&lt;length&gt;\n made absolute; any &lt;color&gt;\n computed)\nSyntax\n\nbox-shadow:  none | &lt;shadow&gt; [,&lt;shadow&gt;]*\n\n  where &lt;shadow&gt; is defined as:\n\ninset? &amp;&amp; [ &lt;offset-x&gt; &lt;offset-y&gt; &lt;blur-radius&gt;? &lt;spread-radius&gt;? &lt;color&gt;? ]\nValues\n inset (optional) If not specified (default), the shadow is assumed to be a drop shadow (as if the box were raised above the content). The presence of the inset keyword changes the shadow to one inside the frame (as if the content was depressed inside the box). Inset shadows are drawn above background, but below border and content. &lt;offset-x&gt; &lt;offset-y&gt; (required) This are two \n&lt;length&gt;\n values to set the shadow offset. &lt;offset-x&gt; specifies the horizontal distance. Negative values place the shadow to the left of the element. &lt;offset-y&gt; specifies the vertical distance. Negative values place the shadow above the element. See \n&lt;length&gt;\n for possible units. If both values are 0, the shadow is placed behind the element (and may generate a blur effect if &lt;blur-radius&gt; and\/or &lt;spread-radius&gt; is set). &lt;blur-radius&gt; (optional) This is a third \n&lt;length&gt;\n value. The larger this value, the bigger the blur, so the shadow becomes bigger and lighter. Negative values are not allowed. If not specified, it will be 0 (the shadow's edge is sharp). &lt;spread-radius&gt; (optional) This is a fourth \n&lt;length&gt;\n value. Positive values will cause the shadow to expand and grow bigger, negative values will cause the shadow to shrink. If not specified, it will be 0 (the shadow will be the same size as the element). &lt;color&gt; (optional) See &lt;color&gt;\n values for possible keywords and notations. If not specified, the color depends on the browser. In Gecko (Firefox), Presto (Opera) and Trident (Internet Explorer), the value of the color\n property is used. On the other hand, WebKit's shadow is transparent and therefore useless if &lt;color&gt; is omitted.\n\nLive examples\n box-shadow test box-shadow tutorial and examples\n\n\n   -moz-box-shadow: 60px -16px teal;\n-webkit-box-shadow: 60px -16px teal;\n        box-shadow: 60px -16px teal;\n\n\n   -moz-box-shadow: 10px 5px 5px black;\n-webkit-box-shadow: 10px 5px 5px black;\n        box-shadow: 10px 5px 5px black;\n\n\n   -moz-box-shadow: 3px 3px red, -1em 0 0.4em olive;\n-webkit-box-shadow: 3px 3px red, -1em 0 0.4em olive;\n        box-shadow: 3px 3px red, -1em 0 0.4em olive;\n\n\n   -moz-box-shadow: inset 5em 1em gold;\n-webkit-box-shadow: inset 5em 1em gold;\n        box-shadow: inset 5em 1em gold; \n\n\n   -moz-box-shadow: 0 0 1em gold;\n-webkit-box-shadow: 0 0 1em gold;\n        box-shadow: 0 0 1em gold; \n\n\n   -moz-box-shadow: inset 0 0 1em gold;\n-webkit-box-shadow: inset 0 0 1em gold;\n        box-shadow: inset 0 0 1em gold;\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 10.0 1.0\n-webkit 4.0 (2.0)\n 3.5 (1.9.1)\n\n-moz 9.0 10.5 5.1 (WebKit 534) 3.0 (WebKit 522)\n-webkit   Multiple shadows 10.0 1.0\n-webkit 4.0 (2.0)\n 3.5 (1.9.1)\n\n-moz 9.0 10.5 5.1 (WebKit 534) 3.0 (WebKit 522)\n-webkit   inset keyword 10.0 4.0\n-webkit 4.0 (2.0)\n 3.5 (1.9.1)\n\n-moz 9.0 10.5 5.1 (WebKit 534) 5.0 (WebKit 533)\n-webkit   Spread radius 10.0 4.0\n-webkit 4.0 (2.0)\n 3.5 (1.9.1)\n\n-moz 9.0 10.5 5.1 (WebKit 534) 5.0 (WebKit 533)\n-webkit  \n\n\n\n   Feature iOS Safari Opera Mini Opera Mobile Android Browser   Basic support ? ? ? ?   Multiple shadows ? ? ? ?   inset keyword ? ? ? ?   Spread radius ? ? ? ?  \n\n\nNotes\n Since version 5.5, Internet Explorer supports Microsoft's DropShadow and Shadow Filter. You can use this proprietary extension to cast a drop shadow (though the syntax and the effect are different from CSS3). Shadows affect layout in older Gecko, Presto, and WebKit; e.g. if you cast an outer shadow to a box with a width of 100%, you'll see a scrollbar.\n\nNotes\n Since version 5.5, Internet Explorer supports Microsoft's DropShadow and Shadow Filter. You can use this proprietary extension to cast a drop shadow (though the syntax and the effect are different from CSS3). Shadows affect layout in older Gecko, Presto, and WebKit; e.g. if you cast an outer shadow to a box with a width of 100%, you'll see a scrollbar.\n\nSpecifications\n \nCSS3 Backgrounds and Borders Module: box-shadowCR\n\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/box-sizing","title":"box-sizing","description":"Summary\nThe box-sizing CSS property is used to alter the default CSS box model used to calculate widths and heights of elements. It is possible to use this property to emulate the behavior of browsers that do not correctly support the CSS box model specification. Mozilla browsers like Firefox support -moz-box-sizing.\n Initial value\n: content-box\n Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\nbox-sizing:       content-box | border-box\n-moz-box-sizing:  content-box | border-box | padding-box \nValues\n content-box This is the default style as specified by the CSS standard. The width and height properties are measured including only the content, but not the border, margin, or padding. padding-box The width and height properties include the padding size, and do not include the border or margin. Non-standard      padding-box isn't part of CSS3-UI and only supported by Firefox (Gecko). border-box The width and height properties include the padding and border, but not the margin. This is the box model used by Internet Explorer when the document is not in standards-compliant mode.\n\nExamples\n\/* support Firefox, Safari\/WebKit, Opera and IE8 *\/\n\n.example {\n   -moz-box-sizing:    border-box;\n   -webkit-box-sizing: border-box;\n    box-sizing:        border-box;\n}\nNotes\nSee \n\nbug 243412\n and its dependents:\n -moz-box-sizing doesn't apply to table cells min-height\/max-height does not work for -moz-box-sizing: border-box\n\nSpecifications\n CSS3 Basic User Interface #box-sizing\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   prefixed support 1.0 -webkit-box-sizing 1.0&nbsp;(1.0) -moz-box-sizing &nbsp; &nbsp; 3.0&nbsp;(522) -webkit-box-sizing   standard support 10 box-sizing --&nbsp;\n\nbug 243412\n 8.0 box-sizing 7.0 box-sizing 5.1&nbsp;(534.12)  box-sizing   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support (Supported) (Supported) Mango 7.5 (Supported) (Supported)   \n\nSee also\nCSS box model\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/caption-side","title":"caption-side","description":"Summary\nThe caption-side property positions the content of table-caption at the specified side.\n Initial value\n: top Applies to: 'table-caption' elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\ncaption-side: top | bottom | left | right | inherit\n\nValues\n top caption box will be above the table. bottom caption box will be below the table. left caption box will be on the left side of the table. This Value is dropped from CSS 2.1 but supported in Gecko (Firefox). right caption box will be on the right side of the table. This Value is dropped from CSS 2.1 but supported in Gecko (Firefox).\n\nExamples\n\nView Live Examples\n\n.contentbox table-caption {\n  caption-side: bottom;\n}\n\nSpecifications\n CSS 2 Table&nbsp; (out of date) CSS 2.1 Table #caption-side\n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox Internet Explorer Opera Safari   Basic support 1.0 1.0 8.0 4.0 1.0  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\n\ncaption-side\n, table-layout\n, border-collapse\n, border-spacing\n, empty-cells\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/clear","title":"clear","description":"Summary\nThe clear property specifies whether an element can be next to floating elements that precede it or must be moved down (cleared) below them.\n Initial value\n: none\n Applies to: block-level elements (including floats) Inherited\n: No Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nclear: none | left | right | both | inherit\n\nValues\n none Element is not moved down to clear past floating elements. left Element is moved down to clear past left floats. right Element is moved down to clear past right floats. both Element is moved down to clear past both left and right floats.\n\nExamples\n\nView Live Examples\n\nh1 { clear: none }\nh2 { clear: right }\nIf you want an element to contain all floating elements inside it, you can either float the container as well, or use clear\n\n#container:after { content: &quot;.&quot;; line-height: 0; height: 0; display:&nbsp;block; visibility: hidden; clear: both; }\n\nNotes\nThe clear property applies to both floating and non-floating elements.\nWhen it applies to non-floating blocks, it moves the border edge of the element down until it is below the margin edge of all relevant floats. This movement (when it happens) causes margin collapsing not to occur.\nWhen it applies to floating elements, it moves the margin edge of the element below the margin edge of all relevant floats. This affects the position of later floats, since later floats cannot be positioned higher than earlier ones.\nThe floats that are relevant to be cleared are the earlier floats within the same block formatting context.\nSpecifications\n CSS 1 Box properties #clear CSS 2.1 Visual formatting model #clear\n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n float\n Box model\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/clip","title":"clip","description":"Summary\nThe clip CSS property defines what portion of an element is visible. The clip property applies only to elements with position:absolute\n.\n Initial value\n: auto Applies to: absolutely positioned elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: A rectangle consisting of four computed lengths; otherwise, as specified\n\nSyntax\n\nclip:  &lt;shape&gt;\n| auto | inherit\n\n\nValues\n &lt;shape&gt; A rectangular shape of the form \nrect(&lt;top&gt;, &lt;right&gt;, &lt;bottom&gt;, &lt;left&gt;)   \/* standard syntax *\/\n or \nrect(&lt;top&gt; &lt;right&gt; &lt;bottom&gt; &lt;left&gt;)      \/* backwards compatible syntax *\/ where &lt;top&gt; and &lt;bottom&gt; specify offsets from the top border edge of the box, and &lt;right&gt;, and &lt;left&gt; specify offsets from the left border edge of the box.\n\n &lt;top&gt;, &lt;right&gt;, &lt;bottom&gt;, and &lt;left&gt; may either have a \n&lt;length&gt;\n value or auto. auto The element does not clip (default value)\n\nExamples\n\np     { border:dotted;  position:relative; }\n\n#img2 { position:absolute;  left:263px;\n\n        clip: rect(40px, 200px, 150px, 30px); \n        \/* standard syntax, unsupported by Internet Explorer 4-7 *\/\n      }\n\n#img3 { position:absolute;  left:526px;\n\n        clip: rect(40px  200px  150px  30px);\n        \/* non-standard syntax, but supported by all major browsers including Firefox and IE *\/\n      }\n\n  \nSpecifications\n CSS 2.1 Visual effects #clipping\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 7.0 1.0 (85)   8.0 Correct comma syntax supported in this version.  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n Related CSS properties: text-overflow\n, white-space\n, overflow-x\n, overflow-y\n, overflow\n, display\n, position\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/clip-path","title":"clip-path","description":"Summary\n&nbsp;\n Initial value\n: See The initial clipping path: 'overflow' and 'clip' properties Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n:\n\nSyntax\n\nclip-path: &lt;uri&gt; | none | inherit\n\nValues\n&nbsp;uri : &lt;uri&gt; | none | inherit\n&nbsp;\nExamples\n\n.target { clip-path: url(#c1); }\n\n.anothertarget { clip-path: url(resources.svg#c1); }\n\nSpecifications\n Clipping, Masking and Compositing CSS 3 SVG SVG\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support ? ? ? ? ?  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n clip-rule\n, mask\n, filter\n Applying SVG effects to HTML content SVG\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/color","title":"color","description":"Summary\nThe color CSS property sets the foreground color of an element's text content.\n Initial value\n: depends on user agent Applies to: all elements Inherited\n: yes Percentages: N\/A Media: visual\n  Computed value\n: as specified\n\nSyntax\n\ncolor:  &lt;color&gt; | inherit\nValues\n &lt;color&gt; The color property accepts various keywords and numeric notations. See &lt;color&gt;\n values for much details.\n\nExamples\nThe following are all ways to make the element's text red:\n\r\n          element { color: red }\nelement { color: #f00 }\nelement { color: #ff0000 }\nelement { color: rgb(255,0,0) }\nelement { color: rgb(100%, 0%, 0%) }\nelement { color: hsl(0, 100%, 50%) }\n\n\/* 50% translucent, support since Firefox 3 *\/\nelement { color: rgba(255, 0, 0, 0.5) } \nelement { color: hsla(0, 100%, 50%, 0.5) }\r\n        \nSpecifications\n CSS 2.1 CSS 3 Color #color Working draft\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 3.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nFor the browser compatibility table for the various values, see &lt;color&gt;\n.\nSee also\n &lt;color&gt;\n values Color Chart by VisiBone\n\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/columns","title":"columns","description":"Summary\nThe columns CSS property is a shorthand property allowing to set both the column-width\n and the column-count\n properties at the same time.\n Initial value\n: auto\n for both properties Applies to: non-replaced block-level elements (except table elements), table cells, and inline-blocks elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: specified value for the column-count part, the length for the column-width part\nSyntax\ncolumns: &lt;column-count&gt; || &lt;column-width&gt;\n\nwhere :\n &lt;column-width&gt; Is a \n&lt;length&gt;\n value giving a hint of the optimal width of the column. The actual column width may be wider (to fill the available space), or narrower (only if the available space is smaller than the specified column width). The length must be strictly positive or the declaration is invalid. &lt;column-count&gt; Is a strictly positive &lt;integer&gt;\n  describing the ideal number of columns into which the content of the element will be flowed. If the column-width\n is also set to a non-auto value, it merely indicates the maximum allowed number of columns.\n\nExamples\n.content-box {\n  border: 10px solid #000000;\n  columns:3;\n}\n\nSpecifications\n   Specification Status Comment     CSS Multi-column Layout Module Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 9 (9)\n-moz 10 11.1 3.0 (522)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?   \n\nSee also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/column-count","title":"column-count","description":"Summary\nThe column-count CSS property describes the number of columns of the element.\n Initial value\n: auto\n Applies to: non-replaced block-level elements (except table elements), table cells, and inline-blocks elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: specified value\n\nSyntax\ncolumn-count: integer     or\ncolumn-count: auto\n\nwhere :\n auto Is a keyword indicating that the number of columns should be determined by other CSS properties, like column-width\n. integer Is a strictly positive &lt;integer&gt;\n  describing the ideal number of columns into which the content of the element will be flowed. If the column-width\n is also set to a non-auto value, it merely indicates the maximum allowed number of columns.\n\nExamples\n.content-box {\n  border: 10px solid #000000;\n  column-count:3;\n}\n\nSpecifications\n   Specification Status Comment     CSS Multi-column Layout Module Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 1.5 (1.8)\n-moz 10 11.1 3.0 (522)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?   \n\nSee also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n\n\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/column-gap","title":"column-gap","description":"Summary\nThe column-gap CSS property sets the size of the gap between columns for elements which are specified to display as a multi-column element.\n Initial value\n: normal\n Applies to: all multi-column elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: absolute length or 'normal'\n\nSyntax\ncolumn-gap: length     or\ncolumn-gap: normal\n\nwhere :\n normal Is a keyword indicating to use the browser-defined default spacing between columns. The specification, and most modern browsers follow it, recommends this keyword to be equal to a length of 1em. length Is a \n&lt;length&gt;\n value defining the size of the gap between columns. It must not be negative, but may be equal to 0.\n\nExamples\n.content-box {\n  border: 10px solid #000000;\n  column-count: 3;\n  column-gap: 20px;\n}\n\nSpecifications\n   Specification Status Comment     CSS Multi-column Layout Module Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 1.5 (1.8)\n-moz [*] 10 11.1 3.0 (522)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?   \n\n[*] Before Firefox 3 (Gecko 1.9), the default value associated to the normal keyword was 0 and not 1em.\nSee also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n\n\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/column-rule","title":"column-rule","description":"Summary\nIn multi-column layouts, the column-rule CSS property specifies a straight line, or &quot;rule&quot;, to be drawn between each column. It is a convenient shorthand to avoid setting each of the individual column-rule-* properties separately : column-rule-width\n, column-rule-style\n and column-rule-color\n.\n Initial value\n: medium none\n currentColor Applies to: all multi-column elements Inherited\n: no Media: visual\n \nSyntax\ncolumn-rule:  &lt;border-width&gt; || &lt;border-style&gt; || &lt;color&gt;\n\nValues\nAccepts one, two or three values in any order:\n &lt;border-width&gt; Optional, is one value or keyword of:&nbsp; \n&lt;length&gt;\n | thin | medium | thick  Default value medium is used if absent. See border-width\n for details. &lt;border-style&gt; Required, default value none is used if absent. See border-style\n for possible values and details. &lt;color&gt; Optional, see &lt;color&gt;\n value. Default value if absent: currentColor\n, the value of the element's color  property (foreground color).\n\nExamples\np.foo { column-rule: dotted; }          \/* same as &quot;medium dotted currentColor&quot; *\/\np.bar { column-rule: solid blue; }      \/* same as &quot;medium solid blue&quot; *\/\np.baz { column-rule: solid 8px; }       \/* same as &quot;8px solid currentColor&quot; *\/\np.abc { column-rule: thick inset blue; }\n\nLive Example\n padding:0.3em; background:gold; border:groove 2px gold; column-rule: inset 2px gold; column-width:17em;\nLive Example\n padding:0.3em; background:gold; border:groove 2px gold; column-rule: inset 2px gold; column-width:17em;\nSpecifications\n   Specification Status Comment     CSS Multi-column Layout Module Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 3.5 (1.9.1)\n-moz 10 11.1 3.0 (522)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?    &nbsp;\nSee also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/column-rule-color","title":"column-rule-color","description":"Summary\nThe column-rule-color CSS property lets you set the color of the rule drawn between columns in multi-column layouts.\n Initial value\n: currentColor\n Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: computed like the one of the color\n property\n\nSyntax\ncolumn-rule-color:  &lt;color&gt;\n\nValues\n &lt;color&gt;&nbsp; See &lt;color&gt;\n values.\n\nExample\n#header {column-rule-color:  blue;}\n\nSpecifications\n   Specification Status Comment     CSS Multi-column Layout Module Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 3.5 (1.9.1)\n-moz 10 11.1 3.0 (522)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?    &nbsp;\n\nSee also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n\n\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/column-rule-style","title":"column-rule-style","description":"Summary\nThe column-rule-style CSS property lets you set the style of the rule drawn between columns in multi-column layouts.\n Initial value\n: none\n Applies to: all multi-column elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\ncolumn-rule-style:  &lt;border-style&gt;\n\nValues\n &lt;border-style&gt;&nbsp; See border-style\n\n\nExample\n#header {-moz-column-rule-style: inset;}\n\nSpecifications\n   Specification Status Comment     CSS Multi-column Layout Module Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 3.5 (1.9.1)\n-moz 10 11.1 3.0 (522)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?    &nbsp;\n\nSee also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n\n  \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/column-rule-width","title":"column-rule-width","description":"Summary\nThe column-rule-width CSS property lets you set the width of the rule drawn between columns in multi-column layouts.\n Initial value\n: none\n Applies to: all multi-column elements Inherited\n: no Media: visual\n  Computed value\n: absolute length; 0 if the column rule style is none or hidden\n\nSyntax\ncolumn-rule-width:  &lt;border-width&gt;\n\nValues\n &lt;border-width&gt;&nbsp; See border-width\n.\n\nExample\n#header {column-rule-width: thick;}\n\nSpecifications\n   Specification Status Comment     CSS Multi-column Layout Module Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 3.5 (1.9.1)\n-moz 10 11.1 3.0 (522)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?    &nbsp;\n\nSee also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n\n\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/column-width","title":"column-width","description":"Summary\nThe column-width CSS property suggests an optimal column width. This is not a absolute value but a mere hint. Browser will adjust the width of the column around that suggested value, allowing to achieve scalable designs that fit different screen size. Especially in presence of the column-count\n CSS property which has precedence, to set an exact column width, all length values must be specified. In horizontal text these are width\n, column-width\n, column-gap\n, and column-rule-width\n.\n Initial value\n: auto\n Applies to: non-replaced block-level elements (except table elements), table cells, and inline-blocks elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: the absolute length\nSyntax\ncolumn-width: length        or\ncolumn-width: auto \n\nwhere :\n length Is a \n&lt;length&gt;\n value giving a hint of the optimal width of the column. The actual column width may be wider (to fill the available space), or narrower (only if the available space is smaller than the specified column width). The length must be strictly positive or the declaration is invalid. auto Is a keyword indicating that the width of the column should be determined by other CSS properties, like column-count\n.\n\nExamples\n.content-box {\n  border: 10px solid #000000;\n  column-width: 300px;\n}\n\nSpecifications\n   Specification Status Comment     CSS Writing Modes Module Level 3 Working Draft\n Adds intrinsic sizes via the keywords min-content, max-content, fill-available and fit-content.   CSS Multi-column Layout Module Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 1.5 (1.8)\n-moz 10 11.1 3.0 (522)\n-webkit   Intrinsic sizes -- -- -- -- --   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?   Intrinsic sizes -- -- -- -- --   \n\nSee also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/content","title":"content","description":"Summary\nThe content CSS property is used with the :before\n and :after\n pseudo-elements to generate content in an element.\n Initial value\n: normal\n Applies to: pseudo-elements :before and :after Inherited\n: no Media: all Computed value\n:  on :before and :after, normal computes to none  on elements, always computes to normal for URI values, the absolute URI for attr() values, the resulting string for other keywords, as specified.  \n\nSyntax\n\ncontent: normal | none | \n       [ &lt;string&gt; | &lt;uri&gt; | &lt;counter&gt; | attr() | \n         open-quote | close-quote | no-open-quote | no-close-quote ]+ | inherit\nValues\n none The pseudo-element is not generated. normal Computes to none for the :before and :after pseudo-elements. &lt;string&gt; Text content. &lt;uri&gt; url() The value is a URI that designates an external resource (such as an image). If the resource or image can't be displayed, it is either ignored or some placeholder shows up. &lt;counter&gt; [fixme] Counters may be specified with two different functions: 'counter()' or 'counters()'. The former has two forms: 'counter(name)' or 'counter(name, style)'. The generated text is the value of the innermost counter of the given name in scope at this pseudo-element; it is formatted in the indicated style ('decimal' by default). The latter function also has two forms: 'counters(name, string)' or 'counters(name, string, style)'. The generated text is the value of all counters with the given name in scope at this pseudo-element, from outermost to innermost separated by the specified string. The counters are rendered in the indicated style ('decimal' by default). See the section on automatic counters and numbering for more information. The name must not be 'none', 'inherit' or 'initial'. Such a name causes the declaration to be ignored. attr(X) Returns the value of the element's attribute X as a string. If there is no attribute X, an empty string is returned. The case-sensitivity of attribute names depends on the document language. open-quote | close-quote These values are replaced by the appropriate string from the quotes\n property. no-open-quote | no-close-quote Introduces no content, but increments (decrements) the level of nesting for quotes.\n\nExamples\n\n q:lang(en) { quotes: '&quot;' '&quot;' &quot;'&quot; &quot;'&quot; }\n q:before   { content: open-quote }\n q:after    { content: close-quote }\n\n h1:before  { content: &quot;Chapter: &quot;; }\n\n           \/* content accepts multiple values *\/\n\n a:before   { content: url(http:\/\/www.mozilla.org\/favicon.ico) &quot; MOZILLA: &quot;; \n              font:    x-small Arial,freeSans,sans-serif;\n              color:   gray;\n            }\n\n\nView on jsFiddle\n\nSpecifications\n CSS 2.1 Generated content\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 8.0 4.0 1.0 (85)   url() support 1.0 1.0 (1.0) 8.0 7.0 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee also\n:after\n, :before\n, quotes\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/counter-increment","title":"counter-increment","description":"Summary\ncounter-increment is used to increase the value of CSS Counters by a given value.\n Initial value\n: Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n:\n\nSyntax\n\ncounter-increment: [&lt;identifier&gt; &lt;integer&gt;?]+ | inherit | none\n\nValues\n identifier The name of the counter to increment. integer The value to add to the counter. Defaults to 1 if not given.\n\nYou may specify as many counters to increment as you want, each separated by a space.\nRelated properties\n counter-reset resets specified CSS Counters to a given amount.\n\nExamples\n\nh1 {\n  counter-increment: chapter section 2 page;\n  \/* Increases the value of the chapter and page counters by 1\n     and the section counter by 2. *\/\n}\n\nNotes\nSpecifications\n CSS 2.1\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2.0 1.0 (?) 8.0 9.2 3.0 (?)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee also\nCSS Counters, counter-reset\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/counter-reset","title":"counter-reset","description":"Summary\ncounter-reset is used to reset CSS Counters to a given value.\n Initial value\n: Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n:\n\nSyntax\n\ncounter-reset: [&lt;identifier&gt; &lt;integer&gt;?]+ | inherit | none\n\nValues\n identifier The name of the counter to reset. integer The value to reset the counter to on each occurrence of the element. Defaults to 0 if not given.\n\nYou may specify as many counters to reset as you want, each separated by a space.\nRelated properties\n counter-increment increases the value of specified CSS Counters by a given amount.\n\nExamples\n\nh1 {\n  counter-reset: chapter section 1 page;\n  \/* Sets the chapter and page counters to 0\n     and the section counter to 1. *\/\n}\n\nNotes\nSpecifications\n CSS 2.1\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2.0 1.0 (?) 8.0 9.2 3.1 (?)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee also\nCSS Counters, counter-increment\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/cursor","title":"CSS cursor","description":"Summary\nThe cursor CSS property specifies the mouse cursor displayed when the mouse pointer is over an element.\n Initial value\n: auto\n Applies to: all elements Inherited\n: Yes Media: visual\n , interactive\n\n Computed value\n: as specified (if a keyword)\n\nSyntax\n\nCSS 2.1\n\ncursor:\n[ [ &lt;uri&gt;\n ,]* \n  [ auto | crosshair | default | help | move | pointer  | progress | text | wait | e-resize | \n    ne-resize | nw-resize | n-resize | se-resize | sw-resize | s-resize | w-resize ] ]\n] | inherit\n\n\nCSS 3\n\ncursor:\n[ [ &lt;uri&gt;\n [&lt;x&gt; &lt;y&gt;]?,]* \n  [ auto | default | none | context-menu | help | pointer | progress | wait | cell | \n    crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | \n    e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize |\n    sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize |\n    col-resize | row-resize | all-scroll ]\n] | inherit\n\nValues\n &lt;uri&gt; Optional. A url(&hellip;) or a comma separated list url(&hellip;), url(&hellip;), &hellip; , pointing to an image file. More than one &lt;uri&gt;\n may be provided as fallback, in case some cursor image types are not supported. A non-URL fallback (one ore more of the other values) must be at the end of the fallback list. See Using URL values for the cursor property for more details. &lt;x&gt; &lt;y&gt; Optional x- and y-coordinates (not supported by Internet Explorer). Two unit-less numbers.\n\nSupported CSS standard values\n   Category CSS value move mouse over for testing &nbsp; Description   General auto &nbsp; The browser determines the cursor to display based on the current context. E.g. equivalent to text when hovering text.   default  Default cursor, typically an arrow.   none &nbsp; No cursor is rendered \nNew in Firefox 3\n   Links &amp; status context-menu  A context menu is available under the cursor. In Gecko\/Firefox not implemented on Windows, \n\nbug 258960\n WONTFIX.   help  Indicating help is available.   pointer  E.g. used when hovering over links, typically a hand.   progress  The program is busy in the background but the user can still interact with the interface (unlike for wait).   wait  The program is busy (sometimes an hourglass or a watch).   Selection cell  Indicating that cells can be selected.   crosshair  Cross cursor, often used to indicate selection in a bitmap.   text  Indicating text can be selected, typically an I-beam.   vertical-text  Indicating that vertical text can be selected, typically a sideways I-beam.   Drag and drop alias  Indicating an alias or shortcut is to be created.   copy  Indicating that something can be copied.   move  The hovered object may be moved.   no-drop Cursor showing that a drop is not allowed at the current location. \n\nbug 275173\n on Windows, &quot;no-drop is the same as not-allowed&quot;.   not-allowed  Cursor showing that something cannot be done.   Resize &amp; scrolling all-scroll  Cursor showing that something can be scrolled in any direction (panned). \n\nbug 275174\n on Windows, &quot;all-scroll is the same as move&quot;.   col-resize  The item\/column can be resized horizontally. Often rendered as arrows pointing left and right with a vertical bar separating.   row-resize  The item\/row can be resized vertically. Often rendered as arrows pointing up and down with a horizontal bar separating them.   n-resize  Some edge is to be moved. For example, the se-resize cursor is used when the movement starts from the south-east corner of the box.   e-resize    s-resize    w-resize    ne-resize    nw-resize    se-resize    sw-resize    ew-resize &nbsp; Indicates a bidirectional resize cursor.   ns-resize &nbsp;   nesw-resize &nbsp;   nwse-resize &nbsp;  \n\nMozilla extensions\n   CSS value Description dropped deprecated since   -moz-cell \n\nObsolete, use cell. Gecko 1.9.2 (Firefox 3.6) Gecko 1.8 (Firefox 1.5)   -moz-alias \n\nObsolete, use alias. Gecko 2 (Firefox 4)   -moz-context-menu \n\nObsolete, use context-menu.   -moz-copy \n\nObsolete, use copy.   -moz-spinning \n\nObsolete, use progress. Gecko 1.7.1 (Firefox 1.0)  \n\n   -moz-grab &nbsp; An element can be grabbed.  This cursors are not recommended for use on public web pages. Use of custom image cursors may provide better cross browser compatibility.    -moz-grabbing &nbsp; An element is currently being grabbed.   -moz-zoom-in &nbsp; An element is actually being resized, enlarged or is actually being magnified. \n\nbug 204841\n   -moz-zoom-out &nbsp; An element is actually being resized, reduced or is actually being zoomed out. \n\nbug 204841\n  \n\nSupported CSS standard values\n   Category CSS value move mouse over for testing &nbsp; Description   General auto &nbsp; The browser determines the cursor to display based on the current context. E.g. equivalent to text when hovering text.   default  Default cursor, typically an arrow.   none &nbsp; No cursor is rendered \nNew in Firefox 3\n   Links &amp; status context-menu  A context menu is available under the cursor. In Gecko\/Firefox not implemented on Windows, \n\nbug 258960\n WONTFIX.   help  Indicating help is available.   pointer  E.g. used when hovering over links, typically a hand.   progress  The program is busy in the background but the user can still interact with the interface (unlike for wait).   wait  The program is busy (sometimes an hourglass or a watch).   Selection cell  Indicating that cells can be selected.   crosshair  Cross cursor, often used to indicate selection in a bitmap.   text  Indicating text can be selected, typically an I-beam.   vertical-text  Indicating that vertical text can be selected, typically a sideways I-beam.   Drag and drop alias  Indicating an alias or shortcut is to be created.   copy  Indicating that something can be copied.   move  The hovered object may be moved.   no-drop Cursor showing that a drop is not allowed at the current location. \n\nbug 275173\n on Windows, &quot;no-drop is the same as not-allowed&quot;.   not-allowed  Cursor showing that something cannot be done.   Resize &amp; scrolling all-scroll  Cursor showing that something can be scrolled in any direction (panned). \n\nbug 275174\n on Windows, &quot;all-scroll is the same as move&quot;.   col-resize  The item\/column can be resized horizontally. Often rendered as arrows pointing left and right with a vertical bar separating.   row-resize  The item\/row can be resized vertically. Often rendered as arrows pointing up and down with a horizontal bar separating them.   n-resize  Some edge is to be moved. For example, the se-resize cursor is used when the movement starts from the south-east corner of the box.   e-resize    s-resize    w-resize    ne-resize    nw-resize    se-resize    sw-resize    ew-resize &nbsp; Indicates a bidirectional resize cursor.   ns-resize &nbsp;   nesw-resize &nbsp;   nwse-resize &nbsp;  \n\nMozilla extensions\n   CSS value Description dropped deprecated since   -moz-cell \n\nObsolete, use cell. Gecko 1.9.2 (Firefox 3.6) Gecko 1.8 (Firefox 1.5)   -moz-alias \n\nObsolete, use alias. Gecko 2 (Firefox 4)   -moz-context-menu \n\nObsolete, use context-menu.   -moz-copy \n\nObsolete, use copy.   -moz-spinning \n\nObsolete, use progress. Gecko 1.7.1 (Firefox 1.0)  \n\n   -moz-grab &nbsp; An element can be grabbed.  This cursors are not recommended for use on public web pages. Use of custom image cursors may provide better cross browser compatibility.    -moz-grabbing &nbsp; An element is currently being grabbed.   -moz-zoom-in &nbsp; An element is actually being resized, enlarged or is actually being magnified. \n\nbug 204841\n   -moz-zoom-out &nbsp; An element is actually being resized, reduced or is actually being zoomed out. \n\nbug 204841\n  \n\nNotes\n\n\nGecko 2.0 note(Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\n\nSupport for loading a cursor from a URI was added for Mac OS&nbsp;X in Gecko 2.0; prior to that it was not supported on OS&nbsp;X.\n\nExamples\n \nView Live Examples CSS 2.1 and CSS 3 cursor propery test\n\n\n.foo { cursor: crosshair; }\n\n.bar { cursor: move;  cursor: cell; }  \/* use move if cell isn't supported *\/ \n\n.baz { url(hyper.cur), auto }  \/* standard cursor value as fallback must be provided *\/\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   auto | crosshair | default | move | text | wait | help | n-resize | e-resize | s-resize |w-resize | ne-resize | nw-resize | se-resize | sw-resize &nbsp;1.0 &nbsp;1.0 (1.0) &nbsp;4.0 &nbsp;7.0 1.2 (125)   &nbsp;hand Non-standard     (use pointer) &nbsp;--   &nbsp;--   &nbsp;4.0 &nbsp;7.0 --&nbsp;   &nbsp;pointer &nbsp;1.0 &nbsp;1.0 (1.0) &nbsp;6.0 &nbsp;7.0 &nbsp;1.2 (125)   &nbsp;progress &nbsp;1.0 &nbsp;1.0 (1.7.1) &nbsp;6.0 &nbsp;7.2 &nbsp;3.0 (522)   url() See Using URL values  &nbsp;1.0 &nbsp;1.5 (1.8) &nbsp;6.0 &nbsp;--   &nbsp;3.0 (522-523)   not-allowed | no-drop | vertical-text | all-scroll | col-resize | row-resize &nbsp;1.0 &nbsp;1.5 (1.8) --   &nbsp;--   &nbsp;3.0 (522)   none &nbsp;5.0 &nbsp;3.0 (1.9) --   &nbsp;--   &nbsp;5.0 (533)   inherit 1.0 1.0 8.0 9.0 1.2  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 User Interface #cursor CSS 3 User Interface #cursor Cursor Property (MSDN)\n\nSee also\n Using URL values for the cursor property pointer-events\n Webkit's cursor demos&nbsp;(including the extended ones: zoom, zoom-out, grab, grabbing)\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/direction","title":"direction","description":"Summary\nThe direction property should be set to match the direction of the text: rtl for Hebrew or Arabic text and ltr for other scripts. This should normally be done as part of the document (e.g., using the dir attribute in HTML) rather than through direct use of CSS.\nThe property sets the base text direction of block-level elements and the direction of embeddings created by the unicode-bidi\n property. It also sets the default alignment of text and block-level elements and the direction that cells flow within a table row.\n Initial value\n: ltr\n Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\ndirection: [ ltr | rtl | inherit ]&nbsp;;\n\nValues\n ltr&nbsp; The default value of direction. Text and other elements go from left to right rtl&nbsp; Text and other elements go from right to left\n\nFor the direction property to have any effect on inline-level elements, the unicode-bidi\n property's value must be 'embed' or 'override'.\nExamples\n\nblockquote {\n  direction&nbsp;: rtl&nbsp;;\n}\n\nNotes\nUnlike the dir attribute in HTML, the direction property is not inherited from table columns into table cells, since CSS inheritance follows the document tree, and table cells are inside of the rows but not inside of the columns.\nSpecification\n CSS 2.1 CSS 3 Text Module\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2.0 1.0 (1.7 or earlier)\n 5.5 9.2 1.3   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 1.0 (1.0)\n 6 8 3.1   \n\nSee also\nunicode-bidi\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/display","title":"display","description":"Summary\nThe display CSS property specifies the type of rendering box used for an element. In HTML, default display property values are taken from behaviors described in the HTML specifications or from the browser\/user default stylesheet. The default value in XML is inline.\nIn addition to the many different display box types, the value none allows the display of an element to be turned off; all child elements also have their display turned off. The document is rendered as though the element did not exist in the document tree.\n Initial value\n: inline Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: as specified, except for root element, floated elements, and absolutely positioned elements\n\nSyntax\ndisplay:  &lt;display-value&gt; | inherit\n\nValues\n&lt;display-value&gt; can be any of the following values:\n none Turns off the display of an element (it has no effect on layout); all child elements also have their display turned off. The document is rendered as though the element did not exist. To render an element box's dimensions, yet have its contents be invisible, see the visibility\n property. inline The element generates one or more inline element boxes. block The element generates a block element box. inline-block \nRequires Gecko 1.9\n Introduced in CSS 2.1. The element generates a block element box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would). list-item The element generates a block box for the content and a separate list-item inline box. compact Unsupported, dropped from the CSS 2.1 standard. run-in Dropped from the final CSS 2.1 standard (but may be in CSS&nbsp;3), but supported by other browsers. \nUnimplemented (see\n\nbug 2056\n)\n in Gecko\/Firefox  If the run-in box contains a block box, same as block. If a block box follows the run-in box, the run-in box becomes the first inline box of the block box. If a inline box follows, the run-in box becomes a block box.   table Behaves like the &lt;table&gt; HTML element. inline-table \nNew in Firefox 3\n The inline-table value does not have a direct mapping in HTML. table-caption Behaves like the &lt;caption&gt; HTML element. table-column | table-column-group These elements behave like the corresponding &lt;col&gt; and &lt;colgroup&gt; HTML elements. table-header-group | table-row-group | table-footer-group These elements behave like the corresponding &lt;thead&gt; | &lt;tbody&gt; | &lt;tfoot&gt; HTML elements. table-row Behaves like the &lt;tr&gt; HTML element. table-cell Behaves like the &lt;td&gt; HTML element.\n\nMozilla Extensions\nThese display values are not intended for use in web content. [fixme: needs update]\n -moz-inline-block \n\nObsolete Never supported reliably. -moz-inline-table \n\nObsolete Never supported. -moz-box Child elements are laid out horizontally or vertically (based on the value of the -moz-box-orient\n property). -moz-inline-box  -moz-groupbox  -moz-grid  -moz-inline-grid Child elements are laid out as a XUL grid\n. -moz-grid-group Child elements are laid out as a group of grid columns or rows. This is the layout used by the rows and columns elements. You can use the orientation (-moz-box-orient) to set which direction. Rows would normally have vertical orientation and columns would have a horizontal orientation. -moz-grid-line Child elements are laid out as a single column or row of a grid. You can use the orientation (-moz-box-orient) to set which direction. -moz-stack Child elements are laid out one on top of each other like the XUL stack\n element. -moz-inline-stack Child elements, including inline-block, block, and -moz-inline-stack are laid out atop one another. -moz-deck Child elements are laid out one on top of each other like the XUL deck\n element. Unlike a stack, only the top element is displayed. -moz-popup  -moz-marker \n\nMozilla Extensions\nThese display values are not intended for use in web content. [fixme: needs update]\n -moz-inline-block \n\nObsolete Never supported reliably. -moz-inline-table \n\nObsolete Never supported. -moz-box Child elements are laid out horizontally or vertically (based on the value of the -moz-box-orient\n property). -moz-inline-box  -moz-groupbox  -moz-grid  -moz-inline-grid Child elements are laid out as a XUL grid\n. -moz-grid-group Child elements are laid out as a group of grid columns or rows. This is the layout used by the rows and columns elements. You can use the orientation (-moz-box-orient) to set which direction. Rows would normally have vertical orientation and columns would have a horizontal orientation. -moz-grid-line Child elements are laid out as a single column or row of a grid. You can use the orientation (-moz-box-orient) to set which direction. -moz-stack Child elements are laid out one on top of each other like the XUL stack\n element. -moz-inline-stack Child elements, including inline-block, block, and -moz-inline-stack are laid out atop one another. -moz-deck Child elements are laid out one on top of each other like the XUL deck\n element. Unlike a stack, only the top element is displayed. -moz-popup  -moz-marker \n\nExamples\n\nView Live Examples\np.secret  { display: none }\n&lt;p style=&quot;display:none&quot;&gt; invisible text &lt;\/p&gt;\n\nNotes\n&quot;Block&quot; versus &quot;in-line&quot; elements\n Block-level elements create vertically distinct blocks of content - generally using a line-break before and after the content. Only this value for the display is allowed to generate a positioned element. Block behavior is exhibited by such HTML elements as &lt;p&gt;, &lt;div&gt;, &lt;blockquote&gt; or &lt;h1&gt;. display property values creating a block element type: block, list-item, table, compact and run-in.\n\n In-line elements do not create distinct blocks of content; element content is rendered using a line box (content is distributed line by line within a containing physical or virtual block element.) In-line behavior is exhibited by such HTML elements as physical and virtual character formatting, non-floated images and unmarked content. display property values creating an in-line element type: inline, inline-block, inline-table and run-in. An inline element's height is fixed to height of line which contains this element, so its height cannot be changed by CSS properties such as &quot;padding&quot; or &quot;margin&quot; except &nbsp;&quot;line-height&quot;.\n\n\nRequires Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\nXBL bindings and display:none\n\nStarting in Gecko 2.0, XBL&nbsp;bindings are no longer attached to elements when in subtrees of the DOM styled with display:&nbsp;none when they're first accessed from JavaScript, unless the elements in question are XUL.&quot;Block&quot; versus &quot;in-line&quot; elements\n Block-level elements create vertically distinct blocks of content - generally using a line-break before and after the content. Only this value for the display is allowed to generate a positioned element. Block behavior is exhibited by such HTML elements as &lt;p&gt;, &lt;div&gt;, &lt;blockquote&gt; or &lt;h1&gt;. display property values creating a block element type: block, list-item, table, compact and run-in.\n\n In-line elements do not create distinct blocks of content; element content is rendered using a line box (content is distributed line by line within a containing physical or virtual block element.) In-line behavior is exhibited by such HTML elements as physical and virtual character formatting, non-floated images and unmarked content. display property values creating an in-line element type: inline, inline-block, inline-table and run-in. An inline element's height is fixed to height of line which contains this element, so its height cannot be changed by CSS properties such as &quot;padding&quot; or &quot;margin&quot; except &nbsp;&quot;line-height&quot;.\n\n\nRequires Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\nXBL bindings and display:none\n\nStarting in Gecko 2.0, XBL&nbsp;bindings are no longer attached to elements when in subtrees of the DOM styled with display:&nbsp;none when they're first accessed from JavaScript, unless the elements in question are XUL.Browser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   none | inline | block 1.0 1.0 (1.0) 4.0 7.0 1.0 (85)   inline-block 1.0 3.0 (1.9) 5.5 (-7.0) natural inline elements only 7.0 1.0 (85)   list-item 1.0 1.0 (1.0) 6.0 7.0 1.0 (85)   run-in Non-standard      1.0 Not before inline-elements --&nbsp; 8.0 7.0 1.0 (85) Not before inline-elements   4.0 5.0 (532.5)   inline-table 1.0 3.0 (1.9) 8.0 7.0 1.0 (85)   CSS 2.1 values 1.0 1.0 (1.0) except run-in, inline block, and inline-table 8.0 7.0 1.0 (85)   3.0 (1.9)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n CSS 2.1 Visual formatting #display\n\nSee also\nvisibility\n, float\n, position\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/empty-cells","title":"empty-cells","description":"Summary\nempty-cells CSS property specifies how user agent should render borders and backgrounds around cells that have no visible content.\n Initial value\n: show Applies to: 'table-cell' elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nempty-cells: show | hide | inherit\n\nValues\n inherit\n show borders and backgrounds should be drawn like a normal cells hide no borders or backgrounds should be drawn\n\nExamples\n\nView Live Examples\n\n.contentbox td {\n  empty-cells: show;\n}\n\nSpecification\n CSS 2.1 Tables #empty-cells\n Browser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7 or earlier)\n 8.0 4.0 1.2   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1 1.0 (1.0)\n 8 6 3.1   \n\nSee also\n\n\ncaption-side\n, table-layout\n, border-collapse\n, border-spacing\n, empty-cells\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/float","title":"float","description":"Summary\nThe float CSS property specifies that an element should be taken from the normal flow and placed along the left or right side of its container, where text and inline elements will wrap around it.\n Initial value\n: none\n Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nA floating element is one where the Computed value\n of float is not none.\nNote: If you're referring to this property from JavaScript as a member of the element.style object, you must spell it at cssFloat. Also note that Internet Explorer versions 8 and older spelled this styleFloat. This is an exception to the rule that the name of the DOM member is the camel-case name of the dash-separated CSS name.Syntax\n\nfloat:  left | right | none | inherit\n\nValues\n left The element floats on the left side of its containing block. right The element floats on the right side of its containing block. none The element does not float.\n\nExamples\n\nView Live Examples\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n  div { border: solid red;  max-width: 70ex; }\n  h4  { float: left;  margin: 0; }\n&lt;\/style&gt;\n \n&lt;div&gt;\n  &lt;h4&gt;HELLO!&lt;\/h4&gt;\n  This is some text. This is some text. This is some text.\n  This is some text. This is some text. This is some text.\n  This is some text. This is some text. This is some text.\n  This is some text. This is some text. This is some text.\n&lt;\/div&gt;\r\n        \n\nHELLO!\nThis is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text.\n&nbsp;\nHELLO!\nThis is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text. This is some text.How floats are positioned\nAs mentioned above, when an element is floated it is taken out of the normal flow of the document.&nbsp; It is shifted to the left or right until it touches the edge of it's containing box or another floated element.\nIn the image below, there are three red squares.&nbsp; Two are floated left and one is floated right.&nbsp; Note that the second &quot;left&quot; red square is placed to the right of the first.&nbsp; Additional squares&nbsp; would continue to stack to the right until they filled the containing box, after which they would wrap to the next line.\n\nClearing floats\nIn the example above, the floated elements are shorter vertically than the block of text they're floated within. However, if the text was not long enough to wrap below the bottom of all the floats, we might see unanticipated effects. If the paragraph above, for instance, only read &quot;Lorem ipsum dolor sit amet,&quot; and was followed by another heading of the same style as the &quot;Floats Example&quot; heading, the second heading would appear between the red boxes. Most likely, we want the next heading to be aligned all the way to the left. To accomplish that, we'd need to clear the floats.\nThe simplest way to clear the floats in this example is to add the clear\n property to the new heading we want to be sure is aligned left:\n\nh2.secondHeading { clear: both; }\n\nHowever, this method only works if there are no other elements within the same block formatting context that we do want the heading to continue to appear next to horizontally. If our H2 has siblings which are a sidebars floated to the left and right, using clear will force it to appear below both sidebars, which is probably not what we want.\nIf clearing floats on an element below them is not an option, another approach is to limit the block formatting context of the floats' container. Referring to the example above again, it appears that all three red boxes are within a P element. We can set the overflow\n property on that P to hidden or auto to cause it to expand to contain them, but not allow them to drop out the bottom of it:\n\np.withRedBoxes { overflow: hidden; height: auto; }\n\nNote: Setting overflow to scroll will also contain any floated child elements, but will show scrollbars no matter the height of the content. Here we're setting height to auto even though that's the default to indicate that the container should grow to accommodate its content.Clearing floats\nIn the example above, the floated elements are shorter vertically than the block of text they're floated within. However, if the text was not long enough to wrap below the bottom of all the floats, we might see unanticipated effects. If the paragraph above, for instance, only read &quot;Lorem ipsum dolor sit amet,&quot; and was followed by another heading of the same style as the &quot;Floats Example&quot; heading, the second heading would appear between the red boxes. Most likely, we want the next heading to be aligned all the way to the left. To accomplish that, we'd need to clear the floats.\nThe simplest way to clear the floats in this example is to add the clear\n property to the new heading we want to be sure is aligned left:\n\nh2.secondHeading { clear: both; }\n\nHowever, this method only works if there are no other elements within the same block formatting context that we do want the heading to continue to appear next to horizontally. If our H2 has siblings which are a sidebars floated to the left and right, using clear will force it to appear below both sidebars, which is probably not what we want.\nIf clearing floats on an element below them is not an option, another approach is to limit the block formatting context of the floats' container. Referring to the example above again, it appears that all three red boxes are within a P element. We can set the overflow\n property on that P to hidden or auto to cause it to expand to contain them, but not allow them to drop out the bottom of it:\n\np.withRedBoxes { overflow: hidden; height: auto; }\n\nNote: Setting overflow to scroll will also contain any floated child elements, but will show scrollbars no matter the height of the content. Here we're setting height to auto even though that's the default to indicate that the container should grow to accommodate its content.Specifications\n CSS 2.1 Visual formatting #float\n Browser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n clear\n, display\n, position\n Block formatting context\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/font","title":"font","description":"Summary\nThe font CSS property has two different use cases:\n font is a shorthand property for setting font-style\n, font-variant\n, font-weight\n, font-size\n, line-height\n and font-family\n in a single CSS declaration. The font property stets the element's font to a system font.\n\n Initial value\n: see individual properties Applies to: all elements Inherited\n: yes Percentages: see individual properties Media: visual\n  Computed value\n: see individual properties\n\nSyntax\n\nfont:   [ font-style\n|| font-variant\n|| font-weight\n]? font-size\n[ \/ line-height\n]? font-family\n\n\nfont:   caption | icon | menu | message-box | small-caption | status-bar | inherit\n|\n\n       -moz-window | -moz-document | -moz-workspace | -moz-desktop | -moz-info | \n       -moz-dialog | -moz-button | -moz-pull-down-menu | -moz-list | -moz-field\n\nValues\nUsing the font shorthand property sets the longhand properties as specified, and sets all other font-related properties to their initial values. See font-style\n, font-variant\n, font-weight\n, font-size\n, line-height\n, and font-family\n for legal values of each property.\nSystem Fonts\nSystem fonts can also be specified using the font property, instead of specifying individual longhand properties:\n caption The font used for captioned controls (e.g., buttons, drop-downs, etc.). icon The font used to label icons. menu The font used in menus (e.g., dropdown menus and menu lists). message-box The font used in dialog boxes. small-caption The font used for labeling small controls. status-bar The font used in window status bars.\n\nMozilla Extensions\n -moz-window The default system font used in windows. -moz-document  -moz-workspace  -moz-desktop  -moz-info  -moz-dialog  -moz-button  -moz-pull-down-menu  -moz-list  -moz-field \n\nSystem Fonts\nSystem fonts can also be specified using the font property, instead of specifying individual longhand properties:\n caption The font used for captioned controls (e.g., buttons, drop-downs, etc.). icon The font used to label icons. menu The font used in menus (e.g., dropdown menus and menu lists). message-box The font used in dialog boxes. small-caption The font used for labeling small controls. status-bar The font used in window status bars.\n\nMozilla Extensions\n -moz-window The default system font used in windows. -moz-document  -moz-workspace  -moz-desktop  -moz-info  -moz-dialog  -moz-button  -moz-pull-down-menu  -moz-list  -moz-field \n\nExamples\n\nView Live Examples\n\n\/* Set the font size to 12px and the line height to 14px. Set the font family to sans-serif *\/\np { font: 12px\/14px sans-serif }\n\n\n\/* Set the font size to 80% of the parent element or default value (if no parent element present) \nand set the font family to sans-serif *\/ \np { font: 80% sans-serif }\n\n\n\/* Set the font weight to bold, the font-style to italic, the font size to large, \nand the font family to serif. *\/\np { font: bold italic large serif }\n\n\n\/* Use the same font as the status bar of the window *\/\np { font: status-bar }\nNotes\nThe font-size\n and font-family\n parts of the shorthand are mandatory. Omitting them is a syntax error, and causes the entire declaration to be ignored.\nProperties for which no values are given are set to their initial value, which is normal for all properties that can be omitted (font-style\n, font-variant\n, font-weight\n, and line-height\n).\nThe font-size-adjust\n property is also set to its initial value (none) when the font\n shorthand property is specified.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Shorthand 1.0 1.0 (1.0) 3.0-4.0 3.5 1.0 (85)   System fonts 1.0 1.0 (1.0) 4.0-5.5 6.0 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Fonts #font CSS 3 User interface #system-fonts Candidate recommendation, not yet implemented\n\nSee also\n\nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/font-family","title":"font-family","description":"Summary\nThe font-family CSS property allows for a prioritized list of font family names and\/or generic family names to be specified for the selected element. Unlike most other CSS properties, values are separated by a comma to indicate that they are alternatives.\nIt is often convenient to use the shorthand property font\n to set font-size and other font related properties at one go.\n Initial value\n: depends on user agent Applies to: all elements Inherited\n: yes Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nfont-family:  &lt;family-or-generic-name&gt; [, &lt;family-or-generic-name&gt;]* | inherit\n\n\nValues\n&lt;family-or-generic-name&gt; is either a family-name or a generic-family.\n family-name The name of a font family. For example, &quot;Times&quot; and &quot;Helvetica&quot; are font families. Font family names containing whitespace should be quoted. generic-family Generic font families are a fallback mechanism, a means of preserving some of the style sheet author's intent in case when none of the specified fonts are available. Generic family names are keywords and must not be quoted. A generic font family should be the a last alternative in the list of font family names.  serif Glyphs have finishing strokes, flared or tapering ends, or have actual serifed endings. E.g.&nbsp; Palatino, &quot;Palatino Linotype&quot;, Palladio, &quot;URW Palladio&quot;, serif sans-serif Glyphs have stroke endings that are plain. E.g. 'Trebuchet MS', 'Liberation Sans', 'Nimbus Sans L', sans-serif cursive Glyphs in cursive fonts generally have either joining strokes or other cursive characteristics beyond those of italic typefaces. The glyphs are partially or completely connected, and the result looks more like handwritten pen or brush writing than printed letterwork. fantasy Fantasy fonts are primarily decorative fonts that contain playful representations of characters. monospace All glyphs have the same fixed width. E.g. &quot;DejaVu Sans Mono&quot;, Menlo, Consolas, &quot;Liberation Mono&quot;, Monaco, &quot;Lucida Console&quot;, monospace  \n\nExamples\n\nView Live Examples\n\nbody     { font-family: &quot;Gill Sans Extrabold&quot;, Helvetica, sans-serif }\n\n.receipt { font-family: Courier, &quot;Lucida Console&quot;, monospace }\n\nNotes\nYou should always specify a generic family name as the last value in the font-family property.\nThe font-family property specifies a list of fonts, from highest priority to lowest. Font selection does not simply stop at the first font named in the list that is on the user's system. Rather, font selection is done one character at a time, so that if an available font does not have a glyph that can display a character needed, the later available fonts are tried. However, this doesn't work in Internet Explorer.\nWhen a font is only available in some styles, variants, or sizes, those properties may also influence which font family is chosen.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 3.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Fonts #font-family CSS 3 Fonts #font-family Working draft\n\nSee also\n\nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/font-size","title":"font-size","description":"Summary\nThe font-size property specifies the size of the font. The font size may, in turn, change the size of other items, since it is used to compute the value of em and ex length units.\n Initial value\n: medium\n Applies to: all elements Inherited\n: Yes Percentages: relative to parent element's font size Media: visual\n  Computed value\n: absolute length\n\nSyntax\n\nfont-size: xx-small | x-small | small | medium | large | x-large | xx-large\nfont-size: smaller | larger\nfont-size: &lt;length&gt; | &lt;percentage&gt; | inherit\n\n\nValues\n xx-small, x-small, small, medium, large, x-large, xx-large&nbsp; A set of absolute size keywords based on the user's default font size (which is medium). Similar to presentational HTML's &lt;font size=&quot;1&quot;&gt; through &lt;font size=&quot;7&quot;&gt; where the user's default font size is &lt;font size=&quot;3&quot;&gt;. larger, smaller&nbsp; Larger or smaller than the parent element's font size, by roughly the ratio used to separate the absolute size keywords above. length  A positive length. When the units are specified in em or ex,&nbsp; the size is defined relative to the size of the font on the parent element of the element in question. For example, 0.5em is half the font size of the parent of the current element. percentage A positive percentage of the parent element's font size.\n\nIt is best to avoid using values that are not relative to the user's default font size, such as lengths with units other than em or ex. However, if such values must be used, px are preferred over other units because their meaning does not vary depending on what the operating system thinks (generally incorrectly) the resolution of the monitor is.\nPossible approaches\nThere are several ways to specify the font size, with keywords or numerical values for pixels or ems. Choose the appropriate method based on the needs for the particular web page.\nKeywords\nKeywords are a good way to set the size of fonts on the web. By setting a keyword font size on the body element, you can set relative font-sizing everywhere else on the page, giving you the ability to easily scale the font up or down on the entire page accordingly.\nPixels\nSetting the font size in pixel values (px) is a good choice when you need pixel accuracy. A px value is static. This is an OS-independent and cross-browser way of literally telling the browsers to render the letters at exactly the number of pixels in height that you specified. The results may vary slightly across browsers, as they may use different algorithms to achieve a similar effect.\nFont sizing settings can also be used in combination. For example, if a parent element is set to 16px and its child element is set to larger, the child element displays larger than the parent element in the page.\nNote:&nbsp;Defining font sizes in pixel is not accessible, because the user cannot change the font size from the browser. (For example, users with limited vision may wish to set the font size much larger than the size chosen by a web designer.) Therefore, avoid using pixels for font sizes if you wish to create an inclusive design.\nEms\nAnother way of setting the font size is with em values. The size of an em value is dynamic. When defining the font-size property, an em is equal to the size of the font that applies to the parent of the element in question. If you haven't set the font size anywhere on the page, then it is the browser default, which is probably 16px. So, by default 1em = 16px, and 2em = 32px. If you set a font-size of 20px on the body element, then 1em = 20px and 2em = 40px. Note that the value 2 is essentially a multiplier of the current em size.\nIn order to calculate the em equivalent for any pixel value required, you can use this formula:\n\nem = desired element pixel value \/ parent element font-size in pixels\nFor example, suppose the font-size of the body of the page is set to 1em, with the browser standard of 1em = 16px; if the font-size you want is 12px, then you should specify 0.75em (because 12\/16 = 0.75). Similarly, if you want a font size of 10px, then specify 0.625em (10\/16 = 0.625); for 22px, specify 1.375em (22\/16).\nA popular technique to use throughout the document is to set the the font-size of the body to 62.5% (that is 62.5% of the default of 16px), which equates to 10px, or 0.625em. Now you can set the font-size for any elements using em units, with an easy-to-remember conversion, by dividing the px value by 10. This way 6px = 0.6em, 8px = 0.8em, 12px = 1.2em, 14px = 1.4em, 16px = 1.6em. For example:\n\nbody {\n  font-size: 62.5%; \/* font-size 1em = 10px *\/\n}\np {\n  font-size: 1.6em; \/* 1.6em = 16px *\/\n}\n&nbsp;The em is a very useful unit in CSS, since it can adapt automatically to the font that the reader chooses to use.\nKeywords\nKeywords are a good way to set the size of fonts on the web. By setting a keyword font size on the body element, you can set relative font-sizing everywhere else on the page, giving you the ability to easily scale the font up or down on the entire page accordingly.\nPixels\nSetting the font size in pixel values (px) is a good choice when you need pixel accuracy. A px value is static. This is an OS-independent and cross-browser way of literally telling the browsers to render the letters at exactly the number of pixels in height that you specified. The results may vary slightly across browsers, as they may use different algorithms to achieve a similar effect.\nFont sizing settings can also be used in combination. For example, if a parent element is set to 16px and its child element is set to larger, the child element displays larger than the parent element in the page.\nNote:&nbsp;Defining font sizes in pixel is not accessible, because the user cannot change the font size from the browser. (For example, users with limited vision may wish to set the font size much larger than the size chosen by a web designer.) Therefore, avoid using pixels for font sizes if you wish to create an inclusive design.\nEms\nAnother way of setting the font size is with em values. The size of an em value is dynamic. When defining the font-size property, an em is equal to the size of the font that applies to the parent of the element in question. If you haven't set the font size anywhere on the page, then it is the browser default, which is probably 16px. So, by default 1em = 16px, and 2em = 32px. If you set a font-size of 20px on the body element, then 1em = 20px and 2em = 40px. Note that the value 2 is essentially a multiplier of the current em size.\nIn order to calculate the em equivalent for any pixel value required, you can use this formula:\n\nem = desired element pixel value \/ parent element font-size in pixels\nFor example, suppose the font-size of the body of the page is set to 1em, with the browser standard of 1em = 16px; if the font-size you want is 12px, then you should specify 0.75em (because 12\/16 = 0.75). Similarly, if you want a font size of 10px, then specify 0.625em (10\/16 = 0.625); for 22px, specify 1.375em (22\/16).\nA popular technique to use throughout the document is to set the the font-size of the body to 62.5% (that is 62.5% of the default of 16px), which equates to 10px, or 0.625em. Now you can set the font-size for any elements using em units, with an easy-to-remember conversion, by dividing the px value by 10. This way 6px = 0.6em, 8px = 0.8em, 12px = 1.2em, 14px = 1.4em, 16px = 1.6em. For example:\n\nbody {\n  font-size: 62.5%; \/* font-size 1em = 10px *\/\n}\np {\n  font-size: 1.6em; \/* 1.6em = 16px *\/\n}\n&nbsp;The em is a very useful unit in CSS, since it can adapt automatically to the font that the reader chooses to use.\nExamples\n\nView Live Examples\n\r\n          \/* Set paragraph text to be very large. *\/\np { font-size: xx-large }\n\n\/* Set h1 (level 1 heading) text to be 2.5 times the size\n * of the text around it. *\/\nh1 { font-size: 250% }\n\n\/* Sets text enclosed within span tag to be 16px *\/\nspan { font-size: 16px; }\r\n        \nNotes\nem and ex units on the font-size\n property are relative to the parent element's font size (unlike all other properties, where they're relative to the font size on the element). This means em units and percentages do the same thing for font-size\n.\nSpecifications\n CSS 2.1 CSS3 Fonts\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2.0 1.0 5.5 9.2 1.3  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/font-size-adjust","title":"font-size-adjust","description":"Summary\nThe font-size-adjust CSS property specifies that font size should be chosen based on the height of lowercase letters rather than the height of capital letters.\nThis is useful since the legibility of fonts, especially at small sizes, is determined more by the size of lowercase letters than by the size of capital letters. This can cause problems when the first-choice font-family\n is unavailable and its replacement has a significantly different aspect ratio (the ratio of the size of lowercase letters to the size of the font).\nTo do this in a way that is compatible with browsers that do not support font-size-adjust, it is specified as a number that the font-size\n property is multiplied by. This means the value specified for the property should generally be the aspect ratio of the first choice font. For example, a style sheet that specifies\n\nfont-size: 16px;  font-size-adjust: 0.5;\nis really specifying that the lowercase letters of the font should be 8px high (0.5 &times; 16px).\n Initial value\n: none\n Applies to: all elements Inherited\n: yes Percentages: N\/A Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nfont-size-adjust:  &lt;number&gt; | none | inherit\n\nValues\n none Choose the size of the font based only on the font-size\n property. &lt;number&gt;  Choose the size of the font so that its lowercase letters (as determined by the x-height metric of the font) are the specified number times the font-size\n. The number specified should generally be the aspect ratio (ratio of x-height to font size) of the first choice font-family\n. This will mean that the first choice font, when available, will appear the same size in browsers, whether or not they support font-size-adjust. \n\nExamples\n\nView Live Examples\n\r\n          p {\n   font: 12px Verdana, &quot;DejaVu Sans&quot;, sans-serif;\n   font-size-adjust: 0.58;\n}\r\n        Browser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support --&nbsp; 1.0 (1.0) Windows only --&nbsp; --&nbsp; --&nbsp;   3.0 (1.9)\n All platforms  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? 1.0 (1.9.2)\n ? ? ?  \n\n\nSpecifications\nThis property was specified in CSS 2, but removed from CSS 2.1. It may come back in CSS 3.\n CSS 2 Fonts #font-size-adjust May 1998, obsolete CSS 3 Fonts #font-size-adjust Working draft\n\nSee also\n David Baron about font-size-adjust \nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/font-stretch","title":"font-stretch","description":"Summary\nThe font-stretch CSS property selects a normal, condensed, or extended face from a font family.\n Initial value\n: normal\n Applies to: all elements Inherited\n: Yes Percentages: N\/A Media: visual\n  Computed value\n: specified value\n\nSyntax\n\nfont-stretch:  inherit | \n               ultra-condensed | extra-condensed | condensed | semi-condensed |\n               normal | semi-expanded | expanded | extra-expanded | ultra-expanded |\n               wider | narrower\nValues\n normal Specifies a normal font face. semi-condensed, condensed, extra-condensed, ultra-condensed Specifies a font face condensed than normal, with ultra-condensed as the most condensed. semi-expanded, expanded, extra-expanded, ultra-expanded Specifies a font face expanded than normal, with ultra-expanded as the most expanded. wider, narrower \nDeprecated since CSS 3\n Relative values. The wider and narrower keywords indicate values relative to the values of the parent element. &nbsp; \nExamples\n\nh1 { font-stretch: extra-expanded }\np  { font-stretch: condensed }\n\nSpecifications\n font-stretch was defined in CSS 2, but dropped in CSS 2.1 due lack of implementation experience. It's newly drafted in CSS 3.\nThe&nbsp;relative values&nbsp;wider&nbsp;and&nbsp;narrower&nbsp;have been dropped from the&nbsp;font-stretch&nbsp;property in the&nbsp;CSS Fonts Module Level 3 Working Draft (24 March 2011).\n CSS 2 1998-05-12 Fonts #font-styling Obsolete CSS 3 Fonts #font-stretch Editor's draft, handle with care!&nbsp;\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support -- 9.0 (9.0)\n [1] [*] 9.0 [*] -- --   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support -- 9.0 (9.0)\n [2] [*] ? -- --   \n\n[*] Implements the CSS Fonts Module Level 3 specification. Hence do not support the deprecated wider and narrower keywords.See also\n\nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/font-style","title":"font-style","description":"Summary\nThe font-style CSS property allows italic or oblique faces to be selected within a font-family\n. \n\n Initial value\n: normal\n Applies to: all elements Inherited\n: yes Media: visual\n  Computed value\n: specified value\n\nSyntax\n\nfont-style:  normal | italic | oblique | inherit\n\n\nValues\nItalic forms are generally cursive in nature while oblique faces are typically sloped versions of the regular face. Oblique faces can be simulated by artificially sloping the glyphs of the regular face.\n normal selects a font that is classified as normal within a font-family\n italic selects a font that is labeled italic, if that is not available, one labeled oblique  oblique selects a font that is labeled oblique \n\nExample\n\nThis paragraph is italic.\nThis paragraph is oblique.\nThe above example shows the two font-style values. The CSS looks like this:\n\r\n          p.italic { font-style:italic } \np.oblique { font-style: oblique }\r\n        \nAnd the HTML&nbsp;looks like this:\n\r\n          &lt;p class=&quot;italic&quot;&gt;This paragraph is italic.&lt;\/p&gt;\n&lt;p class=&quot;oblique&quot;&gt;This paragraph is oblique.&lt;\/p&gt;\r\n        \nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7 or earlier)\n 1.0 1.0 3.5 1.0  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE Mobile Opera Mobile Safari Mobile   Basic support 1.0 (1.9.2)\n ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Fonts #font-style CSS 3 Fonts #font-style Working draft\n\nSee also\n\nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/font-variant","title":"font-variant","description":"Summary\nThe font-variant CSS property selects a normal, or small-caps face from a font family. Setting font-variant is also possible by using the font\n shorthand.\n Initial value\n: normal\n Applies to: all elements Inherited\n: Yes Percentages: N\/A Media: visual\n  Computed value\n: specified value\n\nSyntax\n\nfont-variant:  normal | small-caps | inherit\n\nValues\n normal Specifies a normal font face. small-caps Specifies a font that is labeled as a small-caps font. If a small-caps font is not available, Mozilla (Firefox) and other browsers will simulate a small-caps font, i.e. by taking a normal font and replacing the lowercase letters by scaled uppercase characters.\n\nExamples\n\np { font-variant: small-caps }\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Fonts #font-variant\n\nSee also\n text-transform\n \nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/font-weight","title":"font-weight","description":"Summary\nThe font-weight\n property specifies the weight or boldness of the font. However, some fonts are not available in all weights; some are available only on normal and bold.\n Initial value\n: normal\n Applies to: all elements Inherited\n: yes Percentages: N\/A Media: visual\n  Computed value\n: One of the numeric values (100, etc.), or one of the numeric values plus one of the relative values (bolder or lighter)\n\nSyntax\nfont-weight: normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 | inherit\n\nValues\n normal&nbsp; Normal font weight. Same as 400. bold&nbsp; Bold font weight. Same as 700. lighter&nbsp; One font weight lighter than the parent element (among the available weights of the font). bolder&nbsp; One font weight darker than the parent element (among the available weights of the font). 100, 200, 300, 400, 500, 600, 700, 800, 900&nbsp; Numeric font weights for fonts that provide more than just normal and bold. If the exact weight given is unavailable, then 600-900 use the closest available darker weight (or, if there is none, the closest available lighter weight), and 100-500 use the closest available lighter weight (or, if there is none, the closest available darker weight). This means that for fonts that provide only normal and bold, 100-500 are normal, and 600-900 are bold.\n\nExamples\n\nView Live Examples\n\n\/* Set paragraph text to be bold. *\/\np {font-weight: bold}\n\n\/* Set h1 (level 1 heading) text to one step darker than\n   normal but less than a standard bold. *\/\nh1 {font-weight: 500}\n\n\/* Sets text enclosed within span tag to be one step lighter\n   than the parent. *\/\nspan {font-weight: lighter}\n\nNotes\nSpecifications\n CSS 1 CSS 2.1 CSS 3\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2.0 1.0 (1.7 or earlier)\n 3.0 3.5 1.3   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 1.0 (1)\n 6.0 6.0 3.1   \n\nSee also\n\nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n \n&nbsp;\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/height","title":"height","description":"Summary\nThe height CSS property specifies the height of the content area of an element. The content area is inside the padding, border, and margin of the element.\n Initial value\n: auto\n Applies to: block level and replaced elements Inherited\n: no Percentages: refer to the height of the containing block, see below Media: visual\n  Computed value\n: the percentage or auto or the absolute length\nSyntax\n\nheight:  &lt;length&gt; | &lt;percentage&gt; | auto | inherit\n\nValues\n &lt;length&gt; See \n&lt;length&gt;\n for possible units. &lt;percentage&gt; The &lt;percentage&gt;\n is calculated with respect to the height of the containing block. If the height of the containing block is not specified explicitly, the value computes to auto. A percentage height on the root element (e.g. &lt;html&gt;) is relative to the viewport. auto The browser will calculate and select a width for the specified element.\n\nExamples\n\nView the live example\n\n\ntable { height: 100%; }\n\nimg { height: 200px; }\n\nform { height: auto; }\n\n\/* make sure percentage height of body's children works as expected *\/\nhtml, body { margin: 0; height: 100%; }\n\nNotes\nThe min-height\n and max-height\n properties override height\n.\nSpecifications\n CSS 2.1 #height\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\nbox model, width\n, box-sizing\n, min-height\n, max-height\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/hyphens","title":"hyphens","description":"Summary\nThe hyphens property tells the browser how to go about splitting words to improve the layout of text when line-wrapping.\nNote: The rules defining how hyphenation is performed are not explicitly defined by the specification, so the exact hyphenation may vary from browser to browser.\n Initial value\n: manual Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\nhyphens:  none |&nbsp;manual | auto\n\nValues\n none Words are not broken at line breaks, even if characters inside the words suggest line break points. Lines will only wrap at whitespace. manual Words are broken for line-wrapping only where characters inside the word suggest line break opportunities. See Suggesting line break opportunities for details. auto The browser is free to automatically break words at appropriate hyphenation points, following whatever rules it chooses to use. Suggested line break opportunities, as covered in Suggesting line break opportunities, should be preferred over automatically selecting break points whenever possible.\n\nNote: The auto setting's behavior depends on the language being properly tagged so that the appropriate hyphenation rules can be selected. You must specify a language using the lang HTML&nbsp;attribute in order to guarantee that automatic hyphenation is applied in the language of your choice.\n\n\nSuggesting line break opportunities\nThere are two Unicode character that can be used to manually specify potential line break points within text:\n U+2010 (HYPHEN) The &quot;hard&quot;&nbsp;hyphen character indicates a visible line break opportunity. Even if the line is not actually broken at that point, the hyphen is still rendered. U+00AD (SHY) An invisible, &quot;soft&quot; hyphen. This character is not rendered visibly; instead, it suggests a place where the browser might choose to break the word if necessary. In HTML, you can use &amp;shy; to insert a soft hyphen.\n\nExample\nThis CSS snippet creates three classes, one for each possible configuration of the hyphens property.\n\r\n          p.none {\n  -moz-hyphens: none;\n  hyphens: none;\n}\np.manual {\n  -moz-hyphens: manual;\n  hyphens: manual;\n}\np.auto {\n  -moz-hyphens: auto;\n  hyphens: auto;\n}\r\n        \nTake a look at the live example to see these configurations in action; resize the window while looking at them to see how hyphenation is handled in your browser.\n\nView the live example\n\nSpecifications\n CSS 3 Text:&nbsp;hyphens CSS 3 Generated content: hyphens\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ?  6.0 (6.0)\n\n-moz Automatic hyphenation only works for languages whose hyphenation dictionaries are integrated in Gecko. See this note for a complete list of such languages.   \n10.0 \n-ms Automatic hyphenation only works for languages whose hyphenation dictionaries are integrated in Internet Explorer. See this note for a complete list of such languages.  ?  5.1\n-webkit      \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ?  6.0 (6.0)\n\n-moz Automatic hyphenation only works for languages whose hyphenation dictionaries are integrated in Gecko. See this note for a complete list of such languages.  ? ? ?   \n\nLanguages support notes\nVarious browsers supplies hyphenation dictionaries for the following languages:\n   Language Firefox IE   Afrikaans (af) 8.0 &nbsp;   Bulgarian (bg) 8.0 &nbsp;   Catalan (ca) 8.0 10.0   Czech &nbsp; 10.0   Swiss German, Traditional&nbsp;Orthography (de-CH) 8.0 &nbsp;   Danish (da) 8.0 10.0   Dutch (nl) 8.0 10.0   English (en) ?? 10.0   English, United States (en-US) 6.0 10.0   Esperanto (eo) 8.0 &nbsp;   Estonian (et) 8.0 &nbsp;   Finnish (fi) 8.0 &nbsp;   French (fr) 8.0 10.0   Galician (gl) 9.0 &nbsp;   German, Traditional&nbsp;Orthography (de-1901) 8.0 ??   German, Reformed Orthography (de-1996) 8.0 10.0   Hungarian (hu) 9.0 &nbsp;   Icelandic (is) 8.0 &nbsp;   Interlingua (ia) 8.0 &nbsp;   Italian (it) 9.0 10.0   Kurmanji (kmr) 8.0 &nbsp;   Latin (la) 8.0 &nbsp;   Lithuanian (lt) 8.0 &nbsp;   Mongolian (mn) 8.0 &nbsp;   Norwegian Bokm&aring;l (nb) 8.0 10.0   Norwegian Nynorsk (nn) 8.0 10.0   Polish &nbsp; 10.0   Portuguese (pt) 8.0 10.0   Brazilian Portuguese &nbsp; 10.0   Russian (ru) 8.0 10.0   Serbo-Croatian (sh) 8.0 &nbsp;   Slovenian (sl) 8.0 &nbsp;   Spanish (es) 8.0 10.0   Swedish (sv) 8.0 10.0   Turkish (tr) 9.0 10.0   Ukrainian (uk) 9.0 &nbsp;   Upper Sorbian (hsb) 8.0 &nbsp;   Welsh (cy) 8.0 &nbsp;  \n\nLanguages support notes\nVarious browsers supplies hyphenation dictionaries for the following languages:\n   Language Firefox IE   Afrikaans (af) 8.0 &nbsp;   Bulgarian (bg) 8.0 &nbsp;   Catalan (ca) 8.0 10.0   Czech &nbsp; 10.0   Swiss German, Traditional&nbsp;Orthography (de-CH) 8.0 &nbsp;   Danish (da) 8.0 10.0   Dutch (nl) 8.0 10.0   English (en) ?? 10.0   English, United States (en-US) 6.0 10.0   Esperanto (eo) 8.0 &nbsp;   Estonian (et) 8.0 &nbsp;   Finnish (fi) 8.0 &nbsp;   French (fr) 8.0 10.0   Galician (gl) 9.0 &nbsp;   German, Traditional&nbsp;Orthography (de-1901) 8.0 ??   German, Reformed Orthography (de-1996) 8.0 10.0   Hungarian (hu) 9.0 &nbsp;   Icelandic (is) 8.0 &nbsp;   Interlingua (ia) 8.0 &nbsp;   Italian (it) 9.0 10.0   Kurmanji (kmr) 8.0 &nbsp;   Latin (la) 8.0 &nbsp;   Lithuanian (lt) 8.0 &nbsp;   Mongolian (mn) 8.0 &nbsp;   Norwegian Bokm&aring;l (nb) 8.0 10.0   Norwegian Nynorsk (nn) 8.0 10.0   Polish &nbsp; 10.0   Portuguese (pt) 8.0 10.0   Brazilian Portuguese &nbsp; 10.0   Russian (ru) 8.0 10.0   Serbo-Croatian (sh) 8.0 &nbsp;   Slovenian (sl) 8.0 &nbsp;   Spanish (es) 8.0 10.0   Swedish (sv) 8.0 10.0   Turkish (tr) 9.0 10.0   Ukrainian (uk) 9.0 &nbsp;   Upper Sorbian (hsb) 8.0 &nbsp;   Welsh (cy) 8.0 &nbsp;  \n\nSee also\ncontent\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/image-rendering","title":"image-rendering","description":"Summary\nThe image-rendering property provides a hint to the user agent about how to handle its image rendering. image-rendering applies to scaled images (and other elements, see below). For example, if the natural size of the image is 100&times;100px but the page author specifies the dimensions to 200&times;200px (or 50&times;50px), then the image will be upscaled (or downscaled) to the new dimensions using the specified algorithm. Scaling may also apply due to user interaction (zooming).\n Initial value\n: auto\n Applies to:  images background-images of any element HTML5&nbsp; &lt;video&gt;\n Element HTML5 &lt;canvas&gt;\n Element   Inherited\n: yes Media: visual\n  Computed value\n: as specified\n\nSyntax\n\n\n\n\nimage-rendering:  auto | inherit | optimizeSpeed | optimizeQuality | -moz-crisp-edges | -o-crisp-edges \nValues\n auto Default value, depends on the user agent. Since version 1.9 (Firefox 3.0), Gecko uses bilinear resampling (high quality). optimizeQuality Indicates that the user agent shall emphasize quality over rendering speed. Gecko uses bilinear resampling (high quality). optimizeSpeed The user agent should use a resampling algorithm which achieves the goal of fast rendering. Currently Gecko (Firefox) uses nearest neighbor resampling (low quality). -moz-crisp-edges | -o-crisp-edges Mozilla extension. Gecko (Firefox) always uses nearest neighbor resampling (low quality). Use this value to avoid upscaled images with sharp edges getting blurry. \n\nbug 423756\n. -webkit-optimize-contrast WebKit extension (\n\nWebKit bug 56627). WebKit uses a pixelation-generating resampling. The algorithm for now seems to be nearest-neighbor, but this can be WebKit-port specific, and there are other algorithms that can be used as well. Use this value to avoid upscaled images with sharp edges getting blurry.\n\n  Currently auto and optimizeQuality are equal by default, both result in bilinear resampling. Currently optimizeSpeed and -moz-crisp-edges are equal, both result in nearest neighbor resampling.  Warning: Unlike the gecko rendering engine, optimizeSpeed&nbsp;and -webkit-optimize-contrast do not mean the same thing  in WebKit.  \n\nExamples\n\n\n\n\nimg  { \n       image-rendering: optimizeQuality;  \/* Firefox 3.6+; default behavior is identical, no need to specify *\/\n       -ms-interpolation-mode: bicubic;   \/* Internet Explorer 7.0; default in IE8+ *\/\n     }\n\n\n\n\n\/* applies to GIF and PNG images; avoids blurry edges *\/\n\nimg[src$=&quot;.gif&quot;], img[src$=&quot;.png&quot;] {\n\n                  &nbsp;image-rendering: -moz-crisp-edges;         \/* Firefox *\/\n                   -ms-interpolation-mode: nearest-neighbor;  \/* IE *\/\n                 }\n\n\n\n\nhtml  { image-rendering: -moz-crisp-edges; }        \/* all images, videos, background-images *\/\nimg   { -ms-interpolation-mode: nearest-neighbor; } \/* all images, IE *\/\n\n\n\n\n\ndiv { \n        background: url(chessboard.gif) no-repeat 50% 50%;\n        image-rendering: -moz-crisp-edges;\n}\n\n\n\n\nvideo { image-rendering: optimizeSpeed; }\nLive Examples\nimage-rendering:optimizeQuality; -ms-interpolation-mode:bicubic; 78% 100% 138% downsized upsized\nimage-rendering:-moz-crisp-edges; image-rendering: -o-crisp-edges; image-rendering:-webkit-optimize-contrast; -ms-interpolation-mode:nearest-neighbor; 78% 100% 138% downsized upsized\nLive Examples\nimage-rendering:optimizeQuality; -ms-interpolation-mode:bicubic; 78% 100% 138% downsized upsized\nimage-rendering:-moz-crisp-edges; image-rendering: -o-crisp-edges; image-rendering:-webkit-optimize-contrast; -ms-interpolation-mode:nearest-neighbor; 78% 100% 138% downsized upsized\nNotes\n \n\nbug 486918\n (Awful image quality in downscaling)\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support  -- Note: Should get the landed -webkit-optimize-contrast WebKit patch soon.   3.6 (1.9.2) image-rendering 7.0 -ms-interpolation-mode: bicubic | nearest-neighbor  applies only to images (JPG, GIF, PNG, ...) in IE7 only for images without transparency does not inherit default value IE7: nearest-neighbor (low quality) default value IE8+: bicubic&nbsp;&nbsp;&nbsp; (high quality)    11.60 image-rendering: auto | -o-crisp-edges | optimizeSpeed | optimizeQuality   6533.21.1, r86920 image-rendering: auto | optimizeSpeed | optimizeQuality | -webkit-optimize-contrast  -webkit-optimize-contrast is similar to -moz-crisp-edges, in that it selects the pixelation algorithm over the blurry algorithm for scaling. Pixelated scaling algorithm for now seems to be nearest-neighbor. -webkit-optimize-contrast implemented in the WebKit nightlies as of May 20th, 2011.     \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee also&nbsp; Microsoft MSDN -ms-interpolation-mode property\nCanvas can provide a fallback solution for crisp-edge\/optimize-contrast through manual imageData manipulation.\nSpecifications\nimage-rendering is an SVG property, it is not defined in any CSS standard. Gecko (Firefox)and Presto (Opera) apply it also to HTML and XML content.\nSVG 1.1 Painting #image-rendering\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/ime-mode","title":"ime-mode","description":"Summary\nThe ime-mode CSS property controls the state of the input method editor for text fields.\n Initial value\n: auto\n Applies to: text fields Inherited\n: no Media: visual\n  Computed value\n: ?\n\nSyntax\n\nime-mode:  auto | normal | active | inactive | disabled\nValues\n auto No change is made to the current input method editor state. This is the default. normal The IME state should be normal; this value can be used in a user style sheet to override the page setting. This value is not supported by Internet Explorer. active The input method editor is initially active; text entry is performed using it unless the user specifically dismisses it. Not supported on Linux. inactive The input method editor is initially inactive, but the user may activate it if they wish. Not supported on Linux. disabled The input method editor is disabled and may not be activated by the user.\n\nValues\n auto No change is made to the current input method editor state. This is the default. normal The IME state should be normal; this value can be used in a user style sheet to override the page setting. This value is not supported by Internet Explorer. active The input method editor is initially active; text entry is performed using it unless the user specifically dismisses it. Not supported on Linux. inactive The input method editor is initially inactive, but the user may activate it if they wish. Not supported on Linux. disabled The input method editor is disabled and may not be activated by the user.\n\nExamples\n\n&lt;input type=&quot;text&quot; name=&quot;name&quot; value=&quot;initial value&quot; style=&quot;ime-mode: disabled&quot;&gt;\nThis example disables input method support for a field; this might be necessary for fields that enter data into a database that doesn't support extended character sets, for example.\nNotes\nUnlike in Internet Explorer, the Firefox implementation of ime-mode allows this property to apply to password editing fields. However, this does not make for an ideal user experience, and password fields should disable the IME. Users may correct the inappropriate behavior of sites that don't follow this recommendation by placing the following CSS into their user CSS file:\n\ninput[type=password] {\n    ime-mode: auto !important;\n}\nNote:&nbsp;In general, it's not appropriate for a public web site to manipulate the IME mode setting. This property should be used for web applications and the like.\n\nThe Macintosh version of Gecko 1.9 (Firefox 3) can't recover the previous state of the IME when a field for which it is disabled loses focus, so Mac users may get grumpy when you use the disabled value.\nNote:&nbsp;Don't rely on disabling IME to prevent extended characters from passing through your form. Even with IME disabled, users can still paste extended characters into your form's fields.\n\nSpecifications\n \nCSS Basic User Interface Module Level 3: ime-modeED \n-ms-ime-mode Attribute | imeMode Property\n\nIt was introduced by Microsoft with IE5 as a proprietary extension.Browser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support -- 3.0 (1.9) 5.0 -- --  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nIE8 introduced -ms-ime-mode as a synonym for ime-mode. Don't use the -ms- prefix.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/left","title":"left","description":"Summary\nThe left property specifies part of the position of positioned elements.\nFor absolutely positioned elements (those with position\n: absolute or position: fixed), it specifies the distance between the left margin edge of the element and the left edge of its containing block.\n Initial value\n: auto\n Applies to: positioned elements Inherited\n: no Percentages: refer to width of containing block Media: visual\n  Computed value\n: absolute length, percentage, or auto\n\nSyntax\n\nleft: &lt;length&gt; | &lt;percentage&gt; | auto | inherit&nbsp;;\n\nValues\n \n&lt;length&gt;\n&nbsp; A length, can be negative, zero, or positive. &lt;percentage&gt;\n&nbsp; A percentage of the containing block's width.\n\nExamples\n\nView the live example\n\n&nbsp;\n\n#example_3 {\n&nbsp;&nbsp;width: 600px;\n&nbsp;&nbsp;height: 400px;\n&nbsp;&nbsp;background-color: #FFC7E4;\n&nbsp;&nbsp;position: relative;\n&nbsp;&nbsp;top: 20px;\n&nbsp;&nbsp;left: 20px;\n}\n\n#example_4 {\n&nbsp;&nbsp;width:200px;\n&nbsp;&nbsp;height:200px;\n&nbsp;&nbsp;background-color: #FFD7C2;\n&nbsp;&nbsp;position:absolute;\n&nbsp;&nbsp;bottom:10px;\n&nbsp;&nbsp;right: 20px;\n}\nNotes\nSpecifications\n CSS 2.1 CSS 3\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7 or earlier)\n 5.5 5 1.0  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\nposition\n, top\n, right\n, bottom\n\n&nbsp;\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/letter-spacing","title":"letter-spacing","description":"Summary\nThe letter-spacing CSS property specifies spacing behavior between text characters.\n Initial value\n: normal\n Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: normal or absolute length\n\nSyntax\n\nletter-spacing:  normal | &lt;length&gt;\n\nValues\n normal The spacing is the normal spacing for the current font. This value allows the user agent to alter the space between characters in order to justify text. That's the difference to the length value 0. &lt;length&gt; Indicates inter-character space in addition to the default space between characters. Values may be negative, but there may be implementation-specific limits. User agents may not further increase or decrease the inter-character space in order to justify text. See \n&lt;length&gt;\n values for possible units.\n\nExamples\nHaving a css style of:\n\r\n          p { letter-spacing: 0.4em }\r\n        \nand a webpage with the code:\n\r\n          &lt;p&gt; letter spacing &lt;\/p&gt;\r\n        \nwill produce the following:\nletter spacing\n\n Here are some more letter spacing examples:\nletter-spacing: 0.1em\nletter-spacing: 0.5em\nletter-spacing: 0.8em\nletter-spacing: 1em\nletter-spacing: -0.05em\nletter-spacing: 6px\n\n&nbsp;\nSpecifications\n CSS 2.1 Text #letter-spacing SVG 1.1 Text #letter-spacing\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   HTML support 1.0 1.0 (1.7 or earlier)\n 4.0 3.5 1.0 (85)   SVG support (Supported) -- (\n\nbug 371787\n) ? (Supported) (Supported)   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   HTML support ? ? ? ? ?   SVG support ? ? ? ? ?   \n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/line-height","title":"line-height","description":"Summary\nOn inline elements, the line-height CSS property specifies the height that is used in the calculation of the line box height.\nOn block level elements, line-height specifies the minimal height of line boxes within the element.\n Initial value\n: normal\n Applies to: all elements Inherited\n: yes Percentages: refer to the font size of the element itself Media: visual\n  Computed value\n: for &lt;length&gt; and &lt;percentage&gt; the absolute value; otherwise as specified\n\nSyntax\n\nline-height:  normal | &lt;number&gt;\n | \n&lt;length&gt;\n | &lt;percentage&gt;\n\n\nValues\n normal Depends on the user agent. Desktop browsers (including Firefox) use a default value of roughly 1.2, depending on the element's font-family. &lt;number&gt; The used value is this unitless &lt;number&gt;\n multiplied by the element's font size. The computed value is the same as the specified &lt;number&gt;. In most cases this is is the preferred way to set line-height with no unexpected results in case of inheritance. &lt;length&gt; The specified \n&lt;length&gt;\n is used in the calculation of the line box height. See \n&lt;length&gt;\n values for possible units. &lt;percentage&gt; Relative to the font size of the element itself. The computed value is this percentage multiplied by the element's computed font size.  Percentage and em values may have unexpected results, see &quot;Notes&quot; section.\n\nExamples\n\n\/* All rules below have the same resultant line height *\/\n\ndiv { line-height: 1.2;   font-size: 10pt }   \/* number *\/ \ndiv { line-height: 1.2em; font-size: 10pt }   \/* length *\/ \ndiv { line-height: 120%;  font-size: 10pt }   \/* percentage *\/\ndiv { line-height: 12pt;  font-size: 10pt }   \/* length *\/\ndiv { font: 10pt\/1.2  Georgia,&quot;Bitstream Charter&quot;,serif }\nNotes\n It is often more convenient to set line-height by using the font\n shortcut as stated in the &quot;Examples&quot; section above. Prefer a unitless number: \n&lt;style&gt;\n      .green { font-size: 15px;  line-height: 1.1;  border: solid limegreen; }\n      .red   { font-size: 15px;  line-height: 1.1em;  border: solid red; }\n      h1     { font-size: 30px; }\n      div    { width: 19em;  display: inline-block; }\n&lt;\/style&gt;\n\n&lt;div class=green&gt;\n &lt;h1&gt;Avoid unexpected results by using unitless line-height&lt;\/h1&gt;\n  length and percentage line-heights have poor inheritance behavior ...\n&lt;\/div&gt;\n\n&lt;div class=red&gt;\n &lt;h1&gt;Avoid unexpected results by using unitless line-height&lt;\/h1&gt;\n  length and percentage line-heights have poor inheritance behavior ...\n&lt;\/div&gt;\n\n&lt;!-- The first &lt;h1&gt; line-height is calculated from its own font-size   (30px &times; 1.1) = 33px  --&gt; \n&lt;!-- The second &lt;h1&gt; line-height results from the red div's font-size  (15px &times; 1.1) = 16.5px,  probably not what you want --&gt;\n  Avoid unexpected results, use unitless line-height! em values and &lt;percentage&gt; line-heights have poor inheritance behavior, and should almost never be used in practice. Stick to unitless line-heights (such as &quot;1.1&quot;).  Avoid unexpected results, use unitless line-height! em values and &lt;percentage&gt; line-heights have poor inheritance behavior, and should almost never be used in practice. Stick to unitless line-heights (such as &quot;1.1&quot;). \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Visual formatting #line-height\n\nSee also\nfont\n, font-size\n\nAvoid unexpected results, use unitless line-height! em values and &lt;percentage&gt; line-heights have poor inheritance behavior, and should almost never be used in practice. Stick to unitless line-heights (such as &quot;1.1&quot;).Avoid unexpected results, use unitless line-height! em values and &lt;percentage&gt; line-heights have poor inheritance behavior, and should almost never be used in practice. Stick to unitless line-heights (such as &quot;1.1&quot;).Browser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Visual formatting #line-height\n\nSee also\nfont\n, font-size\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/list-style","title":"list-style","description":"Summary\nThe list-style CSS property is a shorthand property for setting list-style-type\n, list-style-image\n and list-style-position\n.\n Initial value\n: see individual properties for details Applies to: elements with display: list-item Inherited\n: no Percentages: N\/A Media: visual\n  Computed value\n: see individual properties\n\nSyntax\n\nlist-style:  list-style-type || list-style-position || list-style-image \nValues\n Accepts one, two or three keywords in any order. list-style-type See list-style-type\n list-style-image See list-style-image\n list-style-position See list-style-position\n\n\nExamples\n\nView the live example\n\n\nul { list-style: circle; }\n\n\n#foo { list-style: square inside; }\nSpecifications\n CSS 2.1 #list-style CSS 3 Lists #list-style Working draft\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee Also\nlist-style-type\n, list-style-image\n, list-style-position\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/list-style-image","title":"list-style-image","description":"Summary\nThe list-style-image CSS property sets the image that will be used as the list item marker. It is often more convenient to use the shortcut list-style\n.\n Initial value\n: none\n Applies to: elements with display:list-item  Inherited\n: yes Media: visual\n  Computed value\n: absolute URI or none\n\nSyntax\n\nlist-style-image:  &lt;uri&gt;\n | none | inherit\n\nValues\n &lt;uri&gt; Location of image to use as the marker. none Default value\n\nExamples\n\nView the live example\n\n\nul { list-style-image: url(&quot;images\/arrow.gif&quot;) }\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 #list-style-image\n\nSee also\nlist-style\n, list-style-type\n, list-style-position\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/list-style-position","title":"list-style-position","description":"Summary\nThe list-style-position CSS property specifies the position of the marker box in the principal block box. It is often more convenient to use the shortcut list-style\n.\n Initial value\n: outside Applies to: elements with display:list-item Inherited\n: yes Percentages: N\/A Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nlist-style-position:  inside | outside | inherit\n\nValues\n outside The marker box is outside the principal block box. inside The marker box is the first inline box in the principal block box, after which the element's content flows.\n\nExamples\n\nView the live example\n\n\n  &lt;ul&gt;\n    &lt;li&gt;Lorem ipsum &lt;br&gt; dolor sit amet &lt;br&gt; consectetuer&lt;\/li&gt;\n    &lt;li&gt;sed diam nonummy &lt;br&gt; nibh euismod tincidunt &lt;br&gt; ut laoreet&lt;\/li&gt;\n  &lt;\/ul&gt;\n\n ul {list-style:square; background:gold} Lorem ipsum dolor sit amet consectetuer sed diam nonummy  nibh euismod tincidunt  ut laoreet\n\n ul {list-style:square inside; background:gold} Lorem ipsum dolor sit amet consectetuer sed diam nonummy  nibh euismod tincidunt  ut laoreet\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 10. (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 #list-style-position CSS 3 Lists #list-style-position Working draft\n\nSee also\nlist-style\n, list-style-type\n, list-style-image\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/list-style-type","title":"list-style-type","description":"Summary\nThe list-style-type CSS property specifies appearance of a list item element. As it is the only one who defaults to display:list-item, this is usually a &lt;li&gt;\n element, but can be any element with this display\n value.\n Initial value\n : disc Applies to : elements with display:list-item Inherited\n : yes Media : visual\n  Computed value\n : as specified\n\nThe color of the marker will be the same as the computed color of the element it applies to.Syntax\nlist-style-type:  &lt;list-style-type&gt; | none | inherit\n\nValues\n none No item marker is shown.\n\n&lt;list-style-type&gt; is one of the following:\n disc   A filled circle (default value)   circle   A hollow circle   square   A filled square   decimal   Decimal numbers Beginning with 1.   decimal-leading-zero   Decimal numbers Padded by initial zeros (e.g., 01, 02, 03, ... 98, 99)   lower-roman   Lowercase roman numerals (i, ii, iii, iv, v, etc.)   upper-roman   Uppercase roman numerals (I, II, III, IV, V, etc.)   lower-greek   Lowercase classical Greek alpha, beta, gamma, ... (&alpha;, &beta;, &gamma;, ...)   lower-alpha | lower-latin   Lowercase ASCII letters (a, b, c, ... z) lower-latin is unsupported in IE7 See Browser compatibility section   upper-alpha | upper-latin   Uppercase ASCII letters (A, B, C, ... Z) upper-latin is unsupported in IE7   armenian   Traditional Armenian numbering (ayb\/ayp, ben\/pen, gim\/keem, ...)   georgian   Traditional Georgian numbering (an, ban, gan, ... he, tan, in ...)  \n\nCSS2 values, dropped in CSS 2.1, but supported in Gecko\/Firefox and other browsers\n hebrew   Traditional Hebrew numbering   cjk-ideographic   Plain ideographic numbers (Chinese-Japanese-Korean)   hiragana   a, i, u, e, o, ka, ki, ... (Japanese)   katakana   A, I, U, E, O, KA, KI, ... (Japanese)   hiragana-iroha   i, ro, ha, ni, ho, he, to, ...   katakana-iroha   I, RO, HA, NI, HO, HE, TO, ...  \n\nMozilla extensions\nExtended set of values provided by Mozilla (Firefox) to support list types in other languages.\n -moz-arabic-indic   Example   -moz-bengali   Example   -moz-cjk-earthly-branch   Example   -moz-cjk-heavenly-stem   Example   -moz-devanagari   Example   -moz-ethiopic-halehame   Example   -moz-ethiopic-halehame-am   Example   -moz-ethiopic-halehame-ti-er   Example   -moz-ethiopic-halehame-ti-et   Example   -moz-ethiopic-numeric   Example   -moz-gujarati   Example   -moz-gurmukhi   Example   -moz-hangul   Example   -moz-hangul-consonant   Example   -moz-japanese-formal   Example   -moz-japanese-informal   Example   -moz-kannada   Example   -moz-khmer   Example   -moz-lao   Example   -moz-malayalam   Example   -moz-myanmar   Example   -moz-oriya   Example   -moz-persian   Example   -moz-simp-chinese-formal   Example   -moz-simp-chinese-informal   Example   -moz-tamil   Example   -moz-telugu   Example   -moz-thai   Example   -moz-trad-chinese-formal   Example   -moz-trad-chinese-informal   Example   -moz-urdu   Example  \n\nCSS2 values, dropped in CSS 2.1, but supported in Gecko\/Firefox and other browsers\n hebrew   Traditional Hebrew numbering   cjk-ideographic   Plain ideographic numbers (Chinese-Japanese-Korean)   hiragana   a, i, u, e, o, ka, ki, ... (Japanese)   katakana   A, I, U, E, O, KA, KI, ... (Japanese)   hiragana-iroha   i, ro, ha, ni, ho, he, to, ...   katakana-iroha   I, RO, HA, NI, HO, HE, TO, ...  \n\nMozilla extensions\nExtended set of values provided by Mozilla (Firefox) to support list types in other languages.\n -moz-arabic-indic   Example   -moz-bengali   Example   -moz-cjk-earthly-branch   Example   -moz-cjk-heavenly-stem   Example   -moz-devanagari   Example   -moz-ethiopic-halehame   Example   -moz-ethiopic-halehame-am   Example   -moz-ethiopic-halehame-ti-er   Example   -moz-ethiopic-halehame-ti-et   Example   -moz-ethiopic-numeric   Example   -moz-gujarati   Example   -moz-gurmukhi   Example   -moz-hangul   Example   -moz-hangul-consonant   Example   -moz-japanese-formal   Example   -moz-japanese-informal   Example   -moz-kannada   Example   -moz-khmer   Example   -moz-lao   Example   -moz-malayalam   Example   -moz-myanmar   Example   -moz-oriya   Example   -moz-persian   Example   -moz-simp-chinese-formal   Example   -moz-simp-chinese-informal   Example   -moz-tamil   Example   -moz-telugu   Example   -moz-thai   Example   -moz-trad-chinese-formal   Example   -moz-trad-chinese-informal   Example   -moz-urdu   Example  \n\nExamples\n\nView the live example\n\n\nol { list-style-type: upper-alpha; }\n\n\/* or use the shortcut &quot;list-style&quot;: *\/\nol { list-style: upper-alpha; }\nNotes\n Some list-style-types require a suitable font installed to display as expected. The CSS specification does not define how alphabetic systems wrap at the end of the alphabet. For instance, after 26 list items, upper-alpha rendering is undefined. Firefox and other browsers will continue as AA, AB, AC,... For long lists, it is recommended that authors specify true numbers. The list styles hebrew, cjk-ideographs, hiragana, katakana, hiragana-iroha and katakana-iroha are specified in CSS2 and removed from CSS 2.1 due to lack of implementation experience. They are expected to return in the CSS3 Lists module.\n Browser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support including : none, disc, circle, square, decimal, lower-alpha, upper-alpha, lower-roman, upper-roman  &nbsp;1.0 1.0 (1.0) 4.0 3.5 1.0 (85)   lower-latin, upper-latin, lower-greek, armenian, georgian &nbsp;1.0 1.0 (1.0) 8.0 6.0 1.0 (85)   decimal-leading-zero &nbsp;1.0 1.0 (1.0) 8.0 8.0 1.0 (85)   hebrew, cjk-ideographic, hiragana, hiragana-iroha, katakana, katakana-iroha  &nbsp;1.0 1.0 (1.0) -- 7.0 (displays decimal numbers) 1.0-1.2 (85-125)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nFor compatibility with Internet Explorer 7 (and lower) avoid lower-latin and upper-latin. Instead, use lower-alpha and upper-alpha.Specifications\n CSS 2 #lists Recommendation from May 1998, superseded by CSS 2.1 CSS 2.1 #list-style-type CSS 3 Lists #list-style-type Early working draft\n\nSee also\nlist-style\n, list-style-image\n, list-style-position\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/margin","title":"margin","description":"Summary\nThe margin CSS property sets the margin for all four sides. It is a shorthand to avoid setting each side separately with the other margin properties:\nmargin-top\n, margin-right\n, margin-bottom\n and margin-left\n.\nNegative value are also allowed.\n Initial value\n: 0 Applies to: all elements except those with table display types other than table-caption, table, and inline-table Inherited\n: no Percentages: refer always to the width of the containing block Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\nmargin:  \n&lt;length&gt;\n{1,4} | &lt;percentage&gt;\n{1,4} | inherit\n| auto\n\nValues\nAccepts one, two, three or four values of the following:\n &lt;length&gt; Specifies a fixed width. Negative Values are allowed. See for \n&lt;length&gt;\n possible units. &lt;percentage&gt; A &lt;percentage&gt;\n relative to the width of the containing block. Negative values are allowed. auto auto is replaced by some suitable value, e.g. it can be used for centering of blocks. div { width:50%;&nbsp; margin:0 auto; } centers the div container horizontally.\n\n One single value applies to all four sides. Two values apply first to top and bottom, the second one to left and right. Three values apply first to top, second to left and right and third to bottom. Four values apply to top, right, bottom and left in that order (clockwise).\n\nExamples\n\nmargin: 5%;                \/* all sides 5% margin *\/\n\nmargin: 10px;              \/* all sides 10px margin *\/\n\nmargin: 1.6em 20px;        \/* top and bottom 1.6em, left and right 20px margin *\/\n\nmargin: 10px 3% 1em;       \/* top 10px, left and right 3%, bottom 1em margin *\/\n\nmargin: 10px 3px 30px 5px; \/* top 10px, right 3px, bottom 30px, left 5px margin *\/\n\nmargin: 1em auto;          \/* 1em margin on top and bottom, box is horizontally centered *\/\n\nmargin: auto;              \/* box is horizontally centered, 0 margin on top and bottom *\/\n\n\nmargin:     auto;\nbackground: gold;\nwidth:      66%;\n\nmargin:     -1em 0 100px -40px;\nbackground: plum;\nwidth:      20em\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.0 (1.0) 3.0 3.5 1.0 (85)   auto value &nbsp;1.0 1.0 (1.0) 6.0 (strict mode) 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Visual formatting #margin\n\nSee also\n \n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n Margin collapsing\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/margin-bottom","title":"margin-bottom","description":"Summary\nThe margin-bottom property of an element sets the margin space required on the bottom of an element. A negative value is also allowed.\n Initial value\n: 0 Applies to: all elements except those with table display types other than table-caption, table, and inline-table Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\nmargin-bottom: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n | auto\n;\n\nValues\n &lt;length&gt; Specifies a fixed width. See \n&lt;length&gt;\n for possible values. &lt;percentage&gt; &nbsp;A &lt;percentage&gt;\n always relative to the width of the containing block. auto See margin\n.\n\nExamples\n\n.content { margin-bottom: 5%; }\n.sidebox { margin-bottom: 10px; }\n.logo    { margin-bottom: -5px; }\n#header  { margin-bottom:&nbsp;1em; }\n\n\nView on jsFiddle\n Specifications\n CSS 1 CSS 2.1 box\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.0 (1.0) 3.0 3.5 1.0 (85)   auto value &nbsp;1.0 1.0 (1.0) 6.0 (strict mode) 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/margin-left","title":"margin-left","description":"Summary\nThe margin-left property of an element sets the margin space required on the left side of an element. A negative value is also allowed.\n Initial value\n: 0 Applies to: all elements except those with table display types other than table-caption, table, and inline-table Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\nmargin-left: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n | auto\n;\n\nValues\n &lt;length&gt; Specifies a fixed width. See \n&lt;length&gt;\n for possible values. &lt;percentage&gt; A &lt;percentage&gt;\n always relative to the width of the containing block. auto See margin\n.\n\nExamples\n\n.content { margin-left: 5%; }\n.sidebox { margin-left: 10px; }\n.logo    { margin-left: -5px; }\n\nSpecifications\n CSS 1 CSS 2.1 box\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.0 (1.0) 3.0 3.5 1.0 (85)   auto value &nbsp;1.0 1.0 (1.0) 6.0 (strict mode) 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/margin-right","title":"margin-right","description":"Summary\nThe margin-right property of an element sets the margin space required on the right side of an element. A negative value is also allowed.\n Initial value\n: 0 Applies to: all elements except those with table display types other than table-caption, table, and inline-table Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\nmargin-right: \n&lt;length&gt;\n| &lt;percentage&gt;\n | inherit\n | auto\n;\n\nValues\n &lt;length&gt; Specifies a fixed width. See \n&lt;length&gt;\n for possible values. &lt;percentage&gt; &nbsp;A &lt;percentage&gt;\n always relative to the width of the containing block. auto See margin\n.\n\nExamples\n\n.content { margin-right: 5%; }\n.sidebox { margin-right: 10px; }\n.logo    { margin-right: -5px; }\n\nSpecifications\n CSS 1 CSS 2.1 box CSS 3 box\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.0 (1.0) 3.0 3.5 1.0 (85)   auto value &nbsp;1.0 1.0 (1.0) 6.0 (strict mode) 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/margin-top","title":"margin-top","description":"Summary\nThe margin-top CSS property of an element sets the margin space required on the top of an element. A negative value is also allowed.\n Initial value\n: 0 Applies to: inline and block elements, table, inline-table and table-caption Elements Inherited\n: no Percentages: refer always to width of the containing block Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\nmargin-top: \n&lt;length&gt;\n| &lt;percentage&gt;\n| inherit\n| auto\n\n\nValues\n &lt;length&gt; Specifies a fixed width. See \n&lt;length&gt;\n for possible values. &lt;percentage&gt; &nbsp;A &lt;percentage&gt;\n always relative to the width of the containing block. auto See margin\n.\n\nExamples\n\n.content { margin-top: 5%; }\n.sidebox { margin-top: 10px; }\n.logo    { margin-top: -5px; }\n#footer  { margin-top:&nbsp;1em; } \n\nSpecifications\n CSS 2.1 box #margin\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.0 (1.0) 3.0 3.5 1.0 (85)   auto value &nbsp;1.0 1.0 (1.0) 6.0 (strict mode) 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/marks","title":"marks","description":"Summary\nThis property adds crop and\/or cross marks to the presentation of the document. Crop marks indicate where the page should be cut. Cross marks are used to align sheets.\nCrop marks and cross marks are printed outside the page box. To have room to show crop and cross marks, the final pages will have to be somewhat bigger than the page box.\n Initial value\n: none Applies to: page context Inherited\n: no Percentages: n\/a Media: visual\n , paged Computed value\n: specified value\n\nSyntax\n\nmarks: [ crop || cross ] | none\n\nValues\n&nbsp;\nExamples\n\n@page { marks: crop cross; }\n\nSpecifications\n CSS Generated Content for Paged Media Module\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support ? ? ? ? ?  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n bleed\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/marker-offset","title":"marker-offset","description":"Summary\n&nbsp;\n Initial value\n: Applies to: Inherited\n: Percentages: n\/a Media: visual\n  Computed value\n:\n\nSyntax\n\nmarker-offset: &lt;value&gt;\n\nValues\n&nbsp;\nExamples\n\nli:before { display: marker; marker-offset: 4px } \n\nSpecifications\n CSS 3 SVG\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support ? ? ? ? ?  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n display\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/mask","title":"mask","description":"Summary\n&nbsp;\n Initial value\n: none Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: Animatable: yes\n\nSyntax\n\n\nmask: &lt;uri&gt; | none | inherit\n\nValues\nIf the value is a URI value, the element pointed to by the URI is used as an SVG mask.\nExamples\n\n\n.target { mask: url(#c1); }\n\n.anothertarget { mask: url(resources.svg#c1); }\n\nSpecifications\n Clipping, Masking and Compositing CSS 3 SVG SVG\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support Applies only to SVG elements 3.5 (1.9.1)\n ? Applies only to SVG elements Applies only to SVG elements   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? 1.0 (1.9.1)\n ? ? ?   \n\nSee also\n clip-path\n, filter\n Applying SVG effects to HTML content SVG\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/max-height","title":"max-height","description":"Summary\nThe max-height CSS property is used to set the maximum height of a given element. It prevents the used value of the height\n property from becoming larger than the value specified for max-height.\n Initial value\n: none\n Applies to: block level and replaced elements Inherited\n: no Percentages:yes, see below Media: visual\n  Computed value\n: the percentage as specified or the absolute length or none\n\nSyntax\n\nmax-height:  &lt;length&gt; | &lt;percentage&gt; | none | inherit\n\nValues\n &lt;length&gt; A fixed maximum height. See \n&lt;length&gt;\n for possible units. &lt;percentage&gt; The &lt;percentage&gt;\n is calculated with respect to the height of the containing block. If the height of the containing block is not specified explicitly, the percentage value is treated as none. none No limit on the height of the box.\n\nExamples\n\nView Live Examples (not available, please check later)\n\n\ntable { max-height: 75%; }\n\nform { max-height: none; }\n\nNotes\nmax-height\n overrides height, but min-height\n overrides max-height\n.\nSpecifications\n CSS 2.1 #min-max-heights\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.0 (1.0) 7.0 4.0 2.0.2 (416)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\nbox model, max-width\n, box-sizing\n, height\n, min-height\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/max-width","title":"max-width","description":"Summary\nThe max-width CSS property is used to set the maximum width of a given element. It prevents the used value of the width\n property from becoming larger than the value specified for max-width.\n Initial value\n: none\n Applies to: block level and replaced elements, for &lt;table&gt; see Browser compatibility below Inherited\n: no Percentages: refer to the width of the containing block Media: visual\n  Computed value\n: the percentage as specified or the absolute length or none\n\nSyntax\n\nmax-width:  &lt;length&gt; | &lt;percentage&gt; | none | -moz-max-content | -moz-min-content | -moz-fit-content | -moz-available\n\nValues\n none The width has no maximum value. length See \n&lt;length&gt;\n for possible units. percentage Specified as a &lt;percentage&gt;\n of containing block's width.\n\nMozilla Extensions\n -moz-max-content \nNew in Firefox 3\n The intrinsic preferred width. -moz-min-content \nNew in Firefox 3\n The intrinsic minimum width. -moz-available \nNew in Firefox 3\n The containing block width minus horizontal margin, border and padding. -moz-fit-content \nNew in Firefox 3\n The same as -moz-max-content.\n\nMozilla Extensions\n -moz-max-content \nNew in Firefox 3\n The intrinsic preferred width. -moz-min-content \nNew in Firefox 3\n The intrinsic minimum width. -moz-available \nNew in Firefox 3\n The containing block width minus horizontal margin, border and padding. -moz-fit-content \nNew in Firefox 3\n The same as -moz-max-content.\n\nExamples\n\nbody  { max-width: 40em; }\n\ntable { max-width: 75%; }\n\nform  { max-width: none; }\n\n\np { background: gold }\n\nThe Mozilla community produces a lot of great software.\n\np { background: lightgreen;\n    max-width:  intrinsic;         \/* Safari\/WebKit *\/\n    max-width:  -moz-max-content;  \/* Firefox\/Gecko *\/\n  }\n\nThe Mozilla community produces a lot of great software.\n\np { background: lightblue;  max-width: -moz-min-content; }\n\nThe Mozilla community produces a lot of great software.\nNotes\nmax-width\n overrides width, but min-width\n overrides max-width\n.\nSpecifications\n CSS 2.1 #min-max-widths\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.0 (1.0) 7.0 4.0 2.0.2 (416),  buggy before   applies to &lt;table&gt; &nbsp;no yes no yes no   intrinsic width &nbsp;1.0 3.0 (1.9) -- -- 2.0 (412) ?   &nbsp;intrinsic -moz-max-content intrinsic   intrinsic minimum width &nbsp;-- 3.0 (1.9) -- -- --   -moz-min-content  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n width\n, min-width\n, max-height\n box model, box-sizing\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/min-height","title":"min-height","description":"Summary\nThe min-height CSS property is used to set the minimum height of a given element. It prevents the used value of the height\n property from becoming smaller than the value specified for min-height.\n Initial value\n: 0 Applies to: block level and replaced elements Inherited\n: no Percentages: yes, see below Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\nmin-height:  &lt;length&gt; | &lt;percentage&gt; | inherit \n\nValues\n &lt;length&gt; A fixed minimum height. See \n&lt;length&gt;\n for possible units. &lt;percentage&gt; The &lt;percentage&gt;\n is calculated with respect to the height of the containing block. If the height of the containing block is not specified explicitly, the percentage value is treated as 0.\n\nExamples\n\nView Live Examples (not available, please check later)\n\n\ntable { min-height: 75%; }\n\nform { min-height: 0; }\n\nNotes\nmin-height\n overrides both max-height\n and height\n.\nSpecifications\n CSS 2.1 #min-max-heights&nbsp;\n Browser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 7.0 4.0 2.02 (416)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\nbox model, min-width\n, box-sizing\n, height\n, max-height\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/min-width","title":"min-width","description":"Summary\nThe min-width CSS property is used to set the minimum width of a given element. It prevents the used value of the width\n property from becoming smaller than the value specified for min-width.\n Initial value\n: 0 Applies to: block level and replaced elements, for &lt;table&gt; see Browser compatibility below Inherited\n: no Percentages: refer to the width of the containing block Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\nmin-width:  &lt;length&gt; | &lt;percentage&gt; | -moz-max-content | -moz-min-content | -moz-fit-content | -moz-available\nValues\n length See \n&lt;length&gt;\n for possible units. percentage Specified as a &lt;percentage&gt;\n of containing block's width.\n\nMozilla Extensions\n -moz-max-content \nNew in Firefox 3\n The intrinsic preferred width. -moz-min-content \nNew in Firefox 3\n The intrinsic minimum width. -moz-available \nNew in Firefox 3\n The containing block width minus horizontal margin, border and padding. -moz-fit-content \nNew in Firefox 3\n The same as -moz-min-content.\n\nMozilla Extensions\n -moz-max-content \nNew in Firefox 3\n The intrinsic preferred width. -moz-min-content \nNew in Firefox 3\n The intrinsic minimum width. -moz-available \nNew in Firefox 3\n The containing block width minus horizontal margin, border and padding. -moz-fit-content \nNew in Firefox 3\n The same as -moz-min-content.\n\nExamples\n\ntable { min-width: 75%; }\n\nform { min-width: 0; }\n\nNotes\nmin-width overrides both max-width\n and width\n.\nSpecifications\n CSS 2.1 #min-max-widths\n Browser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 7.0 4.0 2.0.2 (416), buggy before   applies to &lt;table&gt; no yes no yes no  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n width\n, max-width\n, min-height\n box model, box-sizing\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/opacity","title":"opacity","description":"Summary\nThe opacity CSS property specifies the transparency of an element, that is, the degree to which the background behind the element is overlaid.\nUsing this property with a value different than 1 places the element in a new stacking context.\n Initial value\n: 1.0 (opaque) Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: the specified number (clipped to the range [0.0, 1.0])\nSyntax\n\nopacity:  &lt;number&gt; | inherit\nValues\nA &lt;number&gt;\n in the range 0.0 to 1.0. Any value smaller or larger is clamped to this range.\n 0 The element is fully transparent (that is, invisible). number between 0 and 1 The element is translucent (that is, background can be seen). 1 The element is fully opaque (solid).\n\nExamples\n\nhbox.example {\n  opacity: 0.5; \/* see the background through the hbox *\/\n}\nCross Browser compatible Live Example\n\npre {                               \/* make the box translucent (20% opaque) *\/\n   border: solid red;\n   opacity: 0.2;\n   filter: alpha(opacity=20);       \/* IE8 and lower *\/\n   zoom: 1;       \/* set &quot;zoom&quot;, &quot;width&quot; or &quot;height&quot; to trigger &quot;hasLayout&quot; in IE 7 and lower *\/ \n}\n\npre {                               \/* make the box translucent (50% opaque) *\/\n   border: solid red;\n   opacity: 0.5;\n   filter: alpha(opacity=50);       \/* IE8 and lower *\/\n   zoom: 1;       \/* set &quot;zoom&quot;, &quot;width&quot; or &quot;height&quot; to trigger &quot;hasLayout&quot; in IE 7 and lower *\/ \n}\n\npre {                               \/* make the box translucent (80% opaque) *\/\n   border: solid red;\n   opacity: 0.8;\n   filter: alpha(opacity=80);       \/* IE8 and lower *\/\n   zoom: 1;       \/* set &quot;zoom&quot;, &quot;width&quot; or &quot;height&quot; to trigger &quot;hasLayout&quot; in IE 7 and lower *\/ \n}Different opacity with :hover\n\r\n          &lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\nimg.opacity {\n   opacity: 1;\n   filter: alpha(opacity=50);\n   zoom: 1;\n }  \n \nimg.opacity:hover {\n   opacity: 0.5;\n   filter: alpha(opacity=100);\n   zoom: 1;\n }\n&lt;\/style&gt;\n&lt;\/head&gt;\n\n&lt;body&gt;\n&lt;img src=&quot;\/\/developer.mozilla.org\/media\/img\/mdn-logo.png&quot; alt=&quot;MDN logo&quot; width=&quot;128&quot; height=&quot;146&quot; class=&quot;opacity&quot; \/&gt;\n&lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nCross Browser compatible Live Example\n\npre {                               \/* make the box translucent (20% opaque) *\/\n   border: solid red;\n   opacity: 0.2;\n   filter: alpha(opacity=20);       \/* IE8 and lower *\/\n   zoom: 1;       \/* set &quot;zoom&quot;, &quot;width&quot; or &quot;height&quot; to trigger &quot;hasLayout&quot; in IE 7 and lower *\/ \n}\n\npre {                               \/* make the box translucent (50% opaque) *\/\n   border: solid red;\n   opacity: 0.5;\n   filter: alpha(opacity=50);       \/* IE8 and lower *\/\n   zoom: 1;       \/* set &quot;zoom&quot;, &quot;width&quot; or &quot;height&quot; to trigger &quot;hasLayout&quot; in IE 7 and lower *\/ \n}\n\npre {                               \/* make the box translucent (80% opaque) *\/\n   border: solid red;\n   opacity: 0.8;\n   filter: alpha(opacity=80);       \/* IE8 and lower *\/\n   zoom: 1;       \/* set &quot;zoom&quot;, &quot;width&quot; or &quot;height&quot; to trigger &quot;hasLayout&quot; in IE 7 and lower *\/ \n}Different opacity with :hover\n\r\n          &lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\nimg.opacity {\n   opacity: 1;\n   filter: alpha(opacity=50);\n   zoom: 1;\n }  \n \nimg.opacity:hover {\n   opacity: 0.5;\n   filter: alpha(opacity=100);\n   zoom: 1;\n }\n&lt;\/style&gt;\n&lt;\/head&gt;\n\n&lt;body&gt;\n&lt;img src=&quot;\/\/developer.mozilla.org\/media\/img\/mdn-logo.png&quot; alt=&quot;MDN logo&quot; width=&quot;128&quot; height=&quot;146&quot; class=&quot;opacity&quot; \/&gt;\n&lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nNotes\n History:&nbsp; Prior to Mozilla 1.7 (Firefox 0.9) the -moz-opacity property was implemented in a non-standard (inherited) way. With Firefox 0.9 the behavior changed and the property was renamed to opacity.&nbsp; Since then -moz-opacity was supported just as an alias for opacity.  Gecko 1.9.1 (Firefox 3.5) and later do not support -moz-opacity. &nbsp;By now, you should be using simply opacity. \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.7)\n 9.0 9.0 1.2 (125)   8.0 filter: alpha(opacity=xx) filter: &quot;alpha(opacity=xx)&quot;  (both are synonymous)   4.0 filter: alpha(opacity=xx)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 1.0 (1.7)\n 9.0 9.0 3.2   8.0 filter: alpha(opacity=xx) filter: &quot;alpha(opacity=xx)&quot;  (both are synonymous)   4.0 filter: alpha(opacity=xx)   \n\n Prior to version 9, Internet Explorer does not support opacity, rather it supports filter instead. IE supports also the extended form progid:DXImageTransform.Microsoft.Alpha(Opacity=xx). This is needless, so don't use it. IE8 introduced -ms-filter, which is synonymous with filter. Don't use the prefix. Similar to -moz-opacity, -khtml-opacity has been dead since early 2004 (release of Safari 1.2). Konqueror never had support for -khtml-opacity and had been supporting opacity since version 4.0. Don't use -khtml-opacity nor -moz-opacity anymore.\nSpecifications\n \nCSS 3 Color: opacityREC\nSee also\nMSDN Microsoft's filter:alpha(opacity=xx)\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/orphans","title":"orphans","description":"Summary\nThe orphans property refers to the minimum number of lines in a block container that must be left at the bottom of the page.&nbsp; This property is normally used to control how page breaks occur.\nSyntax\n\norphans: &lt;integer&gt; | inherit\n\nValues\nOnly positive values are allowed.\nExamples\n&nbsp;\nBrowser Compatibility\n   Browser Lowest version   Internet Explorer IE 8   Firefox (Gecko) --   Opera 9.2    Safari | Chrome | WebKit   --   \n\nSee Also\n CSS 2.1 Specification Tip:&nbsp;Correcting Orphans with Overflow\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/outline","title":"outline","description":"Summary\nThe outline CSS property is a shorthand property for setting one or more of the individual outline properties outline-style\n, outline-width\n and outline-color\n in a single rule. In most cases the use of this shortcut is preferable and more convenient.\nOutlines differ from borders in the following ways:\n Outlines do not take up space, they are drawn above the content. Outlines may be non-rectangular. They are rectangular in Gecko\/Firefox. But e.g. Opera draws a non-rectangular shape around a construct like this: TEXTTEXTTEXT\n\n Initial value\n: see individual properties for details Applies to: all elements Inherited\n: no Percentages: N\/A Media: visual\n , interactive\n\n Computed value: see individual properties\n\nIn browsers previous to Gecko 1.8 (Firefox 1.5) a similar effect can be achieved using Mozilla CSS Extension -moz-outline\n.\nSyntax\n\noutline:  [ &lt;outline-width&gt; || &lt;outline-style&gt; || &lt;outline-color&gt; ] | inherit\n\nValues\nOne, two or three values, given in arbitrary order:\n outline-width Optional, default value medium is used if absent. See outline-width\n. outline-style Required, default value none is used if absent. See outline-style\n. outline-color Optional, default value if absent: invert. Since Gecko 1.9 (Firefox 3), the value of the element's color  property (foreground color) is used. See outline-color\n.\n\nExamples\n\n outline: solid; | outline: dashed red; | outline: dotted 1px; | outline: ridge thick violet; | outline: custom 5px;\n\n\r\n          \/* two identical declarations *\/\n\n:link:hover { outline: 1px solid #000 }\n:link:hover { outline: solid black 1px }\r\n        \nSpecifications\n CSS 2.1 User Interface #outline CSS 3 Basic User Interface Module #outline\n Browser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.5 (1.8) 8.0 7.0 1.2 (125)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 1.0 (1.8)\n 8.0 6.0 3.1   \n\nSee also\n\n\noutline\n, outline-width\n, outline-style\n, outline-color\n, outline-offset\n, -moz-outline-radius\n, -moz-outline-radius-topleft\n, -moz-outline-radius-topright\n, -moz-outline-radius-bottomright\n, -moz-outline-radius-bottomleft\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/outline-style","title":"outline-style","description":"Summary\nThe outline-style CSS property is used to set the style of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.\nIt is often more convenient to use the shortcut property outline\n instead of outline-style, outline-width and outline-color.\n Initial value\n: none\n Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: specified value\n\nIn browsers prior to Gecko 1.8 (Firefox 1.5) this effect can be achieved using Mozilla CSS Extension -moz-outline-style\n.\nSyntax\n\noutline-style:  auto | &lt;border-style&gt; | inherit\n\nValues\n&lt;border-style&gt; can be any of the following:\n none No outline (outline-width\n is 0). dotted The outline is a series of dots. dashed The outline is a series of short line segments. solid The outline is a single line. double The outline is two single lines. The outline-width\n is the sum of the two lines and the space between them. groove The outline looks as though it were carved into the canvas. ridge The opposite of groove: the outline looks as though it were coming out of the canvas. inset The outline makes the box look as though it were embeded in the canvas. outset The opposite of inset: the outline makes the box look as though it were coming out of the canvas.\n\nExamples\n\n.example {  \/* make the outline a 3D groove style *\/\n \n            outline-style: groove;        \/* same result as &quot;outline: groove&quot; *\/ \n}\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.5 (1.8) 8.0 7.0 1.2 (125)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\nSee outline\n property\nSee also\n\n\noutline\n, outline-width\n, outline-style\n, outline-color\n, outline-offset\n, -moz-outline-radius\n, -moz-outline-radius-topleft\n, -moz-outline-radius-topright\n, -moz-outline-radius-bottomright\n, -moz-outline-radius-bottomleft\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/outline-color","title":"outline-color","description":"Summary\nThe outline-color CSS property sets the color of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.\n Initial value\n: invert\n Used value in Gecko (Firefox): The value of the color property Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: 'invert' or the computed color value\n\nSyntax\n\n outline-color:  &lt;color&gt; | invert | inherit\nValues\n &lt;color&gt; See &lt;color&gt;\n for the various color keywords and notations. invert To ensure the outline is visible, performs a color inversion of the background. This makes the focus border more salient, regardless of the color in the background. Currently only supported in Opera and IE8.\n\n Examples\nThe css code here:\n\r\n          .example {\n           \/* make the outline red *\/\n           outline-color: #FF0000;\n }\r\n        \nproduces the following outline color for a 2px outline:\noutline-color is blue.\n&nbsp;\nSpecifications\n See outline\n property.\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.5 (1.8) In versions previous to 1.5: -moz-outline-color &nbsp;8.0 &nbsp;7.0 &nbsp;1.2 (125)   invert value -- Support had been dropped since 3.0 (1.9) \n\nbug 359497\n: WONTFIX Workaround: Use the value of the element's color property.&nbsp; &nbsp;8.0 &nbsp;7.0 &nbsp;--   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n&nbsp;\nSee also\n&nbsp;\n\n\noutline\n, outline-width\n, outline-style\n, outline-color\n, outline-offset\n, -moz-outline-radius\n, -moz-outline-radius-topleft\n, -moz-outline-radius-topright\n, -moz-outline-radius-bottomright\n, -moz-outline-radius-bottomleft\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/outline-width","title":"outline-width","description":"Summary\nThe outline-width CSS property is used to set the width of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out:\n Initial value\n: medium\n Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n:\n\nIn browsers previous to Gecko 1.8 (Firefox 1.5) essentially the same effect can be achieved using Mozilla CSS Extension -moz-outline-width\n.\nSyntax\n\noutline-width: thin | medium | thick | \n&lt;length&gt;\n | inherit\n\n\nValues\n thin Depends on the UA. Typically 1px in desktop browsers like Firefox. medium Depends on the UA. Typically 3px in desktop browsers like Firefox. thick Depends on the UA. Typically 5px in desktop browsers like Firefox. &lt;length&gt; See \n&lt;length&gt;\n values.\n\nExamples\n\n thin   medium   thick   2px   1ex            5em \n\nSpecifications\n See outline\n property\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &nbsp;1.0 1.5 (1.8) 8.0 7.0 1.2 (125)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\n\noutline\n, outline-width\n, outline-style\n, outline-color\n, outline-offset\n, -moz-outline-radius\n, -moz-outline-radius-topleft\n, -moz-outline-radius-topright\n, -moz-outline-radius-bottomright\n, -moz-outline-radius-bottomleft\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/outline-offset","title":"outline-offset","description":"Summary\nThe outline-offset CSS property is used to set space between an outline\n and the edge or border of an element. An outline is a line that is drawn around elements, outside the border edge.\n Initial value\n: 0 Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: &lt;length&gt; value in absolute units\n\nThe space will be transparent (the parent will determine the background).\nSyntax\n\noutline-offset:  &lt;length&gt; | inherit\nValues\n &lt;length&gt; The width of the space. See \n&lt;length&gt;\n for possible units. Negative values place the outline inside the element.\n\nExamples\n\r\n          .example {\n  outline: dashed thin;\n  \/* Move the outline 3px away from the border *\/\n  outline-offset: 3px;\n}\r\n        \nThe code above produces this effect:\noutline: offset 5px;\nAnother example:\noutline: multiple offsets;\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.5&nbsp;(1.8) -- 9.5 1.2&nbsp;(125)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\n\noutline\n, outline-width\n, outline-style\n, outline-color\n, outline-offset\n, -moz-outline-radius\n, -moz-outline-radius-topleft\n, -moz-outline-radius-topright\n, -moz-outline-radius-bottomright\n, -moz-outline-radius-bottomleft\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/overflow","title":"overflow","description":"Summary\nThe overflow CSS property specifies whether to clip content, render scroll bars or display overflow content of a block-level element.\n Initial value\n: visible\n Applies to: block and inline-block elements, table cells Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\noverflow:  visible | hidden | scroll | auto | inherit\n\nValues\n visible Default value. Content is not clipped, it may be rendered outside the content box. hidden The content is clipped and no scrollbars are provided. scroll The content is clipped and desktop browsers use scrollbars, whether or not any content is clipped. This avoids any problem with scrollbars appearing and disappearing in a dynamic environment. Printers may print overflowing content. auto Depends on the user agent. Desktop browsers like Firefox provide scrollbars if content overflows.\n\nMozilla Extensions\n -moz-scrollbars-none \n\nObsolete Use overflow:hidden instead. -moz-scrollbars-horizontal \n\nDeprecated\n\n Use of overflow-x\n and overflow-y\n is preferred. -moz-scrollbars-vertical \n\nDeprecated\n\n Use of overflow-x\n and overflow-y\n is preferred. -moz-hidden-unscrollable Is intended mainly for internal use and by themes. Disables scrolling of XML root elements and &lt;html&gt;, &lt;body&gt; by arrow keys and mouse wheel.\nMozilla Extensions\n -moz-scrollbars-none \n\nObsolete Use overflow:hidden instead. -moz-scrollbars-horizontal \n\nDeprecated\n\n Use of overflow-x\n and overflow-y\n is preferred. -moz-scrollbars-vertical \n\nDeprecated\n\n Use of overflow-x\n and overflow-y\n is preferred. -moz-hidden-unscrollable Is intended mainly for internal use and by themes. Disables scrolling of XML root elements and &lt;html&gt;, &lt;body&gt; by arrow keys and mouse wheel.\nExamples\n\np {  \n     width: 12em;\n     border: dotted;\n     overflow: auto;   \/* append scrollbars if necessary *\/ \n}\noverflow: hidden\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\noverflow: scroll\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\noverflow: auto\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\noverflow: auto\nshort text\nvisible (default)\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.\nNotes\nThrough Gecko 1.9.2 (Firefox 3.6), the overflow property is incorrectly applied to table-group elements (&lt;thead&gt; , &lt;tbody&gt; , &lt;tfoot&gt;). This behavior is corrected in later versions.Browser compatibility\n   Browser Lowest version   Internet Explorer 4.0 [*]    Firefox (Gecko) 1.0 (1.0)   Opera 4.0-7.0   Safari (WebKit) 1.0 (85)  \n\n[*] IE 4-6 enlarges an element with overflow:visible (default value) to fit the content in it. height\/width behaves like min-height\/min-width.\nSpecifications\n CSS 2.1 Visual effects #overflow\n\nSee also\n Related CSS properties: text-overflow\n, white-space\n, overflow-x\n, overflow-y\n, clip\n, display\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/overflow-x","title":"overflow-x","description":"Summary\noverflow-x specifies whether to clip content, render a scroll bar or display overflow content of a block-level element, when it overflows at the left and right edges.\n Initial value\n: visible\n Applies to: (non-replaced) block and inline-block elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified, except &lsquo;visible&rsquo;\nSyntax\n\noverflow-x:  visible | hidden | scroll | auto\n\nValues\n visible Content is not clipped, it may be rendered outside the content box. hidden The content is clipped and no scrollbars are provided. scroll The content is clipped and desktop browsers use scrollbars, whether or not any content is clipped. This avoids any problem with scrollbars appearing and disappearing in a dynamic environment. Printers may print overflowing content. auto Depends on the user agent. Desktop browsers like Firefox provide scrollbars if content overflows.\n\nExamples\n\nView Live Examples (not available, please check later)\n\n\n[fixme]\n\nNotes\n&nbsp;\nSpecifications\n CSS3 Box Model #overflow\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer 5.0 (*)    Firefox 1.5   Opera 9.5   Safari 3.0  \n\n(*) IE8 introduced -ms-overflow-x as a&nbsp; synonym for overflow-x. Don't use the -ms- prefix.\nSee also\n Related CSS properties: text-overflow\n, white-space\n, overflow\n, overflow-y\n, clip\n, display\n\n\n&nbsp;\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/padding","title":"padding","description":"Summary\nThe padding CSS property sets the required padding space on all sides of an element. The padding area is the space between the content of the element and its border. Negative values are not allowed.\nThe padding property is a shortcut to avoid setting each side separately (padding-top, padding-right, padding-bottom, padding-left).\n Initial value\n: 0 Applies to: all elements (except  table-*-group, table-row and table-column) Inherited\n: no Percentages: relative to the width of the containing block Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\npadding:   [ \n&lt;length&gt;\n| &lt;percentage&gt;\n] {1,4}\n\nValues\nSpecifies one, two, three or four of the following values:\n &lt;length&gt; Specifies a positive fixed width. See \n&lt;length&gt;\n for details. &lt;percentage&gt; With respect to the width of the containing block.\n\n One single value applies to all 4 sides Two values apply to 1. top and bottom and 2. to the left and right side Three values apply to 1. top, 2. right and left and 3. to the bottom side Four values apply to 1. top, 2. right, 3. bottom and 4. to the left side\n\nExamples\n\n padding: 5%;               \/* on all sides 5% padding *\/\n\n\n padding: 10px;              \/* on all sides 10px padding *\/\n\n\n padding: 10px 20px;         \/*  top and bottom 10px padding  *\/\n                             \/*  left and right 20px padding  *\/\n\n\n padding: 10px 3% 20px;      \/*  top 10px padding          *\/\n                             \/*  left and right 3% padding *\/\n                             \/*  bottom 20px padding       *\/\n\n\n padding: 1em 3px 30px 5px;  \/*  top    1em  padding  *\/\n                             \/*  right  3px  padding  *\/\n                             \/*  bottom 30px padding  *\/\n                             \/*  left   5px  padding  *\/\n\nborder:outset; padding:5% 1em;\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n CSS 2.1 Box #padding\n\nSee also\n \n\npadding\n, padding-top\n, padding-right\n, padding-bottom\n, padding-left\n, -moz-padding-start\n, -moz-padding-end\n, border\n, margin\n CSS Box Model\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/padding-bottom","title":"padding-bottom","description":"Summary\nThe padding-bottom property of an element sets the padding space required on the bottom of an element. The padding area is the space between the content of the element and it's border. A negative value is not allowed.\n Initial value\n: 0 Applies to: all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\nSyntax\n\npadding-bottom: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n;\n\nValues\n &lt;length&gt; Specifies a positive fixed width. See \n&lt;length&gt;\n for details. &lt;percentage&gt; A percentage with respect to the width of the containing block.\n\nExamples\n\n.content { padding-bottom: 5%; }\n.sidebox { padding-bottom: 10px; } \n\nSpecifications\n CSS 1 CSS 2.1 box CSS 3 box\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n See also\n\n\npadding\n, padding-top\n, padding-right\n, padding-bottom\n, padding-left\n, -moz-padding-start\n, -moz-padding-end\n, border\n, margin\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/padding-left","title":"padding-left","description":"Summary\nThe padding-left property of an element sets the padding space required on the left side of an element. The padding area is the space between the content of the element and it's border. A negative value is not allowed.\n Initial value\n: 0 Applies to: all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\nSyntax\n\npadding-left: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n;\n\nValues\n &lt;length&gt; Specifies a positive fixed width. See \n&lt;length&gt;\n for details. &lt;percentage&gt; A percentage with respect to the width of the containing block.\n\nExamples\n\n.content { padding-left: 5%; }\n.sidebox { padding-left: 10px; } \n\nSpecifications\n CSS 1 CSS 2.1 box CSS 3 box\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n See also\n\n\npadding\n, padding-top\n, padding-right\n, padding-bottom\n, padding-left\n, -moz-padding-start\n, -moz-padding-end\n, border\n, margin\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/padding-right","title":"padding-right","description":"Summary\nThe padding-right property of an element sets the padding space required on the right side of an element. The padding area is the space between the content of the element and its border. Negative values are not allowed.\n Initial value\n: 0 Applies to: all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\nSyntax\n\npadding-right: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n;\n\nValues\n &lt;length&gt; Specifies a positive fixed width. See \n&lt;length&gt;\n for details. &lt;percentage&gt; A percentage with respect to the width of the containing block.\n\nExamples\n\n.content { padding-right: 5%; }\n.sidebox { padding-right: 10px; } \n\nSpecifications\n CSS 1 CSS 2.1 box CSS 3 box\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n See also\n\n\npadding\n, padding-top\n, padding-right\n, padding-bottom\n, padding-left\n, -moz-padding-start\n, -moz-padding-end\n, border\n, margin\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/page-break-after","title":"page-break-after","description":"Summary\nThe page-break-after CSS property adjusts page breaks after the current element.\n Initial value\n: auto\n Applies to: block elements Inherited\n: no Media: visual\n , paged Computed value\n: as specified\n\nSyntax\n\npage-break-after: auto | always | avoid | left | right | inherit\n\nValues\n auto Initial value. Automatic page breaks (neither forced nor forbidden). always Always force page breaks after the element. avoid \nUnimplemented\n Avoid page breaks after the element. left \nUnimplemented\n Force page breaks after the element so that the next page is formatted as a left page. right \nUnimplemented\n Force page breaks after the element so that the next page is formatted as a right page.\n\nExamples\n\n\/* display headlines on a new page *\/\nh1,h2, h3 { page-break-after:always; } \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) [*] 4.0 7.0 1.2 (125)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n[*] Gecko only supports page-break-after:always. See \n\nbug 132035\n\n\nSpecification\n CSS 3 Paged Media #page-break-after CSS 2.1 Paged Media #page-break-after\n\nSee also\n page-break-before, page-break-inside orphans, widows\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/padding-top","title":"padding-top","description":"Summary\nThe padding-top property of an element sets the padding space required on the top of an element. The padding area is the space between the content of the element and it's border. A negative values is not allowed.\n Initial value\n: 0 Applies to: all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\nSyntax\n\npadding-bottom: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n;\n\nValues\n &lt;length&gt; Specifies a positive fixed width. See \n&lt;length&gt;\n for details. &lt;percentage&gt; A percentage with respect to the width of the containing block.\n\nExamples\n\n.content { padding-top: 5%; }\n.sidebox { padding-top: 10px; } \n\nSpecifications\n CSS 1 CSS 2.1 box CSS 3 box\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n\n\npadding\n, padding-top\n, padding-right\n, padding-bottom\n, padding-left\n, -moz-padding-start\n, -moz-padding-end\n, border\n, margin\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/page-break-before","title":"page-break-before","description":"Summary\nThe page-break-before CSS property adjusts page breaks before the current element.\n Initial value\n: auto\n Applies to: block elements Inherited\n: no Media: visual\n , paged Computed value\n: as specified\n\nSyntax\n\npage-break-before: auto | always | avoid | left | right | inherit\n\nValues\n auto Initial value. Automatic page breaks (neither forced nor forbidden). always Always force page breaks before the element. avoid \nUnimplemented\n Avoid page breaks before the element. left \nUnimplemented\n Force page breaks before the element so that the next page is formatted as a left page. right \nUnimplemented\n Force page breaks before the element so that the next page is formatted as a right page.\n\nExamples\n\n\/* avoid page break before the div *\/\ndiv.note { page-break-before: avoid;  } \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) [*] 4.0 7.0 1.2 (125)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\n[*] Gecko only supports page-break-before:always. See \n\nbug 132035\n\nSpecification\n CSS 3 Paged Media #page-break-after CSS 2.1 Paged Media #page-break-after\n\nSee also\n page-break-after, page-break-inside orphans, widows\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/page-break-inside","title":"page-break-inside","description":"Summary\nThe page-break-inside CSS property adjusts page breaks inside the current element.\n Initial value\n: auto\n Applies to: block elements Inherited\n: no Media: visual\n , paged Computed value\n: as specified\n\nSyntax\n\npage-break-inside: auto | avoid | inherit\n\nValues\n auto Initial value. Automatic page breaks (neither forced nor forbidden). avoid Avoid page breaks before the element.\n\nExamples\n\n\/* avoid page break inside the paragraph *\/\np { page-break-inside: avoid;  } \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 -- 8.0 7.0 1.3 (312)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n Specification\n CSS 3 Paged Media #page-break-inside CSS 2.1 Paged Media #page-break-inside\n\nSee also\n page-break-after, page-break-before orphans, widows\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/perspective","title":"perspective","description":"Summary\nThe perspective CSS property determines the distance between the z=0 plane and the user in order to give to the 3D-positioned element some perspective. Each 3D element that is placed between the z=0 and the user is enlarged, each 3D-element with z&lt;0 is shrinked. How much deformation is defined by the value of this property.\nPart of the 3D-elements that are behind the user, i.e. that their z-axis coordinate is greater than the value of the perspective CSS property are not drawn.\nThe vanishing point is by default placed at the center of the element, but its position can be changed using the perspective-origin\n property.\nUsing this property with a value different than 0 and none creates a new stacking context.\n Initial value\n : none Applies to : block and inline elements Inherited\n: no Media: visual\n  Computed value\n: same as specified value.\n\nSyntax\nperspective: none     or\nperspective: depth\n\nwhere :\n none Is a keyword indicating that no perspective transform has to be applied. depth Is a \n&lt;length&gt;\n giving the distance from the user to the z=0 plane. It used to apply a perspective transform to the element and its content. If it 0 or a negative value, no perspective transform is applied.\n\nExamples\n    perspective:150px; perspective:300px; perspective:600px;      &nbsp; &nbsp; 1 2 3 4 5 6       &nbsp; &nbsp; 1 2 3 4 5 6       &nbsp; &nbsp; 1 2 3 4 5 6      \n\nSpecifications\n   Specification Status Comment     CSS 3D Transforms Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 12\n-webkit 10.0 (10)\n\n-moz 10\n-ms -- (Supported)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 3.0\n-webkit 10.0 (10)\n\n-moz ? -- (Supported)\n-webkit   \n\nSee also\n CSS Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/perspective-origin","title":"perspective-origin","description":"Summary\nThe perspective-origin CSS property determines the position the viewer is looking at. It is used as the vanishing point by the perspective\n property.\n Initial value\n : 50% 50% Applies to : block and inline elements Inherited\n: no Percentages : refer to the size of the element's box Media: visual\n  Computed value\n: same as specified value.\n\nSyntax\nperspective-origin: x-position                           or\nperspective-origin: x-position y-position\n\nWhen both x-position and y-position are keywords, the following is also valid:\nperspective-origin: y-position x-position\n\nwhere :\n&nbsp;\n x-position Indicates the position of the abscissa of the vanishing point. It can have one of the following values:  &lt;percentage&gt;\n indicating the position relative to the width of the element. The value may be negative. \n&lt;length&gt;\n indicating the position using a length value. The value may be negative. left, a keyword being a shortcut for the 0 length value. center, a keyword being a shortcut for the 50% percentage value. right, a keyword being a shortcut for the 100% percentage value.   y-position Indicates the position of the ordinate of the vanishing point. It can have one of the following values:  &lt;percentage&gt;\n indicating the position relative to the height of the element. The value may be negative. \n&lt;length&gt;\n indicating the position using a length value. The value may be negative. top, a keyword being a shortcut for the 0 length value. center, a keyword being a shortcut for the 50% percentage value. bottom, a keyword being a shortcut for the 100% percentage value.  \nExamples\n    perspective-origin:top left; perspective-origin:top; perspective-origin:top right;      1 2 3 4 5 6       1 2 3 4 5 6       1 2 3 4 5 6      perspective-origin:left; perspective-origin:50% 50%; perspective-origin:right;      1 2 3 4 5 6       1 2 3 4 5 6       1 2 3 4 5 6      perspective-origin:bottom left; perspective-origin:bottom; perspective-origin:bottom right;      1 2 3 4 5 6       1 2 3 4 5 6       1 2 3 4 5 6      \n\nSpecifications\n   Specification Status Comment     CSS 3D Transforms Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 12\n-webkit 10.0 (10)\n\n-moz 10\n-ms -- (Supported)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 3.0\n-webkit 10.0 (10)\n\n-moz ? -- (Supported)\n-webkit   \n\nSee also\n CSS Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/pointer-events","title":"pointer-events","description":"Summary\nThe CSS property pointer-events allows authors to control under what circumstances (if any) a particular graphic element can become the target of mouse events. When this property is unspecified, the same characteristics of the visiblePainted value apply to SVG content.\nIn addition to indicating that the element is not the target of mouse events, the value&nbsp;none&nbsp;instructs the mouse event to go &quot;through&quot; the element and target whatever is &quot;underneath&quot; that element instead.\n Initial value\n: auto Applies to: all elements Inherited\n: yes Media: visual\n  Computed value\n: the specified value, or else the inherited value\n\nSyntax\npointer-events:  auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit\n\nValues\n auto The element behaves as it would if the pointer-events property was not specified. In SVG&nbsp;content, this value and the value visiblePainted have the same effect. none The element is never the target of mouse events; however, mouse events may target its descendant elements if those descendants have pointer-events set to some other value. In these circumstances, mouse events will trigger event listeners on this parent element as appropriate on their way to\/from the descendant during the event capture\/bubble phases. visiblePainted SVG only. The element can only be the target of a mouse event when the visibility property is set to visible and when the mouse cursor is over the interior (i.e., 'fill') of the element and the fill property is set to a value other than none, or when the mouse cursor is over the perimeter (i.e., 'stroke') of the element and the stroke property is set to a value other than none. visibleFill SVG only. The element can only be the target of a mouse event when the visibility property is set to visible and when the mouse cursor is over the interior (i.e., fill) of the element. The value of the fill property does not effect event processing. visibleStroke SVG only. The element can only be the target of a mouse event when the visibility property is set to visible and when the mouse cursor is over the perimeter (i.e., stroke) of the element. The value of the stroke property does not effect event processing. visible SVG only. The element can be the target of a mouse event when the visibility property is set to visible and the mouse cursor is over either the interior (i.e., fill) or the perimeter (i.e., stroke) of the element. The values of the fill and stroke do not effect event processing. painted SVG only. The element can only be the target of a mouse event when the mouse cursor is over the interior (i.e., 'fill') of the element and the fill property is set to a value other than none, or when the mouse cursor is over the perimeter (i.e., 'stroke') of the element and the stroke property is set to a value other than none. The value of the visibility property does not effect event processing. fill SVG only. The element can only be the target of a mouse event when the pointer is over the interior (i.e., fill) of the element. The values of the fill and visibility properties do not effect event processing. stroke SVG only. The element can only be the target of a mouse event when the pointer is over the perimeter (i.e., stroke) of the element. The values of the stroke and visibility properties do not effect event processing. all SVG only. The element can only be the target of a mouse event when the pointer is over the interior (i.e., fill) or the perimeter (i.e., stroke) of the element. The values of the fill, stroke and visibility properties do not effect event processing.\n\nExamples\n\nView Live Examples (not available, please check later) \nNotes\nNote that preventing an element from being the target of mouse events by using pointer-events does not necessarily mean that mouse event listeners on that element cannot or will not be triggered. If one of the element's children has pointer-events explicitly set to allow that child to be the target of mouse events, then any events targeting that child will pass through the parent as the event travels along the parent chain, and trigger event listeners on the parent as appropriate. Of course any mouse activity at a point on the screen that is covered by the parent but not by the child will not be caught by either the child or the parent (it will go &quot;through&quot; the parent and target whatever is underneath).\nWe would like to provide finer grained control (than just auto and none) in HTML for which parts of an element will cause it to &quot;catch&quot; mouse events, and when. To help us in deciding how pointer-events should be further extended for HTML, if you have any particular things that you would like to be able to do with this property, then please add them to the Use Cases section of this wiki page (don't worry about keeping it tidy).\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   SVG support 1.0 1.5 (1.8)\n 9.0 9.0 (2.0) 3.0 (522)   HTML\/XML content 2.0 3.6 (1.9.2)\n -- -- 4.0 (530)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n SVG 1.1 Interactivity #PointerEvents CSS 3 Basic User Interface #pointer-events &nbsp;Editor's draft (work in progress)\n\nSee also\n The SVG attribute \npointer-events WebKit Specs PointerEventsProperty extended for use in (X)HTML content\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/position","title":"position","description":"Summary\nThe position CSS property chooses alternative rules for positioning elements, designed to be useful for scripted animation effects.\n Initial value\n: static Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nA positioned element is an element whose computed position property is relative, absolute, or fixed.\nAn absolutely positioned element is an element whose computed position property is absolute or fixed.\nThe top\n, right\n, bottom\n, and left\n properties specify the position of positioned elements.\nSyntax\n\nposition:  static | relative | absolute | fixed | inherit\n\nValues\n static Normal behavior.&nbsp; The top, right, bottom, and left properties do not apply. relative Lay out all elements as though the element were not positioned, and then adjust the element's position, without changing layout (and thus leaving a gap for the element where it would have been had it not been positioned).&nbsp; The effect of position:relative on table-*-group, table-row, table-column, table-cell, and table-caption elements is undefined. absolute Do not leave space for the element.&nbsp; Instead, position it at a specified position relative to its closest positioned ancestor or to the containing block. Absolutely positioned boxes can have margins, they do not collapse with any other margins. fixed Do not leave space for the element.&nbsp; Instead, position it at a specified position relative to the screen's&nbsp;viewport and doesn't move when scrolled. When printing, position it at that fixed position on every page.\n\nExamples\nRelative positioning\nTo position an element relatively 20px from the top and left of its normal position, the following CSS is used.\n\n#two { position: relative; top: 20px; left: 20px; }\n\n&nbsp;Note how the other elements are displayed as if &quot;Two&quot; were in it's normal position and taking up space.\n\nAbsolute positioning\nElements that are positioned relatively are still considered to be in the normal flow of elements in the document.&nbsp; In contrast, an element that is positioned absolutely is taken out of the flow and thus takes up no space when placing other elements.&nbsp; The absolutely positioned element is positioned relative to nearest positioned ancestor.&nbsp; If a positioned ancestor doesn't exist, the initial container is used.\nIn the example below, the blue ancestor div is positioned relative (so it becomes the nearest positioned ancestor) and box Two is positioned absolutely:\n\n#ancestor { position: relative; background: #ddf; width: 500px; }\n#two { position: absolute; top: 20px; left: 20px; }\n\n\nIf #ancestor had not been positioned relative, box Two would have appeared relative to the upper left corner of the page.\nFixed positioning\nFixed positioning is similar to absolute positioning, with the exception that the element's containing block is the viewport.&nbsp; This is often used to create a floating element that stays in the same position even after scrolling the page.&nbsp; In the example below the &quot;One&quot; box is fixed 80px from the top of the page and 20px from the left:\n\n#one { position: fixed; top: 80px; left: 20px }\n\nWhen viewing the top of the page, the position box appears in the upper left, and after scrolling, it remains in the same place relative to the viewport:\n\n\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;\nRelative positioning\nTo position an element relatively 20px from the top and left of its normal position, the following CSS is used.\n\n#two { position: relative; top: 20px; left: 20px; }\n\n&nbsp;Note how the other elements are displayed as if &quot;Two&quot; were in it's normal position and taking up space.\n\nAbsolute positioning\nElements that are positioned relatively are still considered to be in the normal flow of elements in the document.&nbsp; In contrast, an element that is positioned absolutely is taken out of the flow and thus takes up no space when placing other elements.&nbsp; The absolutely positioned element is positioned relative to nearest positioned ancestor.&nbsp; If a positioned ancestor doesn't exist, the initial container is used.\nIn the example below, the blue ancestor div is positioned relative (so it becomes the nearest positioned ancestor) and box Two is positioned absolutely:\n\n#ancestor { position: relative; background: #ddf; width: 500px; }\n#two { position: absolute; top: 20px; left: 20px; }\n\n\nIf #ancestor had not been positioned relative, box Two would have appeared relative to the upper left corner of the page.\nFixed positioning\nFixed positioning is similar to absolute positioning, with the exception that the element's containing block is the viewport.&nbsp; This is often used to create a floating element that stays in the same position even after scrolling the page.&nbsp; In the example below the &quot;One&quot; box is fixed 80px from the top of the page and 20px from the left:\n\n#one { position: fixed; top: 80px; left: 20px }\n\nWhen viewing the top of the page, the position box appears in the upper left, and after scrolling, it remains in the same place relative to the viewport:\n\n\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;&nbsp;\nNotes\nFor relatively positioned elements, the top\n or bottom\n property specifies the vertical offset from the normal position and the left\n or right\n property specifies the horizontal offset.\nFor absolutely positioned elements, the top\n, right\n, bottom\n, and left\n properties specify offsets from the edge of the element's containing block (what the element is positioned relative to). The margin of the element is then positioned inside these offsets.\nMost of the time, absolutely positioned elements have auto values of height\n and width\n computed to fit the contents of the element. However, non-replaced absolutely positioned elements can be made to fill the available space by specifying (as other than auto) both top\n and bottom\n and leaving height\n unspecified (that is, auto). Likewise for left\n, right\n, and width\n.\nExcept for the case just described of absolutely positioned elements filling the available space:\n If both top\n and bottom\n are specified (technically, not auto), top\n wins. If both left\n and right\n are specified, left\n wins when direction\n is ltr (English, horizontal Japanese, etc.) and right\n wins when direction\n is rtl (Arabic, Hebrew, etc.).\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 4.0 4.0 1.0 (85)   fixed value 1.0 1.0 (1.0) 7.0 4.0 1.0 (85)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Visual formatting #position\n\nSee also\ndisplay\n, float\n, top\n, right\n, bottom\n, left\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/quotes","title":"quotes","description":"Summary\nThe quotes property indicates how user agents should render quotation marks.\n Initial value\n: user agent specific Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nquotes:  [&lt;string&gt; &lt;string&gt;]+ | none | inherit\n\nValues\n none The open-quote and close-quote values of the content property produce no quotation marks. [&lt;string&gt; &lt;string&gt;]+ One or more pairs of &lt;string&gt;\n  values for open-quote and close-quote. The first pair represents the outer level of quotation, the second pair is for the first nested level, next pair for third level and so on.\n\nExamples\n\nq { quotes: '&quot;' '&quot;' &quot;'&quot; &quot;'&quot; }\nq:before { content: open-quote }\nq:after  { content: close-quote }\n\nNotes\n\nFirefox 3.5 note\n\n Starting in Firefox 3.5, the initial value of the quotes property can be read using -moz-initial This wasn't possible in earlier versions of Firefox.\nSpecifications\n CSS 2.1 Generated content #quotes \nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 11 1.5 8.0 4.0 ?  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n See also\ncontent\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/resize","title":"resize","description":"Summary\nThe resize CSS property lets you control the resizability of an element.\n Initial value\n: none Applies to: block-level and replaced elements, table cells, and inline blocks Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nresize: none | both | horizontal | vertical | inherit\n\nSyntax\n\nresize: none | both | horizontal | vertical | inherit\n\nValues\n none The element offers no user-controllable method for resizing the element. both The element displays a mechanism for allowing the user to resize the element, which may be resized both horizontally and vertically. horizontal The element displays a mechanism for allowing the user to resize the element, which may only be resized horizontally. vertical The element displays a mechanism for allowing the user to resize the element, which may only be resized vertically.\n\nNote: resize does not apply to blocks for which the overflow\n&nbsp;property is set to visible.\n Examples Disabling resizability of textareas By default, &lt;textarea&gt;\n&nbsp;elements are resizable in Gecko&nbsp;2.0 (Firefox 4). You may override this behavior with the CSS&nbsp;shown below: \r\n          textarea.example {\n  resize: none; \/* disables resizability *\/\n}\r\n         Using resize with arbitrary elements You can use the resize property to make any element resizable. In the example below, a resizable &lt;div&gt;\n box contains a resizable paragraph (&lt;p&gt;\n&nbsp;element: \r\n          &lt;div style=&quot;resize:both; overflow:scroll; width:300px; height:300px; border:1px solid black&quot;&gt;\n  &lt;p style=&quot;resize:both; overflow:scroll; width:200px; height:200px; border:1px solid black&quot;&gt;\n    This paragraph is resizable, because the CSS resize property is set to 'both' on this\n    element.\n  &lt;\/p&gt;\n&lt;\/div&gt;\r\n          &nbsp; \nView the live example\n Examples Disabling resizability of textareas By default, &lt;textarea&gt;\n&nbsp;elements are resizable in Gecko&nbsp;2.0 (Firefox 4). You may override this behavior with the CSS&nbsp;shown below: \r\n          textarea.example {\n  resize: none; \/* disables resizability *\/\n}\r\n         Using resize with arbitrary elements You can use the resize property to make any element resizable. In the example below, a resizable &lt;div&gt;\n box contains a resizable paragraph (&lt;p&gt;\n&nbsp;element: \r\n          &lt;div style=&quot;resize:both; overflow:scroll; width:300px; height:300px; border:1px solid black&quot;&gt;\n  &lt;p style=&quot;resize:both; overflow:scroll; width:200px; height:200px; border:1px solid black&quot;&gt;\n    This paragraph is resizable, because the CSS resize property is set to 'both' on this\n    element.\n  &lt;\/p&gt;\n&lt;\/div&gt;\r\n          &nbsp; \nView the live example\n Disabling resizability of textareas By default, &lt;textarea&gt;\n&nbsp;elements are resizable in Gecko&nbsp;2.0 (Firefox 4). You may override this behavior with the CSS&nbsp;shown below: \r\n          textarea.example {\n  resize: none; \/* disables resizability *\/\n}\r\n         Using resize with arbitrary elements You can use the resize property to make any element resizable. In the example below, a resizable &lt;div&gt;\n box contains a resizable paragraph (&lt;p&gt;\n&nbsp;element: \r\n          &lt;div style=&quot;resize:both; overflow:scroll; width:300px; height:300px; border:1px solid black&quot;&gt;\n  &lt;p style=&quot;resize:both; overflow:scroll; width:200px; height:200px; border:1px solid black&quot;&gt;\n    This paragraph is resizable, because the CSS resize property is set to 'both' on this\n    element.\n  &lt;\/p&gt;\n&lt;\/div&gt;\r\n          &nbsp; \nView the live example\n Browser compatibility \n\n\n Desktop Mobile\n\n     Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 4.0 (2.0) -- -- 3.0 (522)   Applies to &nbsp;&lt;textarea&gt; block-level and replaced elements, table cells, and inline blocks (unless overflow\n is visible) &nbsp; &nbsp; &lt;textarea&gt;         Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?     Specification  \nCSS3-UI: resizeCR  See also  &lt;textarea&gt;\n  "},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/right","title":"right","description":"Summary\nThe right property specifies part of the position of positioned elements.\nFor absolutely positioned elements (those with position\n: absolute or position: fixed), it specifies the distance between the right margin edge of the element and the right edge of its containing block.\n Initial value\n: auto\n Applies to: positioned elements Inherited\n: no Percentages: refer to width of containing block Media: visual\n  Computed value\n: absolute length, percentage, or auto\n\nSyntax\n\nright: &lt;length&gt; | &lt;percentage&gt; | auto | inherit&nbsp;;\n\nValues\n \n&lt;length&gt;\n&nbsp; A length, can be negative, zero, or positive. &lt;percentage&gt;\n&nbsp; A percentage of the containing block's width.\n\nExamples\n\nView the live example\n\n\n#example_3 {\n&nbsp;&nbsp;width: 600px;\n&nbsp;&nbsp;height: 400px;\n&nbsp;&nbsp;background-color: #FFC7E4;\n&nbsp;&nbsp;position: relative;\n&nbsp;&nbsp;top: 20px;\n&nbsp;&nbsp;left: 20px;\n}\n\n#example_4 {\n&nbsp;&nbsp;width:200px;\n&nbsp;&nbsp;height:200px;\n&nbsp;&nbsp;background-color: #FFD7C2;\n&nbsp;&nbsp;position:absolute;\n&nbsp;&nbsp;bottom:10px;\n&nbsp;&nbsp;right: 20px;\n}Notes\nSpecifications\n CSS 2.1\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7 or earlier)\n 5.5 5 1.0  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\nSee also\nposition\n, top\n, bottom\n, left\n "},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/table-layout","title":"table-layout","description":"Summary\ntable-layout property defines the algorithm to be used to layout the table cells, rows, and columns.\n Initial value\n: auto\n Applies to: 'table' and 'inline-table' elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\ntable-layout: inherit | auto | fixed \n\nValues\n inherit\n auto\n An automatic table layout algorithm is commonly used by most browsers for table layout. The width of the table and its cells depends on the content thereof.  fixed Table and column widths are set by the widths of table and col elements or by the width of the first row of cells. Cells in subsequent rows do not affect column widths.  Under the &quot;fixed&quot; layout method, the entire table can be rendered once the first table row has been downloaded and analyzed. This can speed up rendering time over the &quot;automatic&quot; layout method, but subsequent cell content may not fit in the column widths provided. Any cell that has content that overflows uses the overflow\n property to determine whether to clip the overflow content.\nExamples\n\nView Live Examples\n.contentbox {\n  table-layout: fixed;\n}\n\nSpecifications\n CSS 2.1 #table-layout\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer 5.0   Firefox 1.0   Opera 7.0   Safari 1.0  \n\nSee also\n\n\ncaption-side\n, table-layout\n, border-collapse\n, border-spacing\n, empty-cells\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/tab-size","title":"tab-size","description":"Summary\nThe tab-size CSS property is used to customize the width of a tab (U+0009) character.\n Initial value\n: 8 Applies to: all elements Inherited\n: yes Media: visual\n  Computed value\n: as specified\n\nSyntax\ntab-size: &lt;integer&gt; | inherit\n\nValues\n &lt;integer&gt;\n  The number of spaces in a tab. Must be positive. inherit Inherits from the parent element.\n\nExamples\npre {\n&nbsp;&nbsp;tab-size: 99; \/* Don't use tabs! *\/\n}\n\nValues\n &lt;integer&gt;\n  The number of spaces in a tab. Must be positive. inherit Inherits from the parent element.\n\nExamples\npre {\n&nbsp;&nbsp;tab-size: 99; \/* Don't use tabs! *\/\n}\n\nSpecifications\n CSS Text Level 3 &#8213; The &quot;tab-size&quot; property W3C Editor's Draft\n\nBrowser compatibility\n   Browser Lowest Version Support of   Internet Explorer --- ---   Firefox 4.0 (Gecko 2.0) -moz-tab-size   Opera 10.60 -o-tab-size   Safari (WebKit) --- ---  \n\nSee also\n CSS Reference Controlling size of a tab character (U+0009), an email by Anne van Kesteren (Opera) to the CSSWG.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-align","title":"text-align","description":"Summary\nThe text-align CSS property describes how inline content like text is aligned in its parent block element. text-align does not control the alignment of block elements itself, only their inline content.\n Initial value\n: a nameless value that acts as left if 'direction' is 'ltr', right if 'direction' is 'rtl' Applies to: block level elements, table cells and inline-blocks Inherited\n: yes Media: visual\n  Computed value\n: as specified\n\nSyntax\n\n text-align:  left | center | right | justify | start | end | -moz-left | -moz-center | -moz-right | inherit\n\n\nValues\n left The inline contents are aligned to the left edge of the line box. right The inline contents are aligned to the right edge of the line box. center The inline contents are centered within the line box. justify The text is justified. Text should line up their left and right edges to the left and right content edges of the paragraph. start The same as left if direction is left-to-right and right if direction is right-to-left. end \nRequires Gecko 1.9.2\n The same as right if direction is left-to-right and left if direction is right-to-left.\n\nMozilla Extensions\n -moz-center Centers inline and also block content. -moz-left Aligns inline and also block content. -moz-right Aligns inline and also block content.\n\nMozilla Extensions\n -moz-center Centers inline and also block content. -moz-left Aligns inline and also block content. -moz-right Aligns inline and also block content.\n\nExamples\n\nView Live Examples\nLive Examples\ndiv { text-align: center; border:solid; }\np { background:gold; width:22em; }\nsome more inline content...\ndiv { text-align: center; border:solid; }\np { background:gold; width:22em; margin: 1em auto; }\nsome more inline content...\ndiv { text-align:-moz-center; text-align:-webkit-center; border:solid; }\np { background:gold; width:22em; }\nsome more inline content...\nLive Examples\ndiv { text-align: center; border:solid; }\np { background:gold; width:22em; }\nsome more inline content...\ndiv { text-align: center; border:solid; }\np { background:gold; width:22em; margin: 1em auto; }\nsome more inline content...\ndiv { text-align:-moz-center; text-align:-webkit-center; border:solid; }\np { background:gold; width:22em; }\nsome more inline content...\nNotes\nThe standard-compatible way to center a block itself without centering its inline content is setting the left and right margin to auto, e.g.:\nmargin:auto;&nbsp; or&nbsp; margin:0 auto;&nbsp; or&nbsp; margin-left:auto; margin-right:auto;\nBrowser compatibility\n   Browser Basic support Block alignment values start value end value   Internet Explorer 3.0 --- --- ---   Firefox (Gecko) 1.0 (1.0) 1.0 (1.0) -moz-left | -moz-center | -moz-right 1.0 (1.0) 3.6 (1.9.2)   Opera 3.5 --- --- ---   Safari (WebKit) 1.0 (85) 1.0 (85) -khtml-left | -khtml-center | -khtml-right 3.1 (525) 3.1 (525)   1.3 (312) -khtml-left | -khtml-center | -khtml-right | -webkit-left | -webkit-center | -webkit-right  \n\nSpecifications\n CSS 2.1 Text #text-align  CSS 3 Text #text-align Working draft\n\nSee also\nmargin:auto\n, margin-left:auto\n, vertical-align\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-decoration","title":"text-decoration","description":"Summary\nThe text-decoration CSS property is used to set the text formattings underline, overline, line-through and blink.\n Initial value\n: none\n Applies to: all elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\ntext-decoration:   none | [underline || overline || line-through || blink] | inherit\nValues\nAccepts one or more whitespace separated values:\n none Produces no text decoration. underline Each line of text is underlined. overline Each line of text has a line above it. line-through Each line of text has a line through the middle. blink Text blinks. Browsers may ignore this value, as Internet Explorer and Safari does. Supported by Firefox (Gecko) and Opera. Note that not blinking the text is one technique to satisfy checkpoint 3.3 of WAI-UAAG. -moz-anchor-decoration Mozilla CSS Extension, not suitable for web content.\n\nExamples\n\nView Live Examples\n\n p { text-decoration: line-through; }\n\n p { text-decoration: underline overline; }  \/* multiple values are allowed *\/ \nNotes\nText decorations draw across descendant elements. This means that it is not possible to disable on a descendant a text decoration that is specified on one of its ancestors.\nFor example, in the markup:\n&nbsp;&lt;p&gt;This text has &lt;em&gt;some emphasized words&lt;\/em&gt; in it.&lt;\/p&gt;\nthe style rule:\n&nbsp;p { text-decoration: underline }\nwould cause the entire paragraph to be underlined. However, the style rule:\n&nbsp;em { text-decoration: none }\nwould not cause any change; the entire paragraph would still be underlined.\n(However, the rule em { text-decoration: overline }  would cause a second decoration to appear on &quot;some emphasized words&quot;.)\n\n\nGecko 6.0 note(Firefox 6.0 \/ Thunderbird 6.0 \/ SeaMonkey 2.3)\n\n\nStarting with Gecko 6.0 (Firefox 6.0 \/ Thunderbird 6.0 \/ SeaMonkey 2.3)\n, the text-decoration property resets -moz-text-blink\n, -moz-text-decoration-color\n, -moz-text-decoration-line\n and -moz-text-decoration-style\n, if specified.\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 1.0 (1.7 or earlier)\n 1.0 3.0 3.5 1.0   blink value 1.0 (1.7 or earlier)\n -- -- 4.0 --  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   blink value ? ? ? ? ?  \n\n\nSpecifications\n CSS 2.1 Text CSS 3 Text #text-decoration (Editor's Draft)\n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-decoration-color","title":"text-decoration-color","description":"Summary\nThe text-decoration-color CSS property sets the color used when drawing underlines, overlines, or strike-throughs specified by text-decoration-line\n. This is the preferred way to color these text decorations, rather than using combinations of other HTML&nbsp;elements.\n Initial value\n: currentColor Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: the computed color\n\nSyntax\n\ntext-decoration-color: &lt;color&gt; | inherit\n\nValues\n &lt;color&gt; The color property accepts various keywords and numeric notations. See &lt;color&gt;\n values for more details.\n\nExamples\n\r\n          .example { \n    text-decoration: underline;\n    text-decoration-color: red;\n}\r\n        \nThe example above has the same effect as the following code, which also adds a hover style.\n\r\n          &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;style&gt;\n.example {\n  font-size: 24px;\n  text-decoration: underline;\n  color: red;\n}\n.example:hover {\n  color: blue;\n  text-decoration: line-through;\n}\n&lt;\/style&gt;\n&lt;\/head&gt;\n&lt;body&gt;\n&lt;span class=&quot;example&quot;&gt;\n  &lt;span style=&quot;color:black&quot;&gt;black text with red underline and blue hover&lt;\/span&gt;\n&lt;\/span&gt;\n&lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ? 6.0 (6.0)\n  (prefixed with -moz-) ? ? ?  \n\n\n\n   Feature Android Firefox mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? 6.0 (6.0)\n (prefixed with -moz-) ? ? ?  \n\n\nSpecifications\n CSS 3 Text #text-decoration-color (Editor's Draft)\n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-decoration-line","title":"text-decoration-line","description":"Summary\nThe text-decoration-line CSS property sets what kind of line decorations are added to an element.\n Initial value\n: none Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\ntext-decoration-line: none | underline || overline || line-through\n\nValues\nAccepts one or more whitespace separated values:\n none Produces no text decoration. underline Each line of text is underlined. overline Each line of text has a line above it. line-through Each line of text has a line through the middle. -moz-anchor-decoration Mozilla CSS Extension, not suitable for web content.\n\nNotes\nIn contrast to text-decoration\n, the -moz-text-decoration-line property does not accept the blink value. You might use -moz-text-blink\n instead.\nExamples\n\n.example { \n    text-decoration-line: underline;\n    text-decoration-style: wavy;\n    text-decoration-color: red;\n}\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 6.0 (6.0)\n  (prefixed with -moz-) ? ? ? ?  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\n CSS 3 Text #text-decoration-line (Editor's Draft)\n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-decoration-style","title":"text-decoration-style","description":"Summary\nThe text-decoration-style CSS property defines the style of the lines specified by text-decoration-line\n. The style applies to all lines, there is no way to define different style for each of the line defined by text-decoration-line.\nIf the specified decoration has a specific semantic meaning, like a line-through line meaning that some text has been deleted, authors are encouraged to denote this meaning using an HTML tag, like &lt;del&gt;\n or &lt;s&gt;\n. As browsers can disabled styling in some cases, the semantic meaning won't disappear in such a situation.\n Initial value\n: solid Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: the value as specified via the syntax\nSyntax\ntext-decoration-style: \tinherit     or\ntext-decoration-style:  style\n\nwhere :\n inherit Is a keyword indicating to reuse the value calculated on the parent element. style Is one of the following keywords :    Keyword Description Live example Comment     solid Draws a single line Lorem ipsum &nbsp;   double Draws a double line Lorem ipsum &nbsp;   dotted Draws a dotted line Lorem ipsum &nbsp;   dashed Draws a dashed line Lorem ipsum &nbsp;   wavy Draws a wavy line Lorem ipsum &nbsp;   -moz-noneNon-standard       Do not draw a line Lorem ipsum Do not use : use text-decoration-line\n: none instead    \n\nExamples\n\n.example { \n    text-decoration-line: underline;\n    text-decoration-style: wavy;\n    text-decoration-color: red;\n}\n\nThis is how it looks.\nSpecifications\n   Specification Status Comment     CSS Text Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 6.0 (6.0)\n \n-moz -- -- -- --   \n\n    Feature Firefox Mobile (Gecko) Android IE Phone Opera Mobile Safari Mobile   Basic support  6.0 (6.0)\n \n-moz  -- -- -- --   \n\nSee also\n CSS Reference index\n\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-overflow","title":"text-overflow","description":"Summary\nThe text-overflow CSS property determines how overflowed content that is not displayed is signaled to the users. It can be clipped, display an ellipsis ('&hellip;', U+2026 Horizontal Ellipsis) or a Web author-defined string.\n\nThis CSS property doesn't force an overflow to occur, to do so and make text-overflow to be applied, the author must apply some additional properties on the element, like setting overflow\n to hidden.\n Initial value\n: clip Applies to : all block elements Inherited\n: no Media : visual\n  Computed value\n: the specified one.\nSyntax\ntext-overflow: inherit                                 or\ntext-overflow: end-overflow-type                       or\ntext-overflow: left-overflow-type right-overflow-type\n\nwhere :\n inherit Is a keyword indicating to use the value of this CSS property that the parent element of the element uses. end-overflow-type Is an &lt;overflow-type&gt; CSS value describing the overflow to perform at the end of the line. The end of the line is its right end if the text is written with left-to-right directionality, it is its left end if the text is written with right-to-left directionality. left-overflow-type Is an &lt;overflow-type&gt; CSS value describing the overflow to perform at the left end of the line. The directionality of the text has no influence on which end of the line is affected. right-overflow-type Is an &lt;overflow-type&gt; CSS value describing the overflow to perform at the right end of the line. The directionality of the text has no influence on which end of the line is affected.\n\n&lt;overflow-type&gt;\nThe &lt;overflow-type&gt; CSS type describes how text overflow, when not visible, must be handled. The following values are valid:\n clip This keyword value indicates to truncate the text at the limit of the content area. This is the default value. ellipsis This keyword value indicates to display ellipses ('&hellip;', U+2026 Horizontal Ellipsis) to represent clipped text. The ellipsis is displayed inside the content area, shortening more the size of the displayed text. If there is not enough place to display ellipsis, they are clipped. string The &lt;string&gt;\n  to be used to represent clipped text. The string is displayed inside the content area, shortening more the size of the displayed text. If there is not enough place to display string, they are clipped.\n&lt;overflow-type&gt;\nThe &lt;overflow-type&gt; CSS type describes how text overflow, when not visible, must be handled. The following values are valid:\n clip This keyword value indicates to truncate the text at the limit of the content area. This is the default value. ellipsis This keyword value indicates to display ellipses ('&hellip;', U+2026 Horizontal Ellipsis) to represent clipped text. The ellipsis is displayed inside the content area, shortening more the size of the displayed text. If there is not enough place to display ellipsis, they are clipped. string The &lt;string&gt;\n  to be used to represent clipped text. The string is displayed inside the content area, shortening more the size of the displayed text. If there is not enough place to display string, they are clipped.\nExamples\n\r\n          p {\n  white-space: nowrap;\n  width: 100%;                   \n  overflow: hidden;              \/* &quot;overflow&quot; value must be different from &quot;visible&quot; *\/ \n\n  text-overflow:    ellipsis;\n}\r\n        \n   CSS value direction: ltr direction: rtl   Expected Result Live result Expected Result Live result     visible overflow 1234567890  1234567890  0987654321  1234567890    text-overflow: clip 123456  1234567890  654321  1234567890    text-overflow: ellipsis 1234&hellip;  1234567890  &hellip;4321  1234567890    text-overflow: '.' 12345.  1234567890  .54321  1234567890    text-overflow: clip clip 123456  1234567890  654321  1234567890    text-overflow: clip ellipsis 12345&hellip;  1234567890  6543&hellip;  1234567890    text-overflow: clip '.' 12345.  1234567890  6543.  1234567890    text-overflow: ellipsis clip &hellip;3456  1234567890  &hellip;54321  1234567890    text-overflow: ellipsis ellipsis &hellip;345&hellip;  1234567890  &hellip;543&hellip;  1234567890    text-overflow: ellipsis '.' &hellip;345.  1234567890  &hellip;543.  1234567890    text-overflow: ',' clip ,3456  1234567890  ,54321  1234567890    text-overflow: ',' ellipsis ,345&hellip;  1234567890  ,543&hellip;  1234567890    text-overflow: ',' '.' ,345.  1234567890  ,543.  1234567890   \n\nSpecifications\n   Specification Status Comment     CSS Basic User Interface Level 3 Working Draft\n &nbsp;  \n\nA previous version of this interface reached the Candidate Recommendation status. As some not-listed-at-risk features needed to be removed, the spec was demoted to the Working Draft level, explaining why browsers implemented this property unprefixed, though not at the CR state.Browser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 (312.3) 7.0 (7.0)\n 6.0 [*] 11 [**] 1.3 (312.3)   Two-value syntax -- 9.0 (9.0)\n -- -- --   String value -- 9.0 (9.0)\n -- -- --   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support (Supported) 7.0 (7.0)\n ? (Supported) (Supported)   Two-value syntax -- 9.0 (9.0)\n -- -- --   String value -- 9.0 (9.0)\n -- -- --   \n\n[*] IE8 introduced the prefixed version, -ms-text-overflow, synonymous with text-overflow.\n[**] Opera supported the prefixed version, -o-text-overflow, from version 9.0 on.See also\n CSS Reference index Related CSS properties: overflow\n, white-space\n\n\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-indent","title":"text-indent","description":"Summary\nThe text-indent CSS property specifies how much horizontal space should be left before beginning of the first line of the text content of an element. Horizontal spacing is with respect to the left (or right, for right-to-left layout) edge of the containing block element's box.\n Initial value\n: 0 Applies to: block and inline-block elements, table cells Inherited\n: yes Percentages: refer to width of containing block Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\ntext-indent:  &lt;length&gt; | &lt;percentage&gt;\n\nValues\n &lt;length&gt; Indentation is specified as fixed \n&lt;length&gt;\n. Negative Values are allowed. See \n&lt;length&gt;\n values for possible units. &lt;percentage&gt; Indentation is a &lt;percentage&gt;\n of the containing block width.\n\nExamples\n\np { text-indent: 2em } \n\nLorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\nBrowser compatibility\n   Browser Lowest version   Internet Explorer 3.0   Firefox (Gecko) 1.0 (1.0)   Opera 3.5   Safari (WebKit) 1.0 (85)  \n\nSpecifications\n CSS 2.1 Text #text-indent\n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-rendering","title":"text-rendering","description":"Summary\nProvides information to the rendering engine about what to optimize for when rendering text. The browser makes trade-offs among speed, legibility, and geometric precision. The text-rendering property is an SVG property that is not defined in any CSS standard. However, Gecko and WebKit browsers let you apply this property to HTML and XML content on Windows and Linux.&nbsp;\nNote: This property has no effect on Mac OS&nbsp;X.\nOne very visible effect is: optimizeLegibility enables ligatures (ff, fi, fl etc.) in text smaller than 20px for some fonts (for example, Microsoft's Calibri, Candara, Constantia and Corbel or the DejaVu font family).\n Initial value\n: auto Applies to: all elements Inherited\n: yes Media: visual\n  Computed value\n: ?\n\nSyntax\n\ntext-rendering:  auto | optimizeSpeed | optimizeLegibility | geometricPrecision | inherit\nValues\n auto The browser makes educated guesses about when to optimize for speed, legibility, and geometric precision while drawing text. For differences in how this value is interpreted by the browser, see the compatibility table. optimizeSpeed The browser emphasizes rendering speed over legibility and geometric precision when drawing text. It disables kerning and ligatures. optimizeLegibility The browser emphasizes legibility over rendering speed and geometric precision. This enables kerning and optional ligatures. geometricPrecision  The browser emphasizes geometric precision over rendering speed and legibility. Certain aspects of fonts&mdash;such as kerning&mdash;don't scale linearly, so geometricPrecision can make text using those fonts look good. In SVG, when text is scaled up or down, browsers calculate the final size of the text (which is the specified font size and the applied scale) and request a font of that computed size from the platform's font system. But if you request a font size of, say, 9 with a scale of 140%, the resulting font size of 12.6 doesn't explicitly exist in the font system, so the browser rounds the font size to 12 instead. This results in stair-step scaling of text. But the geometricPrecision property&mdash;when fully supported by the rendering engine&mdash;lets you scale your text fluidly. For large scale factors, you might see less-than-beautiful text rendering, but the size is what you would expect&mdash;neither rounded up nor down to the nearest font size supported by Windows or Linux. WebKit precisely applies the specified value, but Gecko treats the value the same as optimizeLegibility. \n\nExamples\n\n\/* make sure all fonts in the HTML document display in all its glory,\n   but avoid inadequate ligatures in class foo elements *\/\n\nbody  { text-rendering: optimizeLegibility; }\n.foo  { text-rendering: optimizeSpeed; }\nLive Example\n   CSS code Kerning Ligatures   font: 19.9px 'DejaVu Serif',Constantia; LYoWAT ff fi fl ffl   font: 20px 'DejaVu Serif',Constantia; LYoWAT ff fi fl ffl   font: 3em 'DejaVu Serif',Constantia; text-rendering: optimizeSpeed; LYoWAT ff fi fl ffl   font: 3em 'Dejavu Serif',Constantia; text-rendering: optimizeLegibility; LYoWAT ff fi fl ffl  \n\nLive Example\n   CSS code Kerning Ligatures   font: 19.9px 'DejaVu Serif',Constantia; LYoWAT ff fi fl ffl   font: 20px 'DejaVu Serif',Constantia; LYoWAT ff fi fl ffl   font: 3em 'DejaVu Serif',Constantia; text-rendering: optimizeSpeed; LYoWAT ff fi fl ffl   font: 3em 'Dejavu Serif',Constantia; text-rendering: optimizeLegibility; LYoWAT ff fi fl ffl  \n\nGecko Notes\nThe 20px threshold value of the auto keyword can be changed by changing the browser.display.auto_quality_min_font_size preference.\nThe optimizeSpeed option has no effect on Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n, because the standard code for text rendering is already very fast and there is not a faster code path at this time. See \n\nbug 595688\n for details.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support for Windows and Linux  4.0&nbsp; &nbsp;  3.0&nbsp;(1.9) -- -- 5.0 (532.5)   Basic support for other operating systems -- -- -- -- --   auto  Chrome treats this as&nbsp;optimizeSpeed.&nbsp; Work is continuing on\n\nWebKit bug 41363  If the font size is 20 px or higher, Gecko browsers use optimizeLegibility; for smaller text, they use optimizeSpeed. -- -- Safari treats this as&nbsp;optimizeSpeed. Work is continuing on\n\nWebKit bug 41363    geometricPrecision  13 supports true geometric precision, without rounding up or down to the nearest supported font size in the operating system. Introduced in WebKit 535.1 &nbsp; \n\nWebKit bug 60317  Gecko treats the value the same as&nbsp;optimizeLegibility. &nbsp;-- &nbsp;-- &nbsp;  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSpecifications\nThis is an SVG property, it is not defined in any CSS standard. Gecko (Firefox) and WebKit apply text-rendering also to HTML and XML content.\n SVG 1.1 Painting #text-rendering\n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-shadow","title":"text-shadow","description":"Syntax\ntext-shadow: none | [&lt;shadow&gt;,]* &lt;shadow&gt;\n\n  where &lt;shadow&gt; is:\n\n[ &lt;color&gt;? &lt;offset-x&gt; &lt;offset-y&gt; &lt;blur-radius&gt;? | &lt;offset-x&gt; &lt;offset-y&gt; &lt;blur-radius&gt;? &lt;color&gt;? ]\n\nValues\n &lt;color&gt; Optional. Can be specified either before or after the offset values. If the color is not specified, a UA-chosen color will be used. Note:&nbsp;If you want to ensure consistency across browsers, explicitly specify a color.\n &lt;offset-x&gt; &lt;offset-y&gt; Required. These &lt;length&gt; values specify the shadow's offset from the text. &lt;offset-x&gt; specifies the horizontal distance; a negative value places the shadow to the left of the text. &lt;offset-y&gt; specifies the vertical distance; a negative value places the shadow above the text. If both values are 0, then the shadow is placed behind the text (and may generate a blur effect when &lt;blur-radius&gt; is set). To find out what units you can use, see \n&lt;length&gt;\n. &lt;blur-radius&gt; Optional. This is a \n&lt;length&gt;\n value. If not specified, it defaults to 0. The higher this value, the bigger the blur; the shadow becomes wider and lighter.\n\nExamples\ntext-shadow: orange 0 -2px;\n\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.\ntext-shadow: 1px 1px 2px black, 0 0 1em blue, 0 0 0.2em blue;\ncolor: white;\nfont: 1.5em Georgia, &quot;Bitstream Charter&quot;, &quot;URW Bookman L&quot;, &quot;Century Schoolbook L&quot;, serif;\n\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.\ntext-shadow: rgba(0,0,0,0.1) -1px 0, rgba(0,0,0,0.1) 0 -1px,\n             rgba(255,255,255,0.1) 1px 0, rgba(255,255,255,0.1) 0 1px,\n             rgba(0,0,0,0.1) -1px -1px, rgba(255,255,255,0.1) 1px 1px; \ncolor: gold;\nbackground: gold;\n\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2.0.158.0 3.5 (1.9.1)\n 10 [1] 9.5 1.1 (100)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n Gecko (Firefox) theoretically supports infinite text-shadows (don't try it). Gecko 2&nbsp;and later cap the blur radius at 300 for performance reasons. If the reference to undefined name 'Xref_color' Exception of type 'MindTouch.Deki.Script.Runtime.DekiScriptUndefinedNameException' was thrown. (click for details)Callstack:\n    at en\/CSS\/text-shadow\n\nMindTouch.Deki.Script.Runtime.DekiScriptUndefinedNameException: reference to undefined name 'Xref_color' Exception of type 'MindTouch.Deki.Script.Runtime.DekiScriptUndefinedNameException' was thrown.\n  at MindTouch.Deki.Script.Compiler.DekiScriptExpressionEvaluation.Visit (MindTouch.Deki.Script.Expr.DekiScriptVar expr, DekiScriptExpressionEvaluationState state) [0x00000] in &lt;filename unknown&gt;:0 \n  at MindTouch.Deki.Script.Expr.DekiScriptVar.VisitWith[DekiScriptExpressionEvaluationState,Range] (IDekiScriptExpressionVisitor`2 visitor, DekiScriptExpressionEvaluationState state) [0x00000] in &lt;filename unknown&gt;:0 \n  at MindTouch.Deki.Script.Compiler.DekiScriptExpressionEvaluation.Visit (MindTouch.Deki.Script.Expr.DekiScriptCall expr, DekiScriptExpressionEvaluationState state) [0x00000] in &lt;filename unknown&gt;:0 \n  at MindTouch.Deki.Script.Expr.DekiScriptCall.VisitWith[DekiScriptExpressionEvaluationState,Range] (IDekiScriptExpressionVisitor`2 visitor, DekiScriptExpressionEvaluationState state) [0x00000] in &lt;filename unknown&gt;:0 \n  at MindTouch.Deki.Script.Compiler.DekiScriptExpressionEvaluation.Visit (MindTouch.Deki.Script.Expr.DekiScriptReturnScope expr, DekiScriptExpressionEvaluationState state) [0x00000] in &lt;filename unknown&gt;:0  value is unspecified, then Gecko uses the value of the element's color\n property. Opera supports a maximum of 6-9 text-shadows for performance reasons. The blur radius is limited to 100px. Opera 9.5-10.1 adheres to the old, reverse painting order (CSS2, the first specified shadow is on the bottom). Internet Explorer 5.5 supports Microsoft's Shadow and DropShadow Filter. Safari: Any shadows that do not explicitly specify a color are transparent. Safari 1.1-3.2 only supports one text-shadow (displays the first shadow of a comma-separated list and ignores the rest). Safari 4.0 (WebKit 528) and later support multiple text-shadows. Konqueror supports text-shadow starting with version 3.4.\n\nSpecifications\ntext-shadow was improperly defined in CSS2 and dropped in CSS2.1. The CSS3 Text spec improved the syntax.\n CSS 3 Text #text-shadow Working draft, some changes are proposed.\n\nSee also\n box-shadow\n\n\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/text-transform","title":"text-transform","description":"Summary\nThe text-transform CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.\n Initial value\n: none\n Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\ntext-transform:  capitalize | uppercase | lowercase | none | inherit\n\n\nValues\n capitalize First letter of each word is converted to uppercase. Other letters are unchanged; that is, they retain their original case as written in the element's text. uppercase All letters are converted to uppercase. lowercase All letters are converted to lowercase. none Case of all letters is unchanged.\n\nExamples\np { text-transform: none; }\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\np { text-transform: capitalize; }\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\np { text-transform: uppercase; }\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\np { text-transform: lowercase; }\n\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7 or earlier)\n 4.0 3.5 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n CSS 2.1 Text #text-transform\n\nSee also\n font-variant\n \n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/top","title":"top","description":"Summary\nThe top property specifies part of the position of positioned elements.\nFor absolutely positioned elements (those with position\n: absolute or position\n: fixed), it specifies the distance between the top margin edge of the element and the top edge of its containing block.\nFor relatively positioned elements (those with position\n: relative), it specifies the amount the element is moved below its normal position.\n Initial value\n: auto\n Applies to: positioned elements Inherited\n: no Percentages: refer to height of containing block Media: visual\n  Computed value\n: absolute length, percentage, or auto\n\nSyntax\n\n   top: &lt;length&gt; | &lt;percentage&gt; | auto | inherit\n\nExamples\n\n \/* The body could be set using px unit also for the div to operate *\/\n body{\n   width: 100%;\n   height: 100%;\n }\n \/* The div can now operate the settings with&nbsp;% unit (body w and h are set) *\/\n div{\n   position:absolute;\n   left:15%;\n   top:30%;\n   bottom:30%;\n   width:70%;\n   height:40%;\n   text-align:left;\n   border: 3px rgb(0,0,0) solid;\n }\n\n\n &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n &lt;!DOCTYPE html PUBLIC &quot;-\/\/W3C\/\/DTD XHTML 1.0 Transitional\/\/EN&quot;\n           &quot;http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-transitional.dtd&quot;&gt;\n &lt;html xmlns=&quot;http:\/\/www.w3.org\/1999\/xhtml&quot; lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;\n   &lt;head&gt;\n     &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;application\/xhtml+xml&quot; \/&gt;\n     &lt;title&gt;Mozzila.org height top left width percentage CSS&lt;\/title&gt;\n     &lt;style type=&quot;text\/css&quot;&gt;\n       \/* The body could be set using px unit also for the div to operate *\/\n       body{\n         width: 100%;\n         height: 100%;\n       }\n       \/* The div can now operate the settings with&nbsp;% unit (body w and h are set) *\/\n       div{\n         position:absolute;\n         left:15%;\n         top:30%;\n         bottom:30%;\n         width:70%;\n         height:40%;\n         text-align:left;\n         border: 3px rgb(0,0,0) solid;\n       }\n     &lt;\/style&gt;\n   &lt;\/head&gt;\n   &lt;body&gt;\n      &lt;center&gt;\n        &lt;div&gt;\n             ...Some content...\n        &lt;\/div&gt;\n      &lt;\/center&gt;\n\n   &lt;\/body&gt;\n &lt;\/html&gt;\n\nNotes\ntop is the more relevant property than bottom because the browser window default is to valign to the top. With some position property settings the top property is irrelevant. Top and bottom settings can be used by DHTML for more than simply the div element.\nSpecifications\n CSS 2.1\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ?   Firefox 1   Netscape ?   Opera ?   Safari ?  \n\nSee also\nposition\n, right\n, bottom\n, left\n "},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/transform","title":"transform","description":"Summary\nThe transform CSS property lets you modify the coordinate space of the CSS visual formatting model. Using it, elements can be translated, rotated, scaled, and skewed as this text.\n Initial value\n: none Applies to: all block level and inline level elements Inherited\n: no Media: visual\n  Computed value\n:\n\nSyntax\n\ntransform:  &lt;transform-function&gt; [&lt;transform-function&gt;]* | none\nVendor prefixes: See the compatibility table below for detail on the vendor prefixes you'll need to use for this feature.\nValues\n transform-function One or more of the CSS transform functions to be applied, see below. none Specifies that no transform should be applied.\n\nExamples\nSee Using CSS transforms.\nLive Example\n\npre {\n     width: 33em;\n     border: solid red;\n\n    -moz-transform: translate(100px) rotate(20deg);\n    -moz-transform-origin: 60% 100%;\n\n    -webkit-transform: translate(100px) rotate(20deg);\n    -webkit-transform-origin: 60% 100%;\n\n    -o-transform:translate(100px) rotate(20deg); \n    -o-transform-origin:60% 100%;\n\n    -ms-transform: translate(100px) rotate(20deg);\n    -ms-transform-origin: 60% 100%;\n\n    transform: translate(100px) rotate(20deg);\n    transform-origin: 60% 100%;\n}\n\nLive Example\n\npre {\n     width: 33em;\n     border: solid red;\n\n    -moz-transform: translate(100px) rotate(20deg);\n    -moz-transform-origin: 60% 100%;\n\n    -webkit-transform: translate(100px) rotate(20deg);\n    -webkit-transform-origin: 60% 100%;\n\n    -o-transform:translate(100px) rotate(20deg); \n    -o-transform-origin:60% 100%;\n\n    -ms-transform: translate(100px) rotate(20deg);\n    -ms-transform-origin: 60% 100%;\n\n    transform: translate(100px) rotate(20deg);\n    transform-origin: 60% 100%;\n}\n\nCSS transform functions\nThe transform CSS property allows the coordinate system used by an element to be manipulated using transform functions. These functions are described below.\nmatrix\n\ntransform:  matrix(a, c, b, d, tx, ty)\n\n\/* Where a, b, c, d build the transformation matrix \n   &#9484;     &#9488; \n   &#9474; a b &#9474;\n   &#9474; c d &#9474;\n   &#9492;     &#9496;\n   and tx, ty are the translate values.  *\/\n\nSpecifies a 2D transformation matrix comprised of the specified six values. This is the equivalent to applying the transformation matrix [a b c d tx ty].\nNote: Gecko (Firefox) accepts a \n&lt;length&gt;\n value for tx and ty. Webkit (Safari, Chrome) and Opera currently support a unitless &lt;number&gt;\n for tx and ty.\nLive Examples\n\n background: gold;  width: 30em;\n\n    -moz-transform: matrix(1, -0.2, 0, 1, 0, 0);\n -webkit-transform: matrix(1, -0.2, 0, 1, 0, 0);\n      -o-transform: matrix(1, -0.2, 0, 1, 0, 0);\n     -ms-transform: matrix(1, -0.2, 0, 1, 0, 0);\n         transform: matrix(1, -0.2, 0, 1, 0, 0);\n\n\n background: wheat;\n max-width: intrinsic;\n\n    -moz-transform: matrix(1, 0, 0.6, 1, 15em, 0);\n -webkit-transform: matrix(1, 0, 0.6, 1,  250, 0);\n      -o-transform: matrix(1, 0, 0.6, 1,  250, 0);\n     -ms-transform: matrix(1, 0, 0.6, 1,  250, 0);\n         transform: matrix(1, 0, 0.6, 1,  250, 0);\n\nSee also\n Examples of linear transformation matrices Wikipedia Coordinate transformation matrices mathamazement.com Microsoft's matrix filter MSDN\n\nrotate\n\ntransform:  rotate(angle);       \/* an &lt;angle&gt;, e.g.  rotate(30deg) *\/\nRotates the element clockwise around its origin (as specified by the transform-origin\n property) by the specified angle. The operation corresponds to the matrix [cos(angle) sin(angle) -sin(angle) cos(angle) 0 0].\nscale\n\ntransform:  scale(sx[, sy]);     \/* one or two unitless &lt;number&gt;s, e.g.  scale(2.1,4) *\/\nSpecifies a 2D scaling operation described by [sx, sy]. If sy isn't specified, it is assumed to be equal to sx.\nscaleX\n\ntransform:  scaleX(sx);          \/* a unitless &lt;number&gt;, e.g.  scaleX(2.7) *\/\nSpecifies a scale operation using the vector [sx, 1].\nscaleY\n\ntransform:  scaleY(sy)           \/* a unitless &lt;number&gt;, e.g.  scaleY(0.3) *\/\nSpecifies a scale operation using the vector [1, sy].\nskew\n\ntransform:  skew(ax[, ay])       \/* one or two &lt;angle&gt;s, e.g.  skew(30deg,-10deg) *\/\nSkews the element around the X and Y axes by the specified angles. If ay isn't provided, no skew is performed on the Y axis.\nskewX\n\ntransform:  skewX(angle)         \/* an &lt;angle&gt;, e.g.  skewX(-30deg) *\/\nSkews the element around the X axis by the given angle.\nskewY\n\ntransform:  skewY(angle)         \/* an &lt;angle&gt;, e.g.  skewY(4deg) *\/\nSkews the element around the Y axis by the given angle.\ntranslate\n\ntransform:  translate(tx[, ty])  \/* one or two &lt;length&gt; values *\/\nSpecifies a 2D translation by the vector [tx, ty]. If ty isn't specified, its value is assumed to be zero.\ntranslateX\n\ntransform:  translateX(tx)       \/* see &lt;length&gt; for possible values *\/\nTranslates the element by the given amount along the X axis.\ntranslateY\n\ntransform:  translateY(ty)       \/* see &lt;length&gt; for possible values *\/\nTranslates the element by the given amount along the Y axis.\nmatrix\n\ntransform:  matrix(a, c, b, d, tx, ty)\n\n\/* Where a, b, c, d build the transformation matrix \n   &#9484;     &#9488; \n   &#9474; a b &#9474;\n   &#9474; c d &#9474;\n   &#9492;     &#9496;\n   and tx, ty are the translate values.  *\/\n\nSpecifies a 2D transformation matrix comprised of the specified six values. This is the equivalent to applying the transformation matrix [a b c d tx ty].\nNote: Gecko (Firefox) accepts a \n&lt;length&gt;\n value for tx and ty. Webkit (Safari, Chrome) and Opera currently support a unitless &lt;number&gt;\n for tx and ty.\nLive Examples\n\n background: gold;  width: 30em;\n\n    -moz-transform: matrix(1, -0.2, 0, 1, 0, 0);\n -webkit-transform: matrix(1, -0.2, 0, 1, 0, 0);\n      -o-transform: matrix(1, -0.2, 0, 1, 0, 0);\n     -ms-transform: matrix(1, -0.2, 0, 1, 0, 0);\n         transform: matrix(1, -0.2, 0, 1, 0, 0);\n\n\n background: wheat;\n max-width: intrinsic;\n\n    -moz-transform: matrix(1, 0, 0.6, 1, 15em, 0);\n -webkit-transform: matrix(1, 0, 0.6, 1,  250, 0);\n      -o-transform: matrix(1, 0, 0.6, 1,  250, 0);\n     -ms-transform: matrix(1, 0, 0.6, 1,  250, 0);\n         transform: matrix(1, 0, 0.6, 1,  250, 0);\n\nSee also\n Examples of linear transformation matrices Wikipedia Coordinate transformation matrices mathamazement.com Microsoft's matrix filter MSDN\n\nLive Examples\n\n background: gold;  width: 30em;\n\n    -moz-transform: matrix(1, -0.2, 0, 1, 0, 0);\n -webkit-transform: matrix(1, -0.2, 0, 1, 0, 0);\n      -o-transform: matrix(1, -0.2, 0, 1, 0, 0);\n     -ms-transform: matrix(1, -0.2, 0, 1, 0, 0);\n         transform: matrix(1, -0.2, 0, 1, 0, 0);\n\n\n background: wheat;\n max-width: intrinsic;\n\n    -moz-transform: matrix(1, 0, 0.6, 1, 15em, 0);\n -webkit-transform: matrix(1, 0, 0.6, 1,  250, 0);\n      -o-transform: matrix(1, 0, 0.6, 1,  250, 0);\n     -ms-transform: matrix(1, 0, 0.6, 1,  250, 0);\n         transform: matrix(1, 0, 0.6, 1,  250, 0);\n\nSee also\n Examples of linear transformation matrices Wikipedia Coordinate transformation matrices mathamazement.com Microsoft's matrix filter MSDN\n\nrotate\n\ntransform:  rotate(angle);       \/* an &lt;angle&gt;, e.g.  rotate(30deg) *\/\nRotates the element clockwise around its origin (as specified by the transform-origin\n property) by the specified angle. The operation corresponds to the matrix [cos(angle) sin(angle) -sin(angle) cos(angle) 0 0].\nscale\n\ntransform:  scale(sx[, sy]);     \/* one or two unitless &lt;number&gt;s, e.g.  scale(2.1,4) *\/\nSpecifies a 2D scaling operation described by [sx, sy]. If sy isn't specified, it is assumed to be equal to sx.\nscaleX\n\ntransform:  scaleX(sx);          \/* a unitless &lt;number&gt;, e.g.  scaleX(2.7) *\/\nSpecifies a scale operation using the vector [sx, 1].\nscaleY\n\ntransform:  scaleY(sy)           \/* a unitless &lt;number&gt;, e.g.  scaleY(0.3) *\/\nSpecifies a scale operation using the vector [1, sy].\nskew\n\ntransform:  skew(ax[, ay])       \/* one or two &lt;angle&gt;s, e.g.  skew(30deg,-10deg) *\/\nSkews the element around the X and Y axes by the specified angles. If ay isn't provided, no skew is performed on the Y axis.\nskewX\n\ntransform:  skewX(angle)         \/* an &lt;angle&gt;, e.g.  skewX(-30deg) *\/\nSkews the element around the X axis by the given angle.\nskewY\n\ntransform:  skewY(angle)         \/* an &lt;angle&gt;, e.g.  skewY(4deg) *\/\nSkews the element around the Y axis by the given angle.\ntranslate\n\ntransform:  translate(tx[, ty])  \/* one or two &lt;length&gt; values *\/\nSpecifies a 2D translation by the vector [tx, ty]. If ty isn't specified, its value is assumed to be zero.\ntranslateX\n\ntransform:  translateX(tx)       \/* see &lt;length&gt; for possible values *\/\nTranslates the element by the given amount along the X axis.\ntranslateY\n\ntransform:  translateY(ty)       \/* see &lt;length&gt; for possible values *\/\nTranslates the element by the given amount along the Y axis.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 3.5 (1.9.1)\n\n-moz yes \n-webkit 9.0\n-ms 10.5\n-o 3.1\n-webkit   3D Support 10.0\n-moz 12.0\n-webkit 10.0\n-ms no 4.0\n-webkit   \n\n    Feature iOS Safari Opera Mini Opera Mobile Android Browser   Basic support ? ? ? ?   \n\nNotes\nInternet Explorer 5.5 or later supports a proprietary Matrix Filter which can be used to achieve the similar effect.\nNotes\nInternet Explorer 5.5 or later supports a proprietary Matrix Filter which can be used to achieve the similar effect.\nSpecifications\n \nCSS 2D Transforms Module Level 3: transformWD\n\nSee also\n transform-origin\n Using CSS transforms More info on CSS3 Rotation \/ Matrix Filter issues in the comments on Paul Irish's blog. A cross-browser 2D transform plugin for jQuery\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/transform-origin","title":"transform-origin","description":"Summary\nThe transform-origin CSS property lets you modify the origin for transformations of an element. For example, the transform-origin of the rotate() function is the centre of rotation. (This property is applied by first translating the element by the negated value of the property, then applying the element's transform, then translating by the property value.)\n Initial value\n: 50% 50% Applies to: all block level and inline level elements Inherited\n: no Percentages: refer to the size of the box itself Media: visual\n  Computed value\n: for &lt;length&gt; the absolute value, otherwise a percentage\n\nSyntax\n\ntransform-origin:  [ &lt;percentage&gt; | &lt;length&gt; | left | center | right ]\n                   [ &lt;percentage&gt; | &lt;length&gt; | top | center | bottom ] ?\n\n\ntransform-origin:  [ left | center | right ] || [ top | center | bottom ]\n\nValues\nAccepts one or two values.\n One single value sets the horizontal position, the vertical position is set to 50%. Two values apply first to the horizontal and second to the vertical position.\n\nCombinations are allowed of keyword, \n&lt;length&gt;\n, or &lt;percentage&gt;\n values, but if keywords are mixed with other values, left and right may only be used as the first value, and top and bottom may only be used as the second value. Negative positions are allowed.\n &lt;percentage&gt; With a value pair of 0% 0%, (or just 0 0) the transform-origin is the upper left corner of the box. A value pair of 100% 100% places the transform-origin to the lower right corner. With a value pair of 14% 84%, the point 14% across and 84% down the box is the transform-origin. &lt;length&gt; With a value pair of e.g. 2cm 1cm, the transform-origin is placed 2cm to the right and 1cm below the upper left corner of the element. top left | left top Same as 0 0 top | top center | center top Same as 50% 0 right top | top right Same as 100% 0 left | left center | center left Same as 0 50% center | center center Same as 50% 50% (default value) right | right center | center right Same as 100% 50% bottom left | left bottom Same as 0 100% bottom | bottom center | center bottom Same as 50% 100% bottom right | right bottom Same as 100% 100%\n\nValues\nAccepts one or two values.\n One single value sets the horizontal position, the vertical position is set to 50%. Two values apply first to the horizontal and second to the vertical position.\n\nCombinations are allowed of keyword, \n&lt;length&gt;\n, or &lt;percentage&gt;\n values, but if keywords are mixed with other values, left and right may only be used as the first value, and top and bottom may only be used as the second value. Negative positions are allowed.\n &lt;percentage&gt; With a value pair of 0% 0%, (or just 0 0) the transform-origin is the upper left corner of the box. A value pair of 100% 100% places the transform-origin to the lower right corner. With a value pair of 14% 84%, the point 14% across and 84% down the box is the transform-origin. &lt;length&gt; With a value pair of e.g. 2cm 1cm, the transform-origin is placed 2cm to the right and 1cm below the upper left corner of the element. top left | left top Same as 0 0 top | top center | center top Same as 50% 0 right top | top right Same as 100% 0 left | left center | center left Same as 0 50% center | center center Same as 50% 50% (default value) right | right center | center right Same as 100% 50% bottom left | left bottom Same as 0 100% bottom | bottom center | center bottom Same as 50% 100% bottom right | right bottom Same as 100% 100%\n\nExamples\nSee Using CSS transforms for examples.\nLive Examples\n   transform: none;  &nbsp;    transform: rotate(30deg);  &nbsp;    transform: rotate(30deg); transform-origin: 0 0;  &nbsp;    transform: rotate(30deg); transform-origin: 100% 100%;  &nbsp;    transform: rotate(30deg); transform-origin: -10em -30em;  &nbsp;    transform: scale(1.9);  &nbsp;    transform: scale(1.9); transform-origin: 0 0;  &nbsp;    transform: scale(1.9); transform-origin: 100% -30%;  &nbsp;    transform: skew(50deg);  &nbsp;    transform: skew(50deg); transform-origin: 0 0;  &nbsp;    transform: skew(50deg); transform-origin: 100% 100%;  &nbsp;   \n\nLive Examples\n   transform: none;  &nbsp;    transform: rotate(30deg);  &nbsp;    transform: rotate(30deg); transform-origin: 0 0;  &nbsp;    transform: rotate(30deg); transform-origin: 100% 100%;  &nbsp;    transform: rotate(30deg); transform-origin: -10em -30em;  &nbsp;    transform: scale(1.9);  &nbsp;    transform: scale(1.9); transform-origin: 0 0;  &nbsp;    transform: scale(1.9); transform-origin: 100% -30%;  &nbsp;    transform: skew(50deg);  &nbsp;    transform: skew(50deg); transform-origin: 0 0;  &nbsp;    transform: skew(50deg); transform-origin: 100% 100%;  &nbsp;   \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 3.5 (1.9.1)\n\n-moz yes \n-webkit 9.0\n-ms 10.5\n-o 3.1\n-webkit  \n\n\n\n   Feature iOS Safari Opera Mini Opera Mobile Android Browser   Basic support ? ? ? ?  \n\n\nNotes\nInternet Explorer 5.5 or later supports a proprietary Matrix Filter which can be used to achieve the similar effect.\nNotes\nInternet Explorer 5.5 or later supports a proprietary Matrix Filter which can be used to achieve the similar effect.\nSpecifications\n \nCSS 2D Transforms Module Level 3: transform-originWD\n\nSee also\n transform\n Using CSS transforms\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/transform-style","title":"transform-style","description":"Summary\nThe transform-style CSS property determines if the children of the element are positioned in the 3D-space or are flattened in the plane of the element.\nIf flattened, the children will not exist on their own in the 3D-space.\nAs this property is not inherited, it must be set for all non-leaf descendants of the element.\n Initial value\n : flat Applies to : block and inline elements Inherited\n: no Media: visual\n  Computed value\n: same as specified value.\nSyntax\ntransform-style: preserve-3d              or\ntransform-style: flat\n\nwhere :\n&nbsp;\n preserve-3d Indicates that the children of the element should be positioned in the 3D-space. flat Indicates that the children of the element are lying in the plane of the element itself. \nExamples\nSpecifications\n   Specification Status Comment     CSS 3D Transforms Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 12\n-webkit 10.0 (10)\n\n-moz 10\n-ms -- (Supported)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 3.0\n-webkit 10.0 (10)\n\n-moz ? -- (Supported)\n-webkit   \n\nSee also\n CSS Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/transition","title":"transition","description":"Summary\nThe -moz-transition CSS property is a shorthand property for -moz-transition-property\n, -moz-transition-duration\n, -moz-transition-timing-function\n, and -moz-transition-delay\n.\nNote: This implementation of the CSS transition-duration property is based on a draft specification; the syntax is subject to change.\n Initial value\n: -moz-transition is a shorthand property, so it does not technically have an initial value, but the properties for which it is shorthand have the following initial values:  -moz-transition-property: all; -moz-transition-duration: 0s; -moz-transition-timing-function: ease; -moz-transition-delay: 0s;   Applies to: all elements, :before\n and :after\n pseudo elements Inherited\n:no Media: interactive\n\n Computed value\n: as specified\n\nSyntax\n\n-moz-transition:  [ &lt;transition-property&gt; || &lt;transition-duration&gt; || &lt;transition-timing-function&gt; || &lt;transition-delay&gt; ]\n\nSee When property value lists are of different lengths for details on how things are handled when lists of property values aren't the same length. In short, extra transition descriptions beyond the number of properties actually being animated are ignored.\nExamples\nThere are several more examples of CSS transitions included in the main CSS&nbsp;transitions article.\nSpecifications\n CSS Transitions Module Level 3 (Working Draft)\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 (-webkit-) 4.0 (2.0)\n (-moz-) - 10.5 3.0 (-webkit-)  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n CSS transitions -moz-transition-property\n -moz-transition-duration\n -moz-transition-timing-function\n -moz-transition-delay\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/transition-delay","title":"transition-delay","description":"Summary\nThe -moz-transition-delay CSS property specifies the amount of time to wait between a change being requested to a property that is to be transitioned and the start of the transition effect.\nA value of 0s (or 0ms) indicates that the property will begin to animate its transition immediately when the value changes; positive values will delay the start of the transition effect for the corresponding number of seconds. Negative values cause the transition to begin immediately, but to cause the transition to seem to begin partway through the animation effect.\nYou may specify multiple delays; each delay will be applied to the corresponding property as specified by the -moz-transition-property\n property.\nNote: This implementation of the CSS transition-delay property is based on a draft specification; the syntax is subject to change.\n Initial value\n: 0s Applies to: all elements, :before\n and :after\n pseudo elements Inherited\n:no Media: interactive\n\n Computed value\n: as specified\n\nSyntax\n\n-moz-transition-delay: &lt;time&gt;[, &lt;time&gt;]*\n\nValues\n time The time (in seconds or milliseconds) to wait between a property's value changing and the start of the animation effect. A time in seconds is represented by a number followed by &quot;s&quot;, while a time in milliseconds is a number followed by &quot;ms&quot;.\n\nExamples\nThere are several examples of CSS transitions included in the main CSS&nbsp;transitions article.\nSpecifications\n CSS Transitions Module Level 3 (Working Draft)\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ---   Firefox (Gecko) 4.0 (2.0)   Opera ---   Safari (WebKit) nightly, don't know version   \n\nSee also\n CSS transitions -moz-transition\n -moz-transition-property\n -moz-transition-duration\n -moz-transition-timing-function\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/transition-duration","title":"transition-duration","description":"Summary\nThe -moz-transition-duration CSS property specifies the number of seconds or milliseconds a transition animation should take to complete. By default, the value is 0s, meaning that no animation will occur.\nYou may specify multiple durations; each duration will be applied to the corresponding property as specified by the -moz-transition-property\n property.\nNote: This implementation of the CSS transition-duration property is based on a draft specification; the syntax is subject to change.\n Initial value\n: 0s Applies to: all elements, :before\n and :after\n pseudo elements Inherited\n:no Media: interactive\n\n Computed value\n: as specified\n\nSyntax\n\n-moz-transition-duration: &lt;time&gt;[, &lt;time&gt;]*\n\nValues\n time The time (in seconds or milliseconds) the transition from the old value of a property to the new value should take. A time in seconds is represented by a number followed by &quot;s&quot;, while a time in milliseconds is a number followed by &quot;ms&quot;.\n\nExamples\nThere are several examples of CSS transitions included in the main CSS&nbsp;transitions article.\nSpecifications\n CSS Transitions Module Level 3 (Working Draft)\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ---   Firefox (Gecko) 4.0? (2.0)   Opera ---   Safari (WebKit) nightly, don't know version  \n\nSee also\n CSS transitions -moz-transition\n -moz-transition-property\n -moz-transition-timing-function\n -moz-transition-delay\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/transition-property","title":"transition-property","description":"Summary\nThe -moz-transition-property CSS property is used to specify the names of CSS properties to which a transition effect should be applied.\nNote: The set of properties that can be animated is subject to change; as such, you should avoid including any properties in the list that don't currently animate, because someday they might, causing unexpected results.\nIf you specify a shorthand property (for example, background\n, all of its longhand sub-properties that can be animated will be.\nNote: This implementation of the CSS transition-property property is based on a draft specification; the syntax is subject to change.\n Initial value\n: all\n Applies to: all elements, :before\n and :after\n pseudo elements Inherited\n:no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\n-moz-transition-property: none |&nbsp;all |&nbsp;[&lt;property-name&gt;][, &lt;property-name&gt;]*\n\nValues\n none No properties will transition. all All properties that can have an animated transition will do so. property-name A property to which a transition effect should be applied when its value changes.\n\nExamples\nThere are several examples of CSS transitions included in the main CSS&nbsp;transitions article.\nSpecifications\n CSS Transitions Module Level 3 (Working Draft)\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ---   Firefox (Gecko) 4.0 (2.0)   Opera ---   Safari (WebKit) nightly, don't know version  \n\nSee also\n CSS transitions -moz-transition\n -moz-transition-duration\n -moz-transition-timing-function\n -moz-transition-delay\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/transition-timing-function","title":"transition-timing-function","description":"Summary\nThe transition-timing-function CSS property is used to describe how the intermediate values of the CSS&nbsp;properties being affected by a transition effect are calculated. This in essence lets you establish an acceleration curve, so that the speed of the transition can vary over its duration.\nThis acceleration curve is defined using one &lt;timing-function&gt;\n  for each property to be transitioned.&nbsp;\nNote: This implementation of the CSS transition-timing-function is based on a draft specification and is therefore experimental : the syntax is subject to change.\n Initial value\n: ease Applies to: all elements, :before\n and :after\n pseudo elements Inherited\n:no Media: interactive\n\n Computed value\n: as specified\nSyntax\n\n-moz-transition-timing-function: &lt;timing-function&gt; [, &lt;timing-function&gt;]*\n\nwhere:\n Each &lt;timing-function&gt;\n  represents the timing function to link to the corresponding property to transition, as defined in transition-property\n.\nExamples\nThere are several examples of CSS transitions included in the main CSS&nbsp;transitions article.\nSpecifications\n CSS Transitions Module Level 3 (Working Draft)\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ---   Firefox (Gecko) 4.0 (2.0) \n-moz   Opera ---   Safari (WebKit) 3.1 \n-webkit  \n\nSee also\n CSS transitions transition\n transition-property\n transition-duration\n transition-delay\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/unicode-bidi","title":"unicode-bidi","description":"Syntax\nunicode-bidi: [ normal | embed | [ isolate || bidi-override ] | plaintext | inherit ] ;\n\nValues\n normal&nbsp; The element does not offer a additional level of embedding with respect to the bidirectional algorithm. For inline elements implicit reordering works across element boundaries. embed If the element is inline, this value opens an additional level of embedding with respect to the bidirectional algorithm. The direction of this embedding level is given by the direction\n property. bidi-override&nbsp; For inline elements this creates an override. For block container elements this creates an override for inline-level descendants not within another block container element. This means that inside the element, reordering is strictly in sequence according to the direction\n property; the implicit part of the bidirectional algorithm is ignored. isolate This keyword indicates that the element's container directionality should be calculated without considering the content of this element. The element is therefore isolated from its siblings. When applying its bidirectional-resolution algorithm, its container element treats it as one or several U+FFFC Object Replacement Character, i.e. like an image. This keyword can be combined with bidi-override. plaintext This keyword makes the elements directionality calculated without considering its parent bidirectional state or the value of the direction\n property. The directionality is calculated using the P2 and P3 rules of the Unicode Bidirectional Algorithm. This value allows to display data which has already formatted using a tool following the Unicode Bidirectional Algorithm.\nExamples\n\n.bible-quote {\n&nbsp;&nbsp;direction: rtl;   unicode-bidi: embed;\n} \n\nSpecification\n   Specification Status Comment     CSS Writing Modes Level 3 Working Draft\n Added plaintext and isolate keywords   CSS 2 Level 1 Recommendation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2.0 1.0 (1.7 or earlier)\n 5.5 9.2 1.3   isolate 16 10.0 (10)\n [1] -- -- --   plaintext -- 10.0 (10)\n [2] -- -- --   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 1.0 (1.0)\n 6 8 3.1   isolate -- 10.0 (10)\n [3] -- -- --   plaintext -- 10.0 (10)\n [4] -- -- --   \n\nSee also\ndirection\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/white-space","title":"white-space","description":"Summary\nThe white-space CSS property is used to to describe how whitespace inside the element is handled.\n Initial value\n: normal\n Applies to: all elements Inherited\n: yes Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nwhite-space:  normal | pre | nowrap | pre-wrap | pre-line | inherit\n\nValues\n normal Sequences of whitespace are collapsed. Newline characters in the source are handled as other whitespace. Breaks lines as necessary to fill line boxes. pre Sequences of whitespace are preserved, lines are only broken at newline characters in the source. nowrap Collapses whitespace as for normal, but suppresses line breaks (text wrapping) within text. pre-wrap \nNew in Firefox 3\n Sequences of whitespace are preserved. Lines are only broken at newline characters in the source and as necessary to fill line boxes.  For backward compatibility with Firefox 2, you may wish to also include -moz-pre-wrap, which does the same thing in older versions of Firefox but is ignored in Firefox 3.5 and later. pre-line \nNew in Firefox 3.5\n Sequences of whitespace are collapsed. Lines are broken at newlines in the source and as necessary to fill line boxes.\n\nThe following table summarizes the behavior of various white-space values:\n   &nbsp; New lines Spaces and tabs Text wrapping     normal Collapse Collapse Wrap   pre Preserve Preserve No wrap   nowrap Collapse Collapse No wrap   pre-wrap Preserve Preserve Wrap   pre-line Preserve Collapse Wrap  \n\nExamples\n\ncode { white-space: pre; }\nNotes\nwhite-space:pre-line is not implemented in Firefox prior to version 3.5 (Gecko 1.9.1).\nBrowser compatibility\n   Browser Lowest version Support of   Internet Explorer 5.5 normal | nowrap   5.5 [*]   6.0 normal | pre | nowrap   8.0 normal | pre | nowrap | pre-wrap | pre-line   Firefox (Gecko) 1.0 (1.0) normal | pre | nowrap | -moz-pre-wrap   3.0 (1.9) normal | pre | nowrap | pre-wrap | -moz-pre-wrap   3.5 (1.9.1) normal | pre | nowrap | pre-wrap | pre-line   Opera 4.0 normal | pre | nowrap   8.0 normal | pre | nowrap | pre-wrap   9.5 normal | pre | nowrap | pre-wrap | pre-line   Safari (WebKit) 1.0 (85) normal | pre | nowrap   3.0 (522) normal | pre | nowrap | pre-wrap | pre-line  \n\n[*] Internet Explorer 5.5+ supports word-wrap\n: break-word;\nThe following code allows line breaking inside pre elements:\n\npre {\n      word-wrap: break-word;      \/* IE 5.5-7 *\/\n      white-space: -moz-pre-wrap; \/* Firefox 1.0-2.0 *\/\n      white-space: pre-wrap;      \/* current browsers *\/\n}\nSpecifications\n CSS 2.1 Text #white-space\n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/vertical-align","title":"vertical-align","description":"Summary\nThe vertical-align property specifies the vertical alignment of an inline or table-cell element.\n Initial value\n: baseline\n Applies to: inline elements and table cells Inherited\n: No Media: visual\n  Computed value\n:\n\nSyntax\nvertical-align: baseline | sub | super | text-top | text-bottom | middle | top | bottom | &lt;percentage&gt; | &lt;length&gt; | inherit\n\nValues (for inline elements)\nMost of the values vertically align the element relative to its parent element:\n baseline&nbsp; Align the baseline of the element with the baseline of its parent. sub&nbsp; Align the baseline of the element with the subscript-baseline of its parent. super&nbsp; Align the baseline of the element with the superscript-baseline of its parent. text-top&nbsp; Align the top of the element with the top of the parent element's font. text-bottom&nbsp; Align the bottom of the element with the bottom of the parent element's font. middle&nbsp; Align the middle of the element with the middle of lowercase letters in the parent. &lt;length&gt;&nbsp; Align the baseline of the element at the given length above the baseline of its parent. &lt;percentage&gt;&nbsp; like &lt;length&gt; values, with the percentage being a percent of the line-height\n property\n\nFor elements that do not have a baseline, the bottom margin edge is used instead.\nHowever, two values vertically align the element relative to the entire line rather than relative to its parent:\n top&nbsp; Align the top of the element and its descendants with the top of the entire line. bottom&nbsp; Align the bottom of the element and its descendants with the bottom of the entire line.\n\nNegative values are allowed.\nValues (for table cells)\n baseline (and sub, super, text-top, text-bottom, &lt;length&gt;, and &lt;percentage&gt;)&nbsp; Align the baseline of the cell with the baseline of all other cells in the row that are baseline-aligned. top Align the top padding edge of the cell with the top of the row. middle Center the padding box of the cell within the row. bottom Align the bottom padding edge of the cell with the bottom of the row.\n\nNegative values are allowed.\nExamples\n\nimg {\n\tvertical-align: bottom;\n}\n\nNotes\nSpecifications\n CSS 1 CSS 2.1\n\nBrowser compatibility\n   Browser lowest version   Internet Explorer 4.0   Firefox (Gecko) 1.0 (1.0)   Opera 4.0   Safari (WebKit) 1.0 (85)  \n\nSee also\nline-height\n, text-align\n, margin\n (auto)\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/widows","title":"widows","description":"Browser Compatibility\n   Browser Lowest version   Internet Explorer IE 8   Firefox (Gecko) --   Opera 9.2    Safari | Chrome | WebKit   --   \n\n&nbsp;\nSee Also\n orphans\n Paged Media\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/visibility","title":"visibility","description":"Summary\nThe visibility CSS property is used for two things:\n The hidden value hides an element but leaves space where it would have been. The collapse value hides rows or columns of a table. It also collapses XUL&nbsp;elements.\n\n Initial value\n: visible\n Applies to: All elements Inherited\n: Yes Media: visual\n  Computed value\n: As specified\n\nSyntax\n\nvisibility:  visible | hidden | collapse | inherit\n\n\nValues\n visible Default value, the box is visible. hidden The box is invisible (fully transparent, nothing is drawn), but still affects layout.&nbsp; Descendants of the element will be visible if they have visibility:visible (this doesn't work in IE up to version 7). collapse For table rows, columns, column groups, and row groups the row(s) or column(s) are hidden and the space they would have occupied is (as if display\n: none were applied to the column\/row of the table). However, the size of other rows and columns is still calculated as though the cells in the collapsed row(s) or column(s) are present. This was designed for fast removal of a row\/column from a table without having to recalculate widths and heights for every portion of the table. For XUL&nbsp;elements, the computed size of the element is always zero, regardless of other styles that would normally affect the size, although margins still take effect. For other elements, collapse is treated the same as hidden.\n\nExamples\n\np        { visibility: hidden; }    \/* paragraphs won't be visible *\/\np.showme { visibility: visible; }   \/* except of these with class showme *\/\ntr.col   { visibility: collapse; }  \/* table rows with class col will collapse *\/\n\nNotes\nThe support for visibility:collapse is missing or partially incorrect in some modern browsers. In many cases it may not be correctly treated like visibility:hidden on elements other than table rows and columns.\nvisibility:collapse may change the layout of a table if the table has nested tables within the cells that are collapsed, unless visibility:visible is specified explicitly on nested tables.\nBrowser compatibility\n   Browser Lowest version   Internet Explorer 4.0   Firefox (Gecko) 1.0 (1.0)   Opera 4.0   Safari (WebKit) 1.0 (85)  \n\nSpecifications\n CSS 2.1 Visual effects #visibility\n\nSee also\ndisplay\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/width","title":"width","description":"Summary\nThe width CSS property specifies the width of the content area of an element. The content area is inside the padding, border, and margin of the element.\n Initial value\n: auto\n Applies to: block level and replaced elements Inherited\n: no Percentages: refer to the width of the containing block Media: visual\n   Computed value\n:&nbsp; the percentage or auto as specified or the absolute length \nSyntax\n\nwidth:  &lt;length&gt; | &lt;percentage&gt; | auto | inherit | -moz-max-content | -moz-min-content | -moz-fit-content | -moz-available\nValues\n &lt;length&gt; See \n&lt;length&gt;\n for possible units. &lt;percentage&gt; Specified as a &lt;percentage&gt;\n of containing block's width. auto The browser will calculate and select a width for the specified element. Mozilla Extensions -moz-max-content \nNew in Firefox 3\n The intrinsic preferred width. -moz-min-content \nNew in Firefox 3\n The intrinsic minimum width. -moz-available \nNew in Firefox 3\n The containing block width minus horizontal margin, border and padding. -moz-fit-content \nNew in Firefox 3\n The larger of:  the intrinsic minimum width the smaller of the intrinsic preferred width and the available width  \n\nMozilla Extensions -moz-max-content \nNew in Firefox 3\n The intrinsic preferred width. -moz-min-content \nNew in Firefox 3\n The intrinsic minimum width. -moz-available \nNew in Firefox 3\n The containing block width minus horizontal margin, border and padding. -moz-fit-content \nNew in Firefox 3\n The larger of:  the intrinsic minimum width the smaller of the intrinsic preferred width and the available width  \nExamples\n\nView Live Examples\n\ntable { width: 100%; }\n\nimg   { width: 200px; }\n\nform  { width: auto; }\n\np     { width: 40em; }\n\n\n\np { background: gold }\n\nThe Mozilla community produces a lot of great software.\n\np { background: lightgreen;\n    width: intrinsic;         \/* Safari\/WebKit *\/\n    width: -moz-max-content;  \/* Firefox\/Gecko *\/\n  }\n\nThe Mozilla community produces a lot of great software.\n\np { background: lightblue;  max-width: -moz-min-content; }\n\nThe Mozilla community produces a lot of great software.\nNotes\nThe min-width\n and max-width\n properties override width\n.\nSpecifications\n CSS 2.1 #width\n\nBrowser compatibility\n   Browser Lowest Version intrinsic width intrinsic minimum width   Internet Explorer 4.0 --- --- --- ---   Firefox (Gecko) 1.0 (1.0) 3.0 (1.9) -moz-max-content -moz-fit-content 3.0 (1.9) -moz-min-content   Opera 3.5 --- --- --- ---   Safari (WebKit) 1.0 (85) 2.0 (412) ? intrinsic --- ---  \n\nSee also\nbox model, height\n, box-sizing\n, min-width\n, max-width\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/word-spacing","title":"word-spacing","description":"Summary\nThe word-spacing CSS property specifies spacing behavior between words.\n Initial value\n: normal\n Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: for normal the value 0; otherwise the absolute length\n\nSyntax\nword-spacing:  normal | &lt;length&gt;\n\nValues\nnormal&nbsp; The normal inter-word space, as defined by the current font and\/or the UA.\n&lt;length&gt;&nbsp; \n See \n&lt;length&gt;\n value for possible units.\nExamples\np { word-spacing: 1em; }\n\nSpecifications\n CSS 2.1 Text #word-spacing\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer 6.0   Firefox (Gecko) 1.0 (1.0)   Opera 3.5   Safari (WebKit) 1.0 (85)  \n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n "},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/word-wrap","title":"word-wrap","description":"Summary\nThe word-wrap CSS property is used to to specify whether or not the browser is allowed to break lines within words in order to prevent overflow when an otherwise unbreakable string is too long to fit.\n Initial value\n: normal\n Applies to: all elements Inherited\n: yes Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nword-wrap:  normal | break-word\n\nValues\n normal Lines may only break at normal word break points. break-word Unbreakable words may be broken at arbitrary points if there are no otherwise acceptable break points in the line.\n\nExamples\n\np { width:13em; background:gold; }\n\nFStrPrivFin&Auml;ndG (Gesetz zur &Auml;nderung des Fernstra&szlig;enbauprivatfinanzierungsgesetzes und stra&szlig;enverkehrsrechtlicher Vorschriften)\n\np { width:13em; background:gold; word-wrap:break-word; }\n\nFStrPrivFin&Auml;ndG (Gesetz zur &Auml;nderung des Fernstra&szlig;enbauprivatfinanzierungsgesetzes und stra&szlig;enverkehrsrechtlicher Vorschriften)\nSpecifications\n CSS 3 Text Working draft MSDN Microsoft library word-wrap\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   word-wrap 3.5 (1.9.1)\n 1.0 5.5 10.5 1.0  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE Mobile Opera Mobile Safari Mobile   word-wrap 1.0 (1.9.1)\n 1.0 ? ? 1.0  \n\n\n word-wrap:break-word can be used to work around lack of pre{white-space:pre-wrap} support in IE 5.5-7. See white-space\n for an example. IE8 introduced -ms-word-wrap as a synonym for word-wrap. Don't use the -ms- prefix.\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/z-index","title":"z-index","description":"Summary\nThe z-index CSS property specifies the z-order of an element and its descendants. When elements overlap, z-order determines which one covers the other. An element with a larger z-index generally covers an element with a lower one.\nFor a positioned box, the z-index property specifies:\n The stack level of the box in the current stacking context. Whether the box establishes a local stacking context.\n\n Initial value\n: auto\n Applies to: positioned elements\n Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nz-index:  auto | &lt;integer&gt; | inherit\nValues\n auto The box does not establish a new local stacking context. The stack level of the generated box in the current stacking context is the same as its parent's box. &lt;integer&gt; This integer is the stack level of the generated box in the current stacking context. The box also establishes a local stacking context in which its stack level is 0. This means that the z-indexes of descendants are not compared to the z-indexes of elements outside this element. \n\nExamples\nposition:relative; z-index:1; position:absolute; z-index:3;\nleft:20em; top:-25px; opacity:0.9 position:absolute; z-index:2; left:60px; top:3em;\nNotes\nNegative z-index values are supported correctly starting in Gecko 1.9 \/ Firefox 3. Previous versions implemented the CSS 2 behavior, not the CSS 2.1 behavior that is compatible with other browsers.\nSpecifications\n CSS 2.1 Visual formatting #z-index\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer 4.0   Firefox (Gecko) 1.0 (1.0)   Opera 4.0   Safari (WebKit) 1.0 (85)  \n\nSee also\n CSS position\n property Understanding CSS z-indexes\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/angle","title":"angle","description":"Examples\n     A right angle: 90deg = 100grad = 0.25turn &asymp; 1.0708rad     A flat angle: 180deg = 200grad = 0.5turn &asymp; 2.1416rad     A right angle (towards the left): -90deg = -100grad = -0.25turn &asymp; -1.0708rad    A null angle: 0deg = 0grad = 0turn = 0rad  \n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2 (528.17) 3.6 (1.9.2) 9.0 no 4.0 (528.17)   turn unit no no 9.0 no no   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? yes ? no ?   turn unit no no ? no no   \n\n See also  CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n  &nbsp; \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/auto","title":"auto","description":"Summary\nSignifies a value that is to be automatically computed by a useragent.&nbsp; The specific effects of auto depend on the property to which it is applied as its value.\nUsed in\n overflow\n cursor\n width\n marker-offset\n margin\n margin-* (left|bottom|top|right|start|end) bottom\n left\n table-layout\n z-index\n -moz-column-width\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/counter","title":"counter","description":"Specifications\nhttp:\/\/www.w3.org\/TR\/CSS21\/syndata.html#counter"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/color_value","title":"color value","description":"Summary\nThe &lt;color&gt; CSS data type denotes a color in the sRGB color space. A color can be described using a keyword, using the RGB cubic-coordinate system (via the #-hexadecimal or the rgb() and rgba() functional notations) or using the HSL cylindrical-coordinate system (via the hsl() and hsla() functional notations).\nAssociated with the color in the sRGB space, a &lt;color&gt; value also consists of an alpha-channel coordinate, transparency value, indicating how the color should composite with its background color.\nThough CSS color values are precisely defined, they may appear differently on an output device. Most of them are not calibrated, and some browsers do not support output devices' color profile. Without these, color rendering may vary a lot.\nNote:&nbsp; The WCAG 2.0 recommendation from the W3C strongly advises web authors not to use color as the only mean to convey a specific information, action or result. Some users have problem to distinguish colors and the conveyed information may not be grasped. Of course, this doesn't prevent the usage of color, only its usage as the only mean to describe some information.\nInterpolation\nValues of the &lt;color&gt; CSS data type can be interpolated in order to perform animations or for creating &lt;gradient&gt; values. In that case they are interpolated on each of their red, green, blue components, each handled as a real, floating-point, numbers. [1] Note that interpolation of colors happens in the alpha-premultiplied sRGBA color space to prevent unexpected grey colors to appear. In animations, the speed of the interpolation is determined by the timing function associated with the animation.Values\nThere are several ways to describe a &lt;color&gt; value.\nColor Keywords\nColor keywords are case-insensitive identifiers which represent a specific color, e.g. red, blue, brown, lightseagreen. The name describes the color, though it is mostly artificial. The list of accepted values varied a lot through the different specification:\n CSS Level 1 only accepted 16 basic colors, named the VGA colors as they were taken from the set of displayable colors on VGA graphic cards. CSS Level 2 added the orange keyword. From the beginning, browsers accepted other colors, mostly the X11 named colors list as some early browsers where X11 applications, though with a few differences. SVG 1.0 was the first standard to formally defined these keywords; CSS Colors Level 3 also formally defined these keywords. They are often referred as the extended color keywords, the X11 colors, the SVG colors.\n\nThere are a few caveats to consider when using keywords:\n Except the 16 basic colors which are common with HTML, the others cannot be used in HTML. HTML will convert these unknown values with a specific algorithm which will lead to completely different colors. These keywords should only be used in SVG &amp; CSS. Unknown keywords make the CSS property invalid. Invalid properties being ignored, the color will have no effect. This is a different behavior than the one of HTML. No keyword-defined colors in CSS have any transparency, they are plain, solid colors. Several keywords denote the same colors:  darkgray \/ darkgrey darkslategray \/ darkslategrey dimgray \/ dimgrey lightgray \/ lightgrey lightslategray \/ lightslategrey gray \/ grey slategray \/ slategray   Though the names of the keywords have been taken by the usual X11 color names, the color may diverge from the corresponding system color on X11 system as these are tailored for the specific hardware by the manufacturer [2].\n\n   Specifications Color Keyword RGB cubic coordinates Live Example     CSS3 CSS2 CSS1 &nbsp; black =rgb(&nbsp; 0,&nbsp;&nbsp; 0,&nbsp;&nbsp; 0) &nbsp;   &nbsp; silver =rgb(192, 192, 192) &nbsp;   &nbsp; gray[*] =rgb(128, 128, 128) &nbsp;   &nbsp; white =rgb(255, 255, 255) &nbsp;   &nbsp; maroon =rgb(128,&nbsp;&nbsp; 0,&nbsp;&nbsp; 0) &nbsp;   &nbsp; red =rgb(255,&nbsp;&nbsp; 0,&nbsp;&nbsp; 0) &nbsp;   &nbsp; purple =rgb(128,&nbsp;&nbsp; 0, 128) &nbsp;   &nbsp; fuchsia =rgb(255,&nbsp;&nbsp; 0, 255) &nbsp;   &nbsp; green =rgb(&nbsp; 0, 128,&nbsp;&nbsp; 0) &nbsp;   &nbsp; lime =rgb(&nbsp; 0, 255,&nbsp;&nbsp; 0) &nbsp;   &nbsp; olive =rgb(128, 128,&nbsp;&nbsp; 0) &nbsp;   &nbsp; yellow =rgb(255, 255,&nbsp;&nbsp; 0) &nbsp;   &nbsp; navy =rgb(&nbsp; 0,&nbsp;&nbsp; 0, 128) &nbsp;   &nbsp; blue =rgb(&nbsp; 0,&nbsp;&nbsp; 0, 255) &nbsp;   &nbsp; teal =rgb(&nbsp; 0, 128, 128) &nbsp;   &nbsp; aqua =rgb(&nbsp; 0, 255, 255) &nbsp;   &nbsp; &nbsp; orange =rgb(255, 165,&nbsp;&nbsp; 0) &nbsp;   &nbsp; &nbsp; &nbsp; aliceblue =rgb(240, 248, 245) &nbsp;   &nbsp; antiquewhite =rgb(250, 235, 215) &nbsp;   &nbsp; aquamarine =rgb(127, 255, 212) &nbsp;   &nbsp; azure =rgb(240, 255, 255) &nbsp;   &nbsp; beige =rgb(245, 245, 220) &nbsp;   &nbsp; bisque =rgb(255, 228, 196) &nbsp;   &nbsp; blanchedalmond =rgb(255, 235, 205) &nbsp;   &nbsp; blueviolet =rgb(138,&nbsp; 43, 226) &nbsp;   &nbsp; brown =rgb(165,&nbsp; 42,&nbsp; 42) &nbsp;   &nbsp; burlywood =rgb(222, 184,&nbsp; 35) &nbsp;   &nbsp; cadetblue =rgb( 95, 158, 160) &nbsp;   &nbsp; chartreuse =rgb(127, 255,&nbsp;&nbsp; 0) &nbsp;   &nbsp; chocolate =rgb(210, 105,&nbsp; 30) &nbsp;   &nbsp; coral =rgb(255, 127,&nbsp; 80) &nbsp;   &nbsp; cornflowerblue =rgb(100, 149, 237) &nbsp;   &nbsp; cornsilk =rgb(255, 248, 220) &nbsp;   &nbsp; crimson =rgb(220,&nbsp; 20,&nbsp; 60) &nbsp;   &nbsp; darkblue =rgb(&nbsp; 0, &nbsp; 0, 139) &nbsp;   &nbsp; darkcyan =rgb(&nbsp; 0, 139, 139) &nbsp;   &nbsp; darkgoldenrod =rgb(184, 134,&nbsp; 11) &nbsp;   &nbsp; darkgray[*] =rgb(169, 169, 169) &nbsp;   &nbsp; darkgreen =rgb(&nbsp; 0, 100, &nbsp; 0) &nbsp;   &nbsp; darkgrey[*] =rgb(169, 169, 169) &nbsp;   &nbsp; darkkhaki =rgb(189, 183, 107) &nbsp;   &nbsp; darkmagenta =rgb(139, &nbsp; 0, 139) &nbsp;   &nbsp; darkolivegreen =rgb( 85, 107,&nbsp; 47) &nbsp;   &nbsp; darkorange =rgb(255, 140, &nbsp; 0) &nbsp;   &nbsp; darkorchid =rgb(153,&nbsp; 50, 204) &nbsp;   &nbsp; darkred =rgb(139, &nbsp; 0, &nbsp; 0) &nbsp;   &nbsp; darksalmon =rgb(233, 150, 122) &nbsp;   &nbsp; darkseagreen =rgb(143, 188, 143) &nbsp;   &nbsp; darkslateblue =rgb( 72,&nbsp; 61, 139) &nbsp;   &nbsp; darkslategray[*] =rgb( 47,&nbsp; 79,&nbsp; 79) &nbsp;   &nbsp; darkslategrey[*] =rgb( 47,&nbsp; 79,&nbsp; 79) &nbsp;   &nbsp; darkturquoise =rgb(&nbsp; 0, 206, 209) &nbsp;   &nbsp; darkviolet =rgb(148, &nbsp; 0, 211) &nbsp;   &nbsp; deeppink =rgb(255,&nbsp; 20, 147) &nbsp;   &nbsp; deepskyblue =rgb(&nbsp; 0, 191, 255) &nbsp;   &nbsp; dimgray[*] =rgb(105, 105, 105) &nbsp;   &nbsp; dimgrey[*] =rgb(105, 105, 105) &nbsp;   &nbsp; dodgerblue =rgb( 30, 144, 255) &nbsp;   &nbsp; firebrick =rgb(178,&nbsp; 34,&nbsp; 34) &nbsp;   &nbsp; floralwhite =rgb(255, 250, 240) &nbsp;   &nbsp; forestgreen =rgb( 34, 139,&nbsp; 34) &nbsp;   &nbsp; gainsboro =rgb(220, 220, 220) &nbsp;   &nbsp; ghostwhite =rgb(248, 248, 255) &nbsp;   &nbsp; gold =rgb(255, 215,&nbsp;&nbsp; 0) &nbsp;   &nbsp; goldenrod =rgb(218, 165,&nbsp; 32) &nbsp;   &nbsp; greenyellow =rgb(173, 255,&nbsp; 47) &nbsp;   &nbsp; grey =rgb(128, 128, 128) &nbsp;   &nbsp; honeydew =rgb(240, 255, 240) &nbsp;   &nbsp; hotpink =rgb(255, 105, 180) &nbsp;   &nbsp; indianred =rgb(205,&nbsp; 92,&nbsp; 92) &nbsp;   &nbsp; indigo =rgb( 75,&nbsp; 0, 130) &nbsp;   &nbsp; ivory =rgb(255, 255, 240) &nbsp;   &nbsp; khaki =rgb(240, 230, 140) &nbsp;   &nbsp; lavender =rgb(230, 230, 250) &nbsp;   &nbsp; lavenderblush =rgb(255, 240, 245) &nbsp;   &nbsp; lawngreen =rgb(124, 252, 0) &nbsp;   &nbsp; lemonchiffon =rgb(255, 250, 205) &nbsp;   &nbsp; lightblue =rgb(173, 216, 230) &nbsp;   &nbsp; lightcoral =rgb(240, 128, 128) &nbsp;   &nbsp; lightcyan =rgb(224, 255, 255) &nbsp;   &nbsp; lightgoldenrodyellow =rgb(250, 250, 210) &nbsp;   &nbsp; lightgray[*] =rgb(211, 211, 211) &nbsp;   &nbsp; lightgreen =rgb(144, 238, 144) &nbsp;   &nbsp; lightgrey[*] =rgb(211, 211, 211) &nbsp;   &nbsp; lightpink =rgb(255, 182, 193) &nbsp;   &nbsp; lightsalmon =rgb(255, 160, 122) &nbsp;   &nbsp; lightseagreen =rgb( 32, 178, 170) &nbsp;   &nbsp; lightskyblue =rgb(135, 206, 250) &nbsp;   &nbsp; lightslategray[*] =rgb(119, 136, 153) &nbsp;   &nbsp; lightslategrey[*] =rgb(119, 136, 153) &nbsp;   &nbsp; lightsteelblue =rgb(176, 196, 222) &nbsp;   &nbsp; lightyellow =rgb(255, 255, 224) &nbsp;   &nbsp; limegreen =rgb( 50, 205,&nbsp; 50) &nbsp;   &nbsp; linen =rgb(250, 240, 230) &nbsp;   &nbsp; mediumaquamarine =rgb(102, 205, 170) &nbsp;   &nbsp; mediumblue =rgb(&nbsp; 0,&nbsp;&nbsp; 0, 205) &nbsp;   &nbsp; mediumorchid =rgb(186,&nbsp; 85, 211) &nbsp;   &nbsp; mediumpurple =rgb(147, 112, 219) &nbsp;   &nbsp; mediumseagreen =rgb( 60, 179, 113) &nbsp;   &nbsp; mediumslateblue =rgb(123, 104, 238) &nbsp;   &nbsp; mediumspringgreen =rgb(&nbsp; 0, 250, 154) &nbsp;   &nbsp; mediumturquoise =rgb( 72, 209, 204) &nbsp;   &nbsp; mediumvioletred =rgb(199,&nbsp; 21, 133) &nbsp;   &nbsp; midnightblue =rgb( 25,&nbsp; 25, 112) &nbsp;   &nbsp; mintcream =rgb(245, 255, 250) &nbsp;   &nbsp; mistyrose =rgb(255, 228, 225) &nbsp;   &nbsp; moccasin =rgb(255, 228, 181) &nbsp;   &nbsp; navajowhite =rgb(255, 222, 173) &nbsp;   &nbsp; oldlace =rgb(253, 245, 230) &nbsp;   &nbsp; olivedrab =rgb(107, 142,&nbsp; 35) &nbsp;  \n\ntransparent Keyword\nThe transparent keyword represents a fully transparent color, i.e. the color seen will be the background color. Technically, it is a black with alpha channel at its maximum and is a shortcut for rgba(0,0,0,0).\nHistorical Note The transparent keyword wasn't a true color in CSS Level 2 (Revision 1). It was a specific keyword that could be used in place of a regular &lt;color&gt; value on two CSS properties: background\n and border\n. It was essentially added to allow to override an inherited solid colors.  With the support of opacity through alpha channels, transparent was redefined as a true color in CSS Level 3 allowing its use in any place where a &lt;color&gt; value is required, like the color\n property.[**]currentColor Keyword\nThe currentColor keyword represents the calculated value of the element's color\n property. It allows to make the color properties inherited by properties or child's element properties that do not inherit it by default.\nIt can also be used on properties that inherit the calculated value of the element's color\n property and will be equivalent to the inherit keyword on these elements, if any.\nLive Example\nThe color of the line (a color-filled div) adapts to the color of its color\n property, inherited from its parent\n &lt;div style=&quot;color:darkred&quot;&gt;\n The color of this text is the same as the one of the line:\n  &lt;div style=&quot;background:currentcolor; height:1px&quot;&gt;&lt;\/div&gt;\n Some more text.\n&lt;\/div&gt; \n The color of this text is the same as the one of the line: . Some more text.\n\n \n&lt;div style=&quot;color:blue&quot;&gt;\n The color of this text is the same as the one of the line:\n  &lt;div style=&quot;background:currentcolor; height:1px&quot;&gt;&lt;\/div&gt;\n Some more text.\n&lt;\/div&gt; \n The color of this text is the same as the one of the line: . Some more text.\n\nRGB (red-green-blue)\n Hexadecimal notation #RRGGBB and #RGB   &quot;#&quot;, followed by six hexadecimal characters (0-9, A-F). &quot;#&quot;, followed by three hexadecimal characters (0-9, A-F).  The three-digit RGB notation (#RGB) and the six-digit form (#RRGGBB) are equal. For example, #f03 and #ff0033 represent the same color. Functional Notation rgb(R,G,B) &quot;rgb&quot;, followed by three &lt;integer&gt;\n  or three &lt;percentage&gt;\n values. The integer number 255 corresponds to 100%, and to F or FF in the hexadecimal notation.\n\n\n\/* These examples all specify the same RGB color: *\/\n \n #f03\n #F03\n #ff0033\n #FF0033\n rgb(255,0,51)\n rgb(255, 0, 51)\n rgb(255, 0, 51.2) \/* ERROR! Don't use fractions, use integers *\/ \n rgb(100%,0%,20%)\n rgb(100%, 0%, 20%)\n rgb(100%, 0, 20%) \/* ERROR! Don't mix up integer and percentage notation *\/\n\nHSL (hue-saturation-lightness) hsl(H,S,L)\nThe advantage of HSL over RGB is that it is far more intuitive: you can guess at the colors you want, and then tweak. It is also easier to create sets of matching colors (by keeping the hue the same and varying the lightness\/darkness, and saturation).\nHue is represented as an angle of the color circle (i.e. the rainbow represented in a circle). This angle is given as a unitless &lt;number&gt;\n. By definition red=0=360, and the other colors are spread around the circle, so green=120, blue=240, etc. As an angle, it implicitly wraps around such that -120=240 and 480=120.\nSaturation and lightness are represented as percentages. 100% is full saturation, and 0% is a shade of grey. 100% lightness is white, 0% lightness is black, and 50% lightness is &quot;normal&quot;.\n\nhsl(0,  100%,50%)    \/* red *\/   \nhsl(30, 100%,50%)   &nbsp;             \nhsl(60, 100%,50%)   &nbsp;            \nhsl(90, 100%,50%)   &nbsp;            \nhsl(120,100%,50%)    \/* green *\/ \nhsl(150,100%,50%)   &nbsp;            \nhsl(180,100%,50%)   &nbsp;            \nhsl(210,100%,50%)   &nbsp;            \nhsl(240,100%,50%)    \/* blue *\/  \nhsl(270,100%,50%)   &nbsp;            \nhsl(300,100%,50%)   &nbsp;            \nhsl(330,100%,50%)   &nbsp;            \nhsl(360,100%,50%)    \/* red *\/   \n\nhsl(120,100%,25%)    \/* dark green *\/  \nhsl(120,100%,50%)    \/* green *\/       \nhsl(120,100%,75%)    \/* light green *\/ \n\nhsl(120,100%,50%)    \/* green *\/  \nhsl(120, 67%,50%)   &nbsp;             \nhsl(120, 33%,50%)   &nbsp;             \nhsl(120,  0%,50%)   &nbsp;             \n\nhsl(120, 60%,70%)    \/* pastel green *\/ \n\nRGBa (red-green-blue-alpha) rgba(R,G,B,a) \nExtends the RGB color model to include &quot;alpha&quot; to allow specification of the opacity of a color. a means opacity: 0=transparent; 1=opaque;\n\nrgba(255,0,0,0.1)    \/* 10% opaque red *\/  \nrgba(255,0,0,0.4)    \/* 40% opaque red *\/  \nrgba(255,0,0,0.7)    \/* 70% opaque red *\/  \nrgba(255,0,0,  1)    \/* full opaque red *\/ \n\nHSLa (hue-saturation-lightness-alpha) hsla(H,S,L,a) \nExtends the HSL color model to include &quot;alpha&quot; to allow specification of the opacity of a color. a means opacity: 0=transparent; 1=opaque;\n\nhsla(240,100%,50%,0.05)   \/* 5% opaque blue *\/   \nhsla(240,100%,50%, 0.4)   \/* 40% opaque blue *\/  \nhsla(240,100%,50%, 0.7)   \/* 70% opaque blue *\/  \nhsla(240,100%,50%,   1)   \/* full opaque blue *\/ \n\nSystem Colors\nNot all system colors are supported on all systems. \n\nDeprecated\n\n for use on public web pages.\n ActiveBorder Active window border. ActiveCaption Active window caption.&nbsp; Should be used with CaptionText foreground color. AppWorkspace Background color of multiple document interface. Background Desktop background. ButtonFace Face background color for 3-D elements that appear 3-D due to one layer of surrounding border.&nbsp; Should be used with ButtonText foreground color. ButtonHighlight The color of the border facing the light source for 3-D elements that appear 3-D due to one layer of surrounding border. ButtonShadow The color of the border away from the light source for 3-D elements that appear 3-D due to one layer of surrounding border. ButtonText Text on push buttons.&nbsp; Should be used with ButtonFace or ThreeDFace background color. CaptionText Text in caption, size box, and scrollbar arrow box.&nbsp; Should be used with ActiveCaption background color. GrayText Grayed (disabled) text. Highlight Item(s) selected in a control.&nbsp; Should be used with HighlightText foreground color. HighlightText Text of item(s) selected in a control.&nbsp; Should be used with Highlight background color. InactiveBorder Inactive window border. InactiveCaption Inactive window caption.&nbsp; Should be used with InactiveCaptionText foreground color. InactiveCaptionText Color of text in an inactive caption.&nbsp; Should be used with InactiveCaption background color. InfoBackground Background color for tooltip controls.&nbsp; Should be used with InfoText foreground color. InfoText Text color for tooltip controls.&nbsp; Should be used with InfoBackground background color. Menu Menu background.&nbsp; Should be used with MenuText or -moz-MenuBarText foreground color. MenuText Text in menus.&nbsp; Should be used with Menu background color. Scrollbar Scroll bar gray area. ThreeDDarkShadow The color of the darker (generally outer) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border. ThreeDFace The face background color for 3-D elements that appear 3-D due to two concentric layers of surrounding border.&nbsp; Should be used with ButtonText foreground color. ThreeDHighlight The color of the lighter (generally outer) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border. ThreeDLightShadow The color of the darker (generally inner) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border. ThreeDShadow The color of the lighter (generally inner) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border. Window Window background.&nbsp; Should be used with WindowText foreground color. WindowFrame Window frame. WindowText Text in windows.&nbsp; Should be used with Window background color.\n\nMozilla System Color Extensions\n -moz-ButtonDefault The border color that goes around buttons that represent the default action for a dialog box. -moz-ButtonHoverFace The background color of a button that the mouse pointer is over (which would be ThreeDFace or ButtonFace when the mouse pointer is not over it).&nbsp; Should be used with the -moz-ButtonHoverText foreground color. -moz-ButtonHoverText The text color of a button that the mouse pointer is over (which would be ButtonText when the mouse pointer is not over it).&nbsp; Should be used with the -moz-ButtonHoverFace background color. -moz-CellHighlight Background color for selected item in a tree widget.&nbsp; Should be used with -moz-CellHighlightText foreground color.&nbsp; See also -moz-html-CellHighlight. -moz-CellHighlightText Text color for a selected item in a tree.&nbsp; Should be used with -moz-CellHighlight background color.&nbsp; See also -moz-html-CellHighlightText. -moz-Combobox \nRequires Gecko 1.9.2\n Background color for comboboxes.&nbsp; Should be used with -moz-ComboboxText foreground color.&nbsp; In versions prior to 1.9.2, use -moz-Field instead. -moz-ComboboxText \nRequires Gecko 1.9.2\n Background Text color for comboboxes.&nbsp; Should be used with -moz-ComboboxText foreground color.&nbsp; In versions prior to 1.9.2, use -moz-FieldText instead. -moz-Dialog Background color for dialog boxes.&nbsp; Should be used with -moz-DialogText foreground color. -moz-DialogText Text color for dialog boxes.&nbsp; Should be used with -moz-Dialog background color. -moz-dragtargetzone -moz-EvenTreeRow \nRequires Gecko 1.9\n Background color for even-numbered rows in a tree.&nbsp; Should be used with -moz-FieldText foreground color.&nbsp; In Gecko versions prior to 1.9, use -moz-Field.&nbsp; See also -moz-OddTreeRow. -moz-Field textfield background color.&nbsp; Should be used with -moz-FieldText foreground color. -moz-FieldText textfield foreground color.&nbsp; Should be used with -moz-Field, -moz-EvenTreeRow, or -moz-OddTreeRow background colors. -moz-html-CellHighlight \nRequires Gecko 1.9\n Background color for highlighted item in HTML&nbsp;select.&nbsp; Should be used with -moz-html-CellHighlightText foreground color.&nbsp; Prior to Gecko 1.9, use -moz-CellHighlight. -moz-html-CellHighlightText \nRequires Gecko 1.9\n Background color for highlighted item in HTML&nbsp;select.&nbsp; Should be used with -moz-html-CellHighlight background color.&nbsp; Prior to Gecko 1.9, use -moz-CellHighlightText. -moz-mac-accentdarkestshadow -moz-mac-accentdarkshadow -moz-mac-accentface -moz-mac-accentlightesthighlight -moz-mac-accentlightshadow -moz-mac-accentregularhighlight -moz-mac-accentregularshadow -moz-mac-chrome-active \nRequires Gecko 1.9.1\n -moz-mac-chrome-inactive \nRequires Gecko 1.9.1\n -moz-mac-focusring -moz-mac-menuselect -moz-mac-menushadow -moz-mac-menutextselect -moz-MenuHover Background color for hovered menu item.&nbsp; Often similar to Highlight.&nbsp; Should be used with -moz-MenuHoverText or -moz-MenuBarHoverText foreground color. -moz-MenuHoverText Foreground color for hovered menu item.&nbsp; Often similar to HighlightText.&nbsp; Should be used with -moz-MenuHover background color. -moz-MenuBarText \nRequires Gecko 1.9.2\n Foreground color for text in menu bars.&nbsp; Often similar to MenuText.&nbsp; Should be used on top of Menu background. -moz-MenuBarHoverText Foreground color for hovered text in menu bars.&nbsp; Often similar to -moz-MenuHoverText.&nbsp; Should be used on top of -moz-MenuHover background. -moz-nativehyperlinktext \nRequires Gecko 1.9.1\n default platform hyperlink color -moz-OddTreeRow \nRequires Gecko 1.9\n Background color for odd-numbered rows in a tree.&nbsp; Should be used with -moz-FieldText foreground color.&nbsp; In Gecko versions prior to 1.9, use -moz-Field.&nbsp; See also -moz-EvenTreeRow. -moz-win-communicationstext \nRequires Gecko 1.9\n Should be used for text in objects with appearance:-moz-win-communications-toolbox. -moz-win-mediatext \nRequires Gecko 1.9\n Should be used for text in objects with appearance:-moz-win-media-toolbox.\n\nMozilla Color Preference Extensions\n -moz-activehyperlinktext User's preference for text color of active links.&nbsp; Should be used against default document background.  -moz-default-background-color \nRequires Gecko 5.0\n User's preference for document background-color.  -moz-default-color \nRequires Gecko 5.0\n User's preference for text color. -moz-hyperlinktext User's preference for text color of unvisited links.&nbsp; Should be used against default document background. -moz-visitedhyperlinktext User's preference for text color of visited links.&nbsp; Should be used against default document background.\nColor Keywords\nColor keywords are case-insensitive identifiers which represent a specific color, e.g. red, blue, brown, lightseagreen. The name describes the color, though it is mostly artificial. The list of accepted values varied a lot through the different specification:\n CSS Level 1 only accepted 16 basic colors, named the VGA colors as they were taken from the set of displayable colors on VGA graphic cards. CSS Level 2 added the orange keyword. From the beginning, browsers accepted other colors, mostly the X11 named colors list as some early browsers where X11 applications, though with a few differences. SVG 1.0 was the first standard to formally defined these keywords; CSS Colors Level 3 also formally defined these keywords. They are often referred as the extended color keywords, the X11 colors, the SVG colors.\n\nThere are a few caveats to consider when using keywords:\n Except the 16 basic colors which are common with HTML, the others cannot be used in HTML. HTML will convert these unknown values with a specific algorithm which will lead to completely different colors. These keywords should only be used in SVG &amp; CSS. Unknown keywords make the CSS property invalid. Invalid properties being ignored, the color will have no effect. This is a different behavior than the one of HTML. No keyword-defined colors in CSS have any transparency, they are plain, solid colors. Several keywords denote the same colors:  darkgray \/ darkgrey darkslategray \/ darkslategrey dimgray \/ dimgrey lightgray \/ lightgrey lightslategray \/ lightslategrey gray \/ grey slategray \/ slategray   Though the names of the keywords have been taken by the usual X11 color names, the color may diverge from the corresponding system color on X11 system as these are tailored for the specific hardware by the manufacturer [2].\n\n   Specifications Color Keyword RGB cubic coordinates Live Example     CSS3 CSS2 CSS1 &nbsp; black =rgb(&nbsp; 0,&nbsp;&nbsp; 0,&nbsp;&nbsp; 0) &nbsp;   &nbsp; silver =rgb(192, 192, 192) &nbsp;   &nbsp; gray[*] =rgb(128, 128, 128) &nbsp;   &nbsp; white =rgb(255, 255, 255) &nbsp;   &nbsp; maroon =rgb(128,&nbsp;&nbsp; 0,&nbsp;&nbsp; 0) &nbsp;   &nbsp; red =rgb(255,&nbsp;&nbsp; 0,&nbsp;&nbsp; 0) &nbsp;   &nbsp; purple =rgb(128,&nbsp;&nbsp; 0, 128) &nbsp;   &nbsp; fuchsia =rgb(255,&nbsp;&nbsp; 0, 255) &nbsp;   &nbsp; green =rgb(&nbsp; 0, 128,&nbsp;&nbsp; 0) &nbsp;   &nbsp; lime =rgb(&nbsp; 0, 255,&nbsp;&nbsp; 0) &nbsp;   &nbsp; olive =rgb(128, 128,&nbsp;&nbsp; 0) &nbsp;   &nbsp; yellow =rgb(255, 255,&nbsp;&nbsp; 0) &nbsp;   &nbsp; navy =rgb(&nbsp; 0,&nbsp;&nbsp; 0, 128) &nbsp;   &nbsp; blue =rgb(&nbsp; 0,&nbsp;&nbsp; 0, 255) &nbsp;   &nbsp; teal =rgb(&nbsp; 0, 128, 128) &nbsp;   &nbsp; aqua =rgb(&nbsp; 0, 255, 255) &nbsp;   &nbsp; &nbsp; orange =rgb(255, 165,&nbsp;&nbsp; 0) &nbsp;   &nbsp; &nbsp; &nbsp; aliceblue =rgb(240, 248, 245) &nbsp;   &nbsp; antiquewhite =rgb(250, 235, 215) &nbsp;   &nbsp; aquamarine =rgb(127, 255, 212) &nbsp;   &nbsp; azure =rgb(240, 255, 255) &nbsp;   &nbsp; beige =rgb(245, 245, 220) &nbsp;   &nbsp; bisque =rgb(255, 228, 196) &nbsp;   &nbsp; blanchedalmond =rgb(255, 235, 205) &nbsp;   &nbsp; blueviolet =rgb(138,&nbsp; 43, 226) &nbsp;   &nbsp; brown =rgb(165,&nbsp; 42,&nbsp; 42) &nbsp;   &nbsp; burlywood =rgb(222, 184,&nbsp; 35) &nbsp;   &nbsp; cadetblue =rgb( 95, 158, 160) &nbsp;   &nbsp; chartreuse =rgb(127, 255,&nbsp;&nbsp; 0) &nbsp;   &nbsp; chocolate =rgb(210, 105,&nbsp; 30) &nbsp;   &nbsp; coral =rgb(255, 127,&nbsp; 80) &nbsp;   &nbsp; cornflowerblue =rgb(100, 149, 237) &nbsp;   &nbsp; cornsilk =rgb(255, 248, 220) &nbsp;   &nbsp; crimson =rgb(220,&nbsp; 20,&nbsp; 60) &nbsp;   &nbsp; darkblue =rgb(&nbsp; 0, &nbsp; 0, 139) &nbsp;   &nbsp; darkcyan =rgb(&nbsp; 0, 139, 139) &nbsp;   &nbsp; darkgoldenrod =rgb(184, 134,&nbsp; 11) &nbsp;   &nbsp; darkgray[*] =rgb(169, 169, 169) &nbsp;   &nbsp; darkgreen =rgb(&nbsp; 0, 100, &nbsp; 0) &nbsp;   &nbsp; darkgrey[*] =rgb(169, 169, 169) &nbsp;   &nbsp; darkkhaki =rgb(189, 183, 107) &nbsp;   &nbsp; darkmagenta =rgb(139, &nbsp; 0, 139) &nbsp;   &nbsp; darkolivegreen =rgb( 85, 107,&nbsp; 47) &nbsp;   &nbsp; darkorange =rgb(255, 140, &nbsp; 0) &nbsp;   &nbsp; darkorchid =rgb(153,&nbsp; 50, 204) &nbsp;   &nbsp; darkred =rgb(139, &nbsp; 0, &nbsp; 0) &nbsp;   &nbsp; darksalmon =rgb(233, 150, 122) &nbsp;   &nbsp; darkseagreen =rgb(143, 188, 143) &nbsp;   &nbsp; darkslateblue =rgb( 72,&nbsp; 61, 139) &nbsp;   &nbsp; darkslategray[*] =rgb( 47,&nbsp; 79,&nbsp; 79) &nbsp;   &nbsp; darkslategrey[*] =rgb( 47,&nbsp; 79,&nbsp; 79) &nbsp;   &nbsp; darkturquoise =rgb(&nbsp; 0, 206, 209) &nbsp;   &nbsp; darkviolet =rgb(148, &nbsp; 0, 211) &nbsp;   &nbsp; deeppink =rgb(255,&nbsp; 20, 147) &nbsp;   &nbsp; deepskyblue =rgb(&nbsp; 0, 191, 255) &nbsp;   &nbsp; dimgray[*] =rgb(105, 105, 105) &nbsp;   &nbsp; dimgrey[*] =rgb(105, 105, 105) &nbsp;   &nbsp; dodgerblue =rgb( 30, 144, 255) &nbsp;   &nbsp; firebrick =rgb(178,&nbsp; 34,&nbsp; 34) &nbsp;   &nbsp; floralwhite =rgb(255, 250, 240) &nbsp;   &nbsp; forestgreen =rgb( 34, 139,&nbsp; 34) &nbsp;   &nbsp; gainsboro =rgb(220, 220, 220) &nbsp;   &nbsp; ghostwhite =rgb(248, 248, 255) &nbsp;   &nbsp; gold =rgb(255, 215,&nbsp;&nbsp; 0) &nbsp;   &nbsp; goldenrod =rgb(218, 165,&nbsp; 32) &nbsp;   &nbsp; greenyellow =rgb(173, 255,&nbsp; 47) &nbsp;   &nbsp; grey =rgb(128, 128, 128) &nbsp;   &nbsp; honeydew =rgb(240, 255, 240) &nbsp;   &nbsp; hotpink =rgb(255, 105, 180) &nbsp;   &nbsp; indianred =rgb(205,&nbsp; 92,&nbsp; 92) &nbsp;   &nbsp; indigo =rgb( 75,&nbsp; 0, 130) &nbsp;   &nbsp; ivory =rgb(255, 255, 240) &nbsp;   &nbsp; khaki =rgb(240, 230, 140) &nbsp;   &nbsp; lavender =rgb(230, 230, 250) &nbsp;   &nbsp; lavenderblush =rgb(255, 240, 245) &nbsp;   &nbsp; lawngreen =rgb(124, 252, 0) &nbsp;   &nbsp; lemonchiffon =rgb(255, 250, 205) &nbsp;   &nbsp; lightblue =rgb(173, 216, 230) &nbsp;   &nbsp; lightcoral =rgb(240, 128, 128) &nbsp;   &nbsp; lightcyan =rgb(224, 255, 255) &nbsp;   &nbsp; lightgoldenrodyellow =rgb(250, 250, 210) &nbsp;   &nbsp; lightgray[*] =rgb(211, 211, 211) &nbsp;   &nbsp; lightgreen =rgb(144, 238, 144) &nbsp;   &nbsp; lightgrey[*] =rgb(211, 211, 211) &nbsp;   &nbsp; lightpink =rgb(255, 182, 193) &nbsp;   &nbsp; lightsalmon =rgb(255, 160, 122) &nbsp;   &nbsp; lightseagreen =rgb( 32, 178, 170) &nbsp;   &nbsp; lightskyblue =rgb(135, 206, 250) &nbsp;   &nbsp; lightslategray[*] =rgb(119, 136, 153) &nbsp;   &nbsp; lightslategrey[*] =rgb(119, 136, 153) &nbsp;   &nbsp; lightsteelblue =rgb(176, 196, 222) &nbsp;   &nbsp; lightyellow =rgb(255, 255, 224) &nbsp;   &nbsp; limegreen =rgb( 50, 205,&nbsp; 50) &nbsp;   &nbsp; linen =rgb(250, 240, 230) &nbsp;   &nbsp; mediumaquamarine =rgb(102, 205, 170) &nbsp;   &nbsp; mediumblue =rgb(&nbsp; 0,&nbsp;&nbsp; 0, 205) &nbsp;   &nbsp; mediumorchid =rgb(186,&nbsp; 85, 211) &nbsp;   &nbsp; mediumpurple =rgb(147, 112, 219) &nbsp;   &nbsp; mediumseagreen =rgb( 60, 179, 113) &nbsp;   &nbsp; mediumslateblue =rgb(123, 104, 238) &nbsp;   &nbsp; mediumspringgreen =rgb(&nbsp; 0, 250, 154) &nbsp;   &nbsp; mediumturquoise =rgb( 72, 209, 204) &nbsp;   &nbsp; mediumvioletred =rgb(199,&nbsp; 21, 133) &nbsp;   &nbsp; midnightblue =rgb( 25,&nbsp; 25, 112) &nbsp;   &nbsp; mintcream =rgb(245, 255, 250) &nbsp;   &nbsp; mistyrose =rgb(255, 228, 225) &nbsp;   &nbsp; moccasin =rgb(255, 228, 181) &nbsp;   &nbsp; navajowhite =rgb(255, 222, 173) &nbsp;   &nbsp; oldlace =rgb(253, 245, 230) &nbsp;   &nbsp; olivedrab =rgb(107, 142,&nbsp; 35) &nbsp;  \n\ntransparent Keyword\nThe transparent keyword represents a fully transparent color, i.e. the color seen will be the background color. Technically, it is a black with alpha channel at its maximum and is a shortcut for rgba(0,0,0,0).\nHistorical Note The transparent keyword wasn't a true color in CSS Level 2 (Revision 1). It was a specific keyword that could be used in place of a regular &lt;color&gt; value on two CSS properties: background\n and border\n. It was essentially added to allow to override an inherited solid colors.  With the support of opacity through alpha channels, transparent was redefined as a true color in CSS Level 3 allowing its use in any place where a &lt;color&gt; value is required, like the color\n property.[**]currentColor Keyword\nThe currentColor keyword represents the calculated value of the element's color\n property. It allows to make the color properties inherited by properties or child's element properties that do not inherit it by default.\nIt can also be used on properties that inherit the calculated value of the element's color\n property and will be equivalent to the inherit keyword on these elements, if any.\nLive Example\nThe color of the line (a color-filled div) adapts to the color of its color\n property, inherited from its parent\n &lt;div style=&quot;color:darkred&quot;&gt;\n The color of this text is the same as the one of the line:\n  &lt;div style=&quot;background:currentcolor; height:1px&quot;&gt;&lt;\/div&gt;\n Some more text.\n&lt;\/div&gt; \n The color of this text is the same as the one of the line: . Some more text.\n\n \n&lt;div style=&quot;color:blue&quot;&gt;\n The color of this text is the same as the one of the line:\n  &lt;div style=&quot;background:currentcolor; height:1px&quot;&gt;&lt;\/div&gt;\n Some more text.\n&lt;\/div&gt; \n The color of this text is the same as the one of the line: . Some more text.\n\nLive Example\nThe color of the line (a color-filled div) adapts to the color of its color\n property, inherited from its parent\n &lt;div style=&quot;color:darkred&quot;&gt;\n The color of this text is the same as the one of the line:\n  &lt;div style=&quot;background:currentcolor; height:1px&quot;&gt;&lt;\/div&gt;\n Some more text.\n&lt;\/div&gt; \n The color of this text is the same as the one of the line: . Some more text.\n\n \n&lt;div style=&quot;color:blue&quot;&gt;\n The color of this text is the same as the one of the line:\n  &lt;div style=&quot;background:currentcolor; height:1px&quot;&gt;&lt;\/div&gt;\n Some more text.\n&lt;\/div&gt; \n The color of this text is the same as the one of the line: . Some more text.\n\nRGB (red-green-blue)\n Hexadecimal notation #RRGGBB and #RGB   &quot;#&quot;, followed by six hexadecimal characters (0-9, A-F). &quot;#&quot;, followed by three hexadecimal characters (0-9, A-F).  The three-digit RGB notation (#RGB) and the six-digit form (#RRGGBB) are equal. For example, #f03 and #ff0033 represent the same color. Functional Notation rgb(R,G,B) &quot;rgb&quot;, followed by three &lt;integer&gt;\n  or three &lt;percentage&gt;\n values. The integer number 255 corresponds to 100%, and to F or FF in the hexadecimal notation.\n\n\n\/* These examples all specify the same RGB color: *\/\n \n #f03\n #F03\n #ff0033\n #FF0033\n rgb(255,0,51)\n rgb(255, 0, 51)\n rgb(255, 0, 51.2) \/* ERROR! Don't use fractions, use integers *\/ \n rgb(100%,0%,20%)\n rgb(100%, 0%, 20%)\n rgb(100%, 0, 20%) \/* ERROR! Don't mix up integer and percentage notation *\/\n\nHSL (hue-saturation-lightness) hsl(H,S,L)\nThe advantage of HSL over RGB is that it is far more intuitive: you can guess at the colors you want, and then tweak. It is also easier to create sets of matching colors (by keeping the hue the same and varying the lightness\/darkness, and saturation).\nHue is represented as an angle of the color circle (i.e. the rainbow represented in a circle). This angle is given as a unitless &lt;number&gt;\n. By definition red=0=360, and the other colors are spread around the circle, so green=120, blue=240, etc. As an angle, it implicitly wraps around such that -120=240 and 480=120.\nSaturation and lightness are represented as percentages. 100% is full saturation, and 0% is a shade of grey. 100% lightness is white, 0% lightness is black, and 50% lightness is &quot;normal&quot;.\n\nhsl(0,  100%,50%)    \/* red *\/   \nhsl(30, 100%,50%)   &nbsp;             \nhsl(60, 100%,50%)   &nbsp;            \nhsl(90, 100%,50%)   &nbsp;            \nhsl(120,100%,50%)    \/* green *\/ \nhsl(150,100%,50%)   &nbsp;            \nhsl(180,100%,50%)   &nbsp;            \nhsl(210,100%,50%)   &nbsp;            \nhsl(240,100%,50%)    \/* blue *\/  \nhsl(270,100%,50%)   &nbsp;            \nhsl(300,100%,50%)   &nbsp;            \nhsl(330,100%,50%)   &nbsp;            \nhsl(360,100%,50%)    \/* red *\/   \n\nhsl(120,100%,25%)    \/* dark green *\/  \nhsl(120,100%,50%)    \/* green *\/       \nhsl(120,100%,75%)    \/* light green *\/ \n\nhsl(120,100%,50%)    \/* green *\/  \nhsl(120, 67%,50%)   &nbsp;             \nhsl(120, 33%,50%)   &nbsp;             \nhsl(120,  0%,50%)   &nbsp;             \n\nhsl(120, 60%,70%)    \/* pastel green *\/ \n\nRGBa (red-green-blue-alpha) rgba(R,G,B,a) \nExtends the RGB color model to include &quot;alpha&quot; to allow specification of the opacity of a color. a means opacity: 0=transparent; 1=opaque;\n\nrgba(255,0,0,0.1)    \/* 10% opaque red *\/  \nrgba(255,0,0,0.4)    \/* 40% opaque red *\/  \nrgba(255,0,0,0.7)    \/* 70% opaque red *\/  \nrgba(255,0,0,  1)    \/* full opaque red *\/ \n\nHSLa (hue-saturation-lightness-alpha) hsla(H,S,L,a) \nExtends the HSL color model to include &quot;alpha&quot; to allow specification of the opacity of a color. a means opacity: 0=transparent; 1=opaque;\n\nhsla(240,100%,50%,0.05)   \/* 5% opaque blue *\/   \nhsla(240,100%,50%, 0.4)   \/* 40% opaque blue *\/  \nhsla(240,100%,50%, 0.7)   \/* 70% opaque blue *\/  \nhsla(240,100%,50%,   1)   \/* full opaque blue *\/ \n\nSystem Colors\nNot all system colors are supported on all systems. \n\nDeprecated\n\n for use on public web pages.\n ActiveBorder Active window border. ActiveCaption Active window caption.&nbsp; Should be used with CaptionText foreground color. AppWorkspace Background color of multiple document interface. Background Desktop background. ButtonFace Face background color for 3-D elements that appear 3-D due to one layer of surrounding border.&nbsp; Should be used with ButtonText foreground color. ButtonHighlight The color of the border facing the light source for 3-D elements that appear 3-D due to one layer of surrounding border. ButtonShadow The color of the border away from the light source for 3-D elements that appear 3-D due to one layer of surrounding border. ButtonText Text on push buttons.&nbsp; Should be used with ButtonFace or ThreeDFace background color. CaptionText Text in caption, size box, and scrollbar arrow box.&nbsp; Should be used with ActiveCaption background color. GrayText Grayed (disabled) text. Highlight Item(s) selected in a control.&nbsp; Should be used with HighlightText foreground color. HighlightText Text of item(s) selected in a control.&nbsp; Should be used with Highlight background color. InactiveBorder Inactive window border. InactiveCaption Inactive window caption.&nbsp; Should be used with InactiveCaptionText foreground color. InactiveCaptionText Color of text in an inactive caption.&nbsp; Should be used with InactiveCaption background color. InfoBackground Background color for tooltip controls.&nbsp; Should be used with InfoText foreground color. InfoText Text color for tooltip controls.&nbsp; Should be used with InfoBackground background color. Menu Menu background.&nbsp; Should be used with MenuText or -moz-MenuBarText foreground color. MenuText Text in menus.&nbsp; Should be used with Menu background color. Scrollbar Scroll bar gray area. ThreeDDarkShadow The color of the darker (generally outer) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border. ThreeDFace The face background color for 3-D elements that appear 3-D due to two concentric layers of surrounding border.&nbsp; Should be used with ButtonText foreground color. ThreeDHighlight The color of the lighter (generally outer) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border. ThreeDLightShadow The color of the darker (generally inner) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border. ThreeDShadow The color of the lighter (generally inner) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border. Window Window background.&nbsp; Should be used with WindowText foreground color. WindowFrame Window frame. WindowText Text in windows.&nbsp; Should be used with Window background color.\n\nMozilla System Color Extensions\n -moz-ButtonDefault The border color that goes around buttons that represent the default action for a dialog box. -moz-ButtonHoverFace The background color of a button that the mouse pointer is over (which would be ThreeDFace or ButtonFace when the mouse pointer is not over it).&nbsp; Should be used with the -moz-ButtonHoverText foreground color. -moz-ButtonHoverText The text color of a button that the mouse pointer is over (which would be ButtonText when the mouse pointer is not over it).&nbsp; Should be used with the -moz-ButtonHoverFace background color. -moz-CellHighlight Background color for selected item in a tree widget.&nbsp; Should be used with -moz-CellHighlightText foreground color.&nbsp; See also -moz-html-CellHighlight. -moz-CellHighlightText Text color for a selected item in a tree.&nbsp; Should be used with -moz-CellHighlight background color.&nbsp; See also -moz-html-CellHighlightText. -moz-Combobox \nRequires Gecko 1.9.2\n Background color for comboboxes.&nbsp; Should be used with -moz-ComboboxText foreground color.&nbsp; In versions prior to 1.9.2, use -moz-Field instead. -moz-ComboboxText \nRequires Gecko 1.9.2\n Background Text color for comboboxes.&nbsp; Should be used with -moz-ComboboxText foreground color.&nbsp; In versions prior to 1.9.2, use -moz-FieldText instead. -moz-Dialog Background color for dialog boxes.&nbsp; Should be used with -moz-DialogText foreground color. -moz-DialogText Text color for dialog boxes.&nbsp; Should be used with -moz-Dialog background color. -moz-dragtargetzone -moz-EvenTreeRow \nRequires Gecko 1.9\n Background color for even-numbered rows in a tree.&nbsp; Should be used with -moz-FieldText foreground color.&nbsp; In Gecko versions prior to 1.9, use -moz-Field.&nbsp; See also -moz-OddTreeRow. -moz-Field textfield background color.&nbsp; Should be used with -moz-FieldText foreground color. -moz-FieldText textfield foreground color.&nbsp; Should be used with -moz-Field, -moz-EvenTreeRow, or -moz-OddTreeRow background colors. -moz-html-CellHighlight \nRequires Gecko 1.9\n Background color for highlighted item in HTML&nbsp;select.&nbsp; Should be used with -moz-html-CellHighlightText foreground color.&nbsp; Prior to Gecko 1.9, use -moz-CellHighlight. -moz-html-CellHighlightText \nRequires Gecko 1.9\n Background color for highlighted item in HTML&nbsp;select.&nbsp; Should be used with -moz-html-CellHighlight background color.&nbsp; Prior to Gecko 1.9, use -moz-CellHighlightText. -moz-mac-accentdarkestshadow -moz-mac-accentdarkshadow -moz-mac-accentface -moz-mac-accentlightesthighlight -moz-mac-accentlightshadow -moz-mac-accentregularhighlight -moz-mac-accentregularshadow -moz-mac-chrome-active \nRequires Gecko 1.9.1\n -moz-mac-chrome-inactive \nRequires Gecko 1.9.1\n -moz-mac-focusring -moz-mac-menuselect -moz-mac-menushadow -moz-mac-menutextselect -moz-MenuHover Background color for hovered menu item.&nbsp; Often similar to Highlight.&nbsp; Should be used with -moz-MenuHoverText or -moz-MenuBarHoverText foreground color. -moz-MenuHoverText Foreground color for hovered menu item.&nbsp; Often similar to HighlightText.&nbsp; Should be used with -moz-MenuHover background color. -moz-MenuBarText \nRequires Gecko 1.9.2\n Foreground color for text in menu bars.&nbsp; Often similar to MenuText.&nbsp; Should be used on top of Menu background. -moz-MenuBarHoverText Foreground color for hovered text in menu bars.&nbsp; Often similar to -moz-MenuHoverText.&nbsp; Should be used on top of -moz-MenuHover background. -moz-nativehyperlinktext \nRequires Gecko 1.9.1\n default platform hyperlink color -moz-OddTreeRow \nRequires Gecko 1.9\n Background color for odd-numbered rows in a tree.&nbsp; Should be used with -moz-FieldText foreground color.&nbsp; In Gecko versions prior to 1.9, use -moz-Field.&nbsp; See also -moz-EvenTreeRow. -moz-win-communicationstext \nRequires Gecko 1.9\n Should be used for text in objects with appearance:-moz-win-communications-toolbox. -moz-win-mediatext \nRequires Gecko 1.9\n Should be used for text in objects with appearance:-moz-win-media-toolbox.\n\nMozilla Color Preference Extensions\n -moz-activehyperlinktext User's preference for text color of active links.&nbsp; Should be used against default document background.  -moz-default-background-color \nRequires Gecko 5.0\n User's preference for document background-color.  -moz-default-color \nRequires Gecko 5.0\n User's preference for text color. -moz-hyperlinktext User's preference for text color of unvisited links.&nbsp; Should be used against default document background. -moz-visitedhyperlinktext User's preference for text color of visited links.&nbsp; Should be used against default document background.\nSpecifications\n   Specification Status Comment     CSS Colors Level 3 Recommendation\n Deprecated system-colors; added SVG colors; added rgba(), hsl(), hsla() functional notation.   CSS Level 2 (Revision 1) Recommendation\n Added the orange color and the system-colors[3].   CSS Level 1 Recommendation\n &nbsp;  \n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   keywords colors 1.0 1.0 (1.0) 3.0 [*] 3.5 1.0 (85)   #RRGGBB | #RGB 1.0 1.0 (1.0) 3.0 3.5 1.0 (85)   rgb (R,G,B) 1.0 1.0 (1.0) 4.0 3.5 1.0 (85)   hsl (H,S,L) 1.0 1.0 (1.5) 9.0 [4] 9.5 3.1 (525)   rgba (R,G,B,a) 1.0 3.0 (1.9) 9.0 # 10.0 3.1 (525)   hsla (H,S,L,a) 1.0 3.0 (1.9) 9.0 # 10.0 3.1 (525)   currentColor 1.0 1.5 (1.8) 9.0 [5] 9.5 4.0 (528)   transparent 1.0 3.0 (1.9) 9.0 [6][**] 10.0 3.1 (525)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n[*] The 'e'-grey colors (with an e) (grey, darkgrey, darkslategrey, dimgrey, lightgrey, lightslategrey) are only supported since IE 8.0. IE 3 to IE 6 only support the 'a' variants: gray, darkgray, darkslategray, dimgray, lightgray, lightslategray.\n[**]&nbsp; IE 7-8 supports transparent only for background\n and border\n. color:transparent is drawn black in IE.See also\n The opacity\n property, allowing to define the transparency of color at the element level. The color\n, background-color\n, border-color\n, outline-color\n, text-shadow\n, box-shadow\n properties. CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/frequency","title":"frequency","description":"Summary\nThe &lt;frequency&gt; CSS data types denotes a frequency dimension, like the pitch of a speaking voice. They consists of a&nbsp;&lt;number&gt;\n immediately followed by the unit. Like for any CSS dimension, there is no space between the unit literal and the number.\nThe following units may be used :\n Hz which represents a frequency in Hertz. E.g. 0Hz, 1500Hz, 10000Hz. kHz which represents a time in kilohertz. E.g. 0kHz, 1.5kHz, 10kHz.\n\nAs all units represents the same time for the value 0, the unit may be omitted in that case: 0 represents 0Hz, 0kHz. Though the units are case-insensitive in CSS, it is good practice to use a capital H for Hz and kHz, as in the SI, Hertz being a family noun.\nExamples\nThese are valid time values:\n12Hz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Positive integer\n-456kHz&nbsp;&nbsp;&nbsp;&nbsp; Negative integer\n4.3Hz       Non-integer\n14KhZ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The unit is case-insensitive, though non-SI capitalization is not recommended.\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zero (without the unit)\n+0s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zero, with a leading + and the unit\n-0ms        Zero, with a leading - and the unt(Though strange, this is an allowed value)\n\nThese are invalid time values:\n12.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This is a &lt;number&gt;, not an &lt;frequency&gt;, it must have a unit\n7 Hz        No space is allowed between the &lt;number&gt; and the unit\n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n &nbsp;  \n\nThis data type was initially introduced in CSS Level 2 for the now obsoleted aural media group, where it was used to define the pitch of the voice. This has been deprecated since then, but the &lt;frequency&gt; data type has been reintroduced in CSS3, though no CSS property is using it at the moment.Browser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support no no no [1] no [*] no   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support no no no no no   \n\n[*] Some versions of Opera may have (partial) support for the obsolete aural media group, and through the pitch property support for the &lt;frequency&gt; data type.See also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/gradient","title":"gradient","description":"Specification\n   Specification Status Comment     CSS Image Value and Replaced Content Module Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\nEach different gradient type has a different compatibility matrix. Please consult each individual article.\nSee also\n CSS Reference Using CSS gradients, &lt;gradient&gt;\n , linear-gradient(), radial-gradient(), repeating-linear-gradient(), repeating-radial-gradient(); CSS Data Types: &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/identifier","title":"identifier","description":"Summary\nThe &lt;identifier&gt; CSS data value denotes an arbitrary user-defined string used as an identifier.\nIts syntax is similar to the CSS identifier one, except that it is case-sensitive: an &lt;identifier&gt; is a sequence of characters where characters can be :\n any alphanumeric character (A to Z, or a to z), any decimal digit (0 to 9), a dash ('-') an underscore ('_'), a escaped character (with a backslash, '\\'), or a Unicode character (in the format of a backslash followed by one to six hexadecimal digits, its Unicode code point).\n\nThe first character must not be a decimal digit nor a dash ('-') followed by a decimal digit or another dash. An &lt;identifier&gt; must not be placed between single or double quotes as it would be identical to a &lt;string&gt;\n .\nNote that id1, Id1, iD1 and ID1 are all different identifiers as they are case-sensitive. In the opposite, as they are several way to escape a character, toto\\? and toto\\3F are the same identifiers.\nThese are valid identifiers:\nnono79&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A mix of alphanumeric characters and numbers\nground-level&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A mix of alphanumeric characters and a dash\n-test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A dash followed by an alphabetic character\n_internal&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; An underscore followed by alphanumeric characters\n\\22 toto&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A Unicode character followed by a sequence of alphanumeric character\nbili\\.bob&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The period is correctly escaped\n\nThese are invalid identifiers:\n34rem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; It must not start with a decimal digit.\n-12rad&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; It must not start with a dash followed by a decimal digit.\nbili.bob          Only alphanumeric characters, _ and - need not being escaped.\n--toto&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; It must not start with two dashes.\n'bilibob'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; It isn't an &lt;identifier&gt;, it is a &lt;string&gt;.\n&quot;bilibob&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; It isn't an &lt;identifier&gt;, it is a &lt;string&gt;.\n\nThe &lt;identifier&gt; data type is mainly used in conjunction with CSS Counters, the counter\n functional notation and the two related CSS properties, counter-reset\n and counter-increment\n.\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n No significant change from CSS Level 2 (Revision 1)   CSS Level 2 (Revision 1) Recommendation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 2.0 1.0 (?) 8.0 [1] 9.2 3.1 (?)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/image","title":"image","description":"Syntax\nAn &lt;image&gt; CSS data type represents may be one of the following:\n An image denoted by a CSS &lt;uri&gt;\n data type and the url() function; A CSS &lt;gradient&gt;\n ; A part of the page, defined by the element()\n function.\n\nExamples\nThese are valid image values:\nurl(test.jpg)&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The url() function, as long as test.jpg is an image\nlinear-gradient(to bottom, blue, red)&nbsp; A &lt;gradient&gt;\nelement(colonne3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A part of the page, used with the element() function,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if colonne3 is an existing CSS id on the page.\n\nThese are invalid image values:\ncervin.jpg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; An image file must be defined using the url() function.\nurl(report.pdf)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  The file pointed by the url() function must be an image.\nelement(fakeid)                        If fakeid is not an existing CSS id on the page\n\nSpecifications\n   Specification Status Comment     CSS Image Value and Replaced Content Module Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   &lt;uri&gt; (Supported) (Supported) (Supported) (Supported) (Supported)   &lt;gradient&gt; (Supported) limited to background-image\n &amp; background\n\n-moz (Supported)\n-webkit IE 10\n-ms (Supported)\n-o (Supported)\n-webkit   element() 4.0 (2.0) [2] limited to background-image\n &amp; background\n\n-moz ? ? ? ?   \n\n    Feature Firefox Mobile (Gecko) Android IE&nbsp;Phone Opera Mobile Safari Mobile   &lt;uri&gt; (Supported) (Supported) (Supported) (Supported) (Supported)   &lt;gradient&gt; (Supported) limited to background-image\n &amp; background\n\n-moz ? ? ? ?   element() 4.0 (2.0) [3] limited to background-image\n &amp; background\n\n-moz ? ? ? ?   \n\nSee also\n CSS Reference Using CSS gradients, &lt;gradient&gt;\n , linear-gradient(), radial-gradient(), repeating-linear-gradient(), repeating-radial-gradient(); element(); CSS Data Types: &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/initial","title":"initial | -moz-initial","description":"Summary\nThe -moz-initial CSS keyword is a Mozilla implementation of CSS3 initial. Applies the initial value of a property to an element.\n-moz-initial (initial) is allowed on every CSS property. It causes the element for which it is specified to use the initial value of the property.\nExamples\n\n \/* give headers a green border *\/\n h2 { border: medium solid green }\n\n \/* but make those in the sidebar use the value of the &quot;color&quot; property *\/\n #sidebar h2 { border-color: -moz-initial; border-color: initial; }\n\n\n &lt;p style=&quot;color:red&quot;&gt; \n    this text is red \n       &lt;em style=&quot;color:-moz-initial; color:initial&quot;&gt; \n          this text is in the initial color (e.g. black)\n       &lt;\/em&gt;\n    this is red again\n &lt;\/p&gt;\n\nBrowser compatibility\n   Browser Lowest version Support of   Internet Explorer --- ---   Firefox (Gecko) 1.0-3.0 (1.0-1.9) [*] -moz-initial   Opera --- ---   Safari (WebKit) 1.2 (125) initial  \n\n[*] Increasing support in each version, almost complete in Firefox 3.0\n Support for quotes\n since Firefox 3.5 (Gecko 1.9.1) Support for -moz-border-*-colors\n since Firefox 3.6 (Gecko 1.9.2)\n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n Defines the keyword   CSS Cascade And Inheritance Level 3 Working Draft\n Defines what an initial value is  \n\nSee also\nInitial value, inherit\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/inherit","title":"inherit","description":"Summary\nThe inherit\n value is allowed on every CSS property. It causes the element for which it is specified to take the Computed value\n of the property from its parent element.\nFor inherited properties\nFor inherited properties, this reinforces the default behavior, and is only needed to override another rule. For example:\n \/* make second-level headers green *\/\n h2 { color: green; }\n\n \/* ...but leave those in the sidebar alone so they use their parent's color *\/\n #sidebar h2 { color: inherit; }\n\nNote that in this example the h2 elements inside the sidebar might be different colors. For example, if one of them were the child of a div matched by the rule\n div#current { color: blue; }\n\nit would be blue.\nFor non-inherited properties\nFor non-inherited properties, this specifies a behavior that typically makes relatively little sense.\nFor inherited properties\nFor inherited properties, this reinforces the default behavior, and is only needed to override another rule. For example:\n \/* make second-level headers green *\/\n h2 { color: green; }\n\n \/* ...but leave those in the sidebar alone so they use their parent's color *\/\n #sidebar h2 { color: inherit; }\n\nNote that in this example the h2 elements inside the sidebar might be different colors. For example, if one of them were the child of a div matched by the rule\n div#current { color: blue; }\n\nit would be blue.\nFor non-inherited properties\nFor non-inherited properties, this specifies a behavior that typically makes relatively little sense.\nNotes\nInheritance is always from the parent element in the document tree, even when the parent element is not the containing block.\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n No significant change from CSS Level 2 (Revision 1)   CSS Level 2 (Revision 1) Recommendation\n &nbsp;  \n\nBrowser Compatibility\n   Browser Lowest Version   Internet Explorer 8.0   Firefox (Gecko) 1.0 (1.0)   Opera 4.0-7.0   Safari (WebKit) 1.0 (85)  \n\nSee Also\nInheritance, initial\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/integer","title":"integer","description":"Summary\nThe &lt;integer&gt; CSS data type denotes an integer number, positive or negative. There isn't any associated unit with the value. An integer consists of one or several decimal digit, 0 to 9, eventually preceded by one single + or - sign.\nIntegers are used in numerous CSS properties, e. g. z-index\n, line-height\n, counter-increment\n, -moz-column-count\n.\nAlso any &lt;integer&gt; CSS value is also a &lt;number&gt;\n CSS value, though the converse is not true.\nInterpolation\nValues of the &lt;integer&gt; CSS data type can be interpolated in order to allow animations. In that case they are interpolated via integer discrete steps. The calculationis done as if they were real, floating-point, numbers and the discrete value is obtained using the floor function. [1] The speed of the interpolation is determined by the timing function associated with the animation.Examples\nThese are valid integer values:\n12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Positive integer (without a leading + sign)\n+123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Positive integer (with a leading + sign)\n-456&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Negative integer\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zero\n+0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zero, with a leading +\n-0          Zero, with a leading - (Though strange, this is an allowed value)\n\nThese are invalid integer values:\n12.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This is a &lt;number&gt;, not an &lt;integer&gt;, though it represents an integer\n12.         The dot should not be part of an &lt;integer&gt;\n+---12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Only one leading +\/- is allowed\nten&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Letters are not allowed\n_5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Special characters are not allowed\n\\35         Escaped Unicode characters are not allowed, even if they are an integer (here: 5)\n\\4E94&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Non-arabic numerals are not allowed, even escaped (here: the Japanese 5, &#22235;)\n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n No significant change from CSS Level 2 (Revision 1)   CSS Level 2 (Revision 1) Recommendation\n Explicitly defined   CSS Level 1 Recommendation\n Implicitly defined  \n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   basic 1.0 1.0 (1.0) 3.0 yes 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support yes yes yes yes yes   \n\nSee also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/length","title":"length","description":"Summary\nThe &lt;length&gt; CSS data type denotes distance measurements. It is a &lt;number&gt;\n immediately followed by a length unit (px, em, pc, in, mm, ...). Like for any CSS dimension, there is no space between the unit literal and the number.\nMany CSS properties take &lt;length&gt; values, such as width\n, margin\n,&nbsp; padding\n, font-size\n, border-width\n, text-shadow\n, ...\nFor some properties, using negative lengths is a syntax error, but for some properties, negative lengths are allowed. Note also that some CSS properties accepted &lt;length&gt; values also accepts &lt;percentage&gt;\n values; though also CSS dimensions, these are not &lt;length&gt; values.\nInterpolation\nValues of the &lt;length&gt; CSS data type can be interpolated in order to allow animations. In that case they are interpolated as real, floating-point, numbers. [1] The interpolation happens on the calculated value. The speed of the interpolation is determined by the timing function associated with the animation.\nUnits\nRelative length units\nFont-relative length\n em This unit represents the calculated font-size\n of the element. If used on the font-size\n property itself, it represents the inherited font-size of the element. This unit is often used to create scalable layouts, which keep the vertical rhythm of the page, even when the user changes the size of the fonts. The CSS properties line-height\n, font-size\n, margin-bottom\n and margin-top\n often has a value expressend in em.  ex This unit represents the x-height of the element's font\n. On fonts with the 'x' letter, this is generally the height of lowercase letters in the font; 1ex &asymp; 0.5em in many fonts. ch Experimental   This unit represents the width, or more precisely the advance measure, of the glyph '0' (zero, the Unicode character U+0030) in the element's font\n. rem Experimental   This unit represents the font-size\n of the root element (e.g. the font-size of the &lt;html&gt;\n element). When used on the font-size\n on this root element, it represents its initial value. This unit is practical in creating perfectly scalable layout. If not supported by the targeted browsers, such layout can be achieved using the em unit, though this is slightly more complex. \n\nViewport-relative length Experimental  \n vh 1\/100th of the height of the viewport. vw 1\/100th of the width of the viewport. vm 1\/100th of the minimum value between the height and the width of the viewport.\n\nAbsolute length units\nAbsolute length units represents a physical measurement and when the physical properties of the output medium are known, such as for print layout. This is done by anchored one of the unit to a physical unit and to defined the other relatively to it. The anchor is done differently for low-resolution devices, like screens, and high-resolution devices, like printers.\nFor low-dpi devices, the unit px represents the physical reference pixel and the others are defined relative to it. Thus, 1in is defined as 96px which equals 72pt. The consequence of this definition is that on such devices, length described in inches (in), centimeters (cm), millimeters (mm) doesn't necessary match the length of the physical unit with the same name.\nFor high-dpi devices, inches (in), centimeters (cm), millimeters (mm) are defined as their physical counterparts. Therefore the px unit is defined relative to them (1\/96 of 1 inch).\n px Relative to the viewing device. For screen display, typically one device pixel (dot) of the display. For printers and very high resolution screens one CSS pixel implies multiple device pixels, so that the number of pixel per inch stays around 96.  mm One millimeter. cm One centimeter (10 millimeters). in One inch (2.54 centimeters). pt One point (which is 1\/72 of an inch). pc One pica (which is 12 points). mozmm \nRequires Gecko 2.0\n Non-standard      An experimental unit which attempts to render at exactly one millimeter regardless of the size or resolution of the display. This is rarely actually what you want, but may be useful in particular for mobile devices.\n\n\nRequires Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\nCSS units and dots-per-inch\n\nPrior to Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n, Gecko attempted (often incorrectly) to actually compute the real size to render for these, even though most other rendering engines assumed 96 DPI. Now Gecko is consistent with the other browsers.\nStarting in&nbsp;Gecko 2.0, changes to how CSS units translate to dots-per-inch (DPI) have been made to become consistent with the behavior of other popular browsers including Safari, Internet Explorer, and Google Chrome.\nSome specific examples:\n 1in is now always 96px 3pt is now always 4px 25.4mm is now always 96px\n\nIn addition, Gecko has improved ability to correctly scale absolute lengths to the actual resolution of the rendering medium, whether that's the screen or paper.\nRelative length units\nFont-relative length\n em This unit represents the calculated font-size\n of the element. If used on the font-size\n property itself, it represents the inherited font-size of the element. This unit is often used to create scalable layouts, which keep the vertical rhythm of the page, even when the user changes the size of the fonts. The CSS properties line-height\n, font-size\n, margin-bottom\n and margin-top\n often has a value expressend in em.  ex This unit represents the x-height of the element's font\n. On fonts with the 'x' letter, this is generally the height of lowercase letters in the font; 1ex &asymp; 0.5em in many fonts. ch Experimental   This unit represents the width, or more precisely the advance measure, of the glyph '0' (zero, the Unicode character U+0030) in the element's font\n. rem Experimental   This unit represents the font-size\n of the root element (e.g. the font-size of the &lt;html&gt;\n element). When used on the font-size\n on this root element, it represents its initial value. This unit is practical in creating perfectly scalable layout. If not supported by the targeted browsers, such layout can be achieved using the em unit, though this is slightly more complex. \n\nViewport-relative length Experimental  \n vh 1\/100th of the height of the viewport. vw 1\/100th of the width of the viewport. vm 1\/100th of the minimum value between the height and the width of the viewport.\n\nFont-relative length\n em This unit represents the calculated font-size\n of the element. If used on the font-size\n property itself, it represents the inherited font-size of the element. This unit is often used to create scalable layouts, which keep the vertical rhythm of the page, even when the user changes the size of the fonts. The CSS properties line-height\n, font-size\n, margin-bottom\n and margin-top\n often has a value expressend in em.  ex This unit represents the x-height of the element's font\n. On fonts with the 'x' letter, this is generally the height of lowercase letters in the font; 1ex &asymp; 0.5em in many fonts. ch Experimental   This unit represents the width, or more precisely the advance measure, of the glyph '0' (zero, the Unicode character U+0030) in the element's font\n. rem Experimental   This unit represents the font-size\n of the root element (e.g. the font-size of the &lt;html&gt;\n element). When used on the font-size\n on this root element, it represents its initial value. This unit is practical in creating perfectly scalable layout. If not supported by the targeted browsers, such layout can be achieved using the em unit, though this is slightly more complex. \n\nViewport-relative length Experimental  \n vh 1\/100th of the height of the viewport. vw 1\/100th of the width of the viewport. vm 1\/100th of the minimum value between the height and the width of the viewport.\n\nAbsolute length units\nAbsolute length units represents a physical measurement and when the physical properties of the output medium are known, such as for print layout. This is done by anchored one of the unit to a physical unit and to defined the other relatively to it. The anchor is done differently for low-resolution devices, like screens, and high-resolution devices, like printers.\nFor low-dpi devices, the unit px represents the physical reference pixel and the others are defined relative to it. Thus, 1in is defined as 96px which equals 72pt. The consequence of this definition is that on such devices, length described in inches (in), centimeters (cm), millimeters (mm) doesn't necessary match the length of the physical unit with the same name.\nFor high-dpi devices, inches (in), centimeters (cm), millimeters (mm) are defined as their physical counterparts. Therefore the px unit is defined relative to them (1\/96 of 1 inch).\n px Relative to the viewing device. For screen display, typically one device pixel (dot) of the display. For printers and very high resolution screens one CSS pixel implies multiple device pixels, so that the number of pixel per inch stays around 96.  mm One millimeter. cm One centimeter (10 millimeters). in One inch (2.54 centimeters). pt One point (which is 1\/72 of an inch). pc One pica (which is 12 points). mozmm \nRequires Gecko 2.0\n Non-standard      An experimental unit which attempts to render at exactly one millimeter regardless of the size or resolution of the display. This is rarely actually what you want, but may be useful in particular for mobile devices.\n\n\nRequires Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\nCSS units and dots-per-inch\n\nPrior to Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n, Gecko attempted (often incorrectly) to actually compute the real size to render for these, even though most other rendering engines assumed 96 DPI. Now Gecko is consistent with the other browsers.\nStarting in&nbsp;Gecko 2.0, changes to how CSS units translate to dots-per-inch (DPI) have been made to become consistent with the behavior of other popular browsers including Safari, Internet Explorer, and Google Chrome.\nSome specific examples:\n 1in is now always 96px 3pt is now always 4px 25.4mm is now always 96px\n\nIn addition, Gecko has improved ability to correctly scale absolute lengths to the actual resolution of the rendering medium, whether that's the screen or paper.\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n Added ch, rem, vw, vh, vm   CSS Level 2 (Revision 1) Recommendation\n pt, pc, px are explicitly defined (were implicitly defined in CSS1)   CSS Level 1 Recommendation\n &nbsp;  \n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1 1.0 (1.0) 3.0 [2] 3.5 1.0 (85)   ch no 1.0 (width of 'M') [*] 3.5 (correct) 9 [3] no no   rem 1 (528) [4] 3.6 (1.9.2) 9 [5] no 5.0 (533.17.8)   vh, vw, vm no [6] no [7] 9 [8] no no [9]   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support yes yes yes yes yes   ch no yes ? no no   rem 2.1 yes ? no 4.0   vh, vw, vm no no ? no no   \n\n[*] Also, didn't work for border-width\n and outline-width\n CSS properties.\nSee also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/none","title":"none","description":"Summary\nnone is a common value for most CSS properties. It is often the default value, but can always be considered as a sort of &quot;standard&quot; value. It is comparable to the value normal\n , used in a similar manner for other properties.\nUsed in\n float\n The element doesn't float. text-decoration\n Doesn't decorate the element. max-height\n \/ max-width\n Doesn't bound the height \/ width with a particular value.\n\n background-image\n border-style\n clear\n content\n counter-increment\n counter-reset\n display\n list-style-type\n quotes\n text-transform\n\n\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/normal","title":"normal","description":"Summary\nnormal is a common value for some CSS properties. It is often the default value, but can always be considered as a sort of &quot;standard&quot; value. It is comparable to the value none\n, used in a similar manner for other properties.\nUsed in\n  font-weight\n Gives the font standard weight (400). That is, the text is not noticeably bold or light. font-style\n Does not apply any italic or oblique to the font. word-spacing\n Uses the standard spacing between words, specified by the font.\n\nAlso used in:\n font-variant\n letter-spacing\n white-space\n speak\n unicode-bidi\n line-height\n content\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/number","title":"number","description":"Interpolation\nValues of the &lt;number&gt; CSS data type can be interpolated in order to allow animations. In that case they are interpolated as real, floating-point, numbers. [1] The speed of the interpolation is determined by the timing function associated with the animation.Examples\nThese are valid number values:\n12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A raw &lt;integer&gt; is also a &lt;number&gt;\n4.01&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A positive non-integer &lt;number&gt;\n-456.8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Negative non-integer &lt;number&gt;\n0.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zero\n+0.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zero, with a leading +\n-0.0        Zero, with a leading - (Though strange, this is an allowed value)\n\nThese are invalid number values:\n12.         The dot should be followed by a number\n+---12.2&nbsp;&nbsp;&nbsp; Only one leading +\/- is allowed\n12.1.1      Only one dot is allowed\n10e3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The e notation is not allowed\n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n No significant change from CSS Level 2 (Revision 1)   CSS Level 2 (Revision 1) Recommendation\n Explicitly defined   CSS Level 1 Recommendation\n Implicitly defined  \n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   basic 1.0 1.0 (1.0) &lt;=5.0 yes 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support yes yes yes yes yes   \n\nSee also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/percentage","title":"percentage","description":"Summary\nThe &lt;percentage&gt; CSS data types represent a percentage value. Many CSS properties can take percentage values, often to define sizes in terms of parent objects. Percentages are formed by a &lt;number&gt;\n immediately followed by the percentage sign . Like for all unit in CSS, there is no space between the '%' and the number.\nMany length properties use percentages, such as width\n, margin\n and padding\n. Percentages can also be seen in font-size\n, where the size of the text is directly related to the size of its parent.\nNote: only calculated values are inherited. So, even if a percentage value is used on the parent property, a real value, like a width in pixel for a \n&lt;length&gt;\n value, will be accessible on the inherited property, not the percentage value.\nInterpolation\nValues of the &lt;percentage&gt; CSS data type can be interpolated in order to allow animations. In that case they are interpolated as real, floating-point, numbers. [1] The speed of the interpolation is determined by the timing function associated with the animation.Examples\n\r\n          &lt;div style=&quot;background-color:#0000FF;&quot;&gt;\n  &lt;div style=&quot;width:50%;margin-left:20%;background-color:#00FF00;&quot;&gt;Width: 50%, Left margin: 20%&lt;\/div&gt;\n  &lt;div style=&quot;width:30%;margin-left:60%;background-color:#FF0000;&quot;&gt;Width: 30%, Left margin: 60%&lt;\/div&gt;\n&lt;\/div&gt;\r\n        \nThe above HTML will output:\n Width: 50%, Left margin: 20% Width: 30%, Left margin: 60%\n\n&nbsp;\n\r\n          &lt;div style=&quot;font-size:18px;&quot;&gt;\n  Full size text (18px)\n  &lt;span style=&quot;font-size:50%;&quot;&gt;50%&lt;\/span&gt;\n  &lt;span style=&quot;font-size:200%;&quot;&gt;200%&lt;\/span&gt;\n&lt;\/div&gt;\r\n        \nThe above HTML will output:\nFull size text (18px) 50% 200%\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n No significant change from CSS Level 2 (Revision 1)   CSS Level 2 (Revision 1) Recommendation\n No change from CSS Level 1   CSS Level 1 Recommendation\n &nbsp;  \n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   basic 1.0 1.0 (1.0) &lt;=5.0 yes 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support yes yes yes yes yes   \n\nSee also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/ratio","title":"ratio","description":"Summary\nThe &lt;ratio&gt; CSS data type, used for describing aspect ratios in media queries, denotes the proportion between two unitless values. It is a strictly positive &lt;integer&gt;\n  followed by a slash ('\/', Unicode U+002F SOLIDUS) and a second strictly positive &lt;integer&gt;\n . There may be spaces before and after the solidus.Examples\n   &nbsp; Ratio Usage      4\/3 Traditional TV format in the 20th century.    16\/9 Modern, 'widescreen', TV format.    185\/100 = 91\/50 (non-integer dividends and divisors are not allowed)  The most common movie format since the 1960s.     239\/100 (non-integer dividends and divisors are not allowed)  The 'widescreen', anamorphic, movie format.  \n\nSpecifications\n   Specification Status Comment      CSS Media Queries Level 3  Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &lt;4 3.5 (1.9.1) 9 [1] 9.5 1.0 (?) [2]   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support yes yes ? yes yes   \n\nSee also\n CSS Media Queries CSS Reference Index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/resolution","title":"resolution","description":"Summary\nThe &lt;resolution&gt; CSS data types, used in media queries, denotes the density of pixels of an output device, its resolution. It is a  &lt;number&gt; immediately followed by a unit of resolution (dpi, dpcm, ...). Like for any CSS dimension, there is no space between the unit literal and the number.\nUnits\n dpi This unit represents the number of dots per inch. A screen typically contains 72 or 96 dpi; a printed document usually reach much greater dpi. As 1 inch is 2.54 cm, 1dpi &asymp; 2.54dpcm. dpcm This unit represents the number of dots per centimeter. As 1 inch is 2.54 cm, 1dpcm &asymp; 0.39dpi.\n\nExamples\nHere are some correct uses of &lt;resolution&gt; values:\n96dpi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Correct use: a &lt;number&gt; (here an &lt;integer&gt;) followed by the unit.\n@media print and (min-resolution: 300dpi) { ... }&nbsp; Correct use in the context of a media query.\n\nHere are some incorrect uses:\n72 dpi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Incorrect: no spaces allowed between the &lt;number&gt; and the unit.\nten dpi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Incorrect: only digits must be used\n\nSpecifications\n   Specification Status Comment     CSS Media Queries Level 3 Candidate Recommandation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support &lt;4 3.5 (1.9.1) [*] 9 [1] 9.5 1.0 (?) [2]   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support yes yes ? yes yes   \n\n[*] Before Firefox 8 (Gecko 8.0), it erroneously accepted only CSS Dimension with &lt;integer&gt;\n  followed by the unit. From that version, it supports any valid CSS dimensions (&lt;number&gt;\n immediately followed by the unit).See also\n CSS Media Queries CSS Reference Index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/shape","title":"shape","description":"Summary\nThe &lt;shape&gt; CSS data type denotes the specific form of a region. This region is used to define on which part of an element some properties like clip\n do apply.\nIn the current specification, a &lt;shape&gt;, though designed to denote any kind of form, can only represents a rectangular region, defined using the rect() functional notation.The rect() function\nThe rect() functional notation produces a region in the form of a rectangle.\nSyntax\nrect(top, right, bottom, left)\n\nwhere:\n top Is a \n&lt;length&gt;\n representing the offset for the top of the rectangle relative to the top border of the element's box.\n\n right Is a \n&lt;length&gt;\n representing the offset for the right of the rectangle relative to the left border of the element's box.\n\n bottom Is a \n&lt;length&gt;\n representing the offset for the bottom of the rectangle relative to the top border of the element's box.\n\n left Is a \n&lt;length&gt;\n representing the offset for the left of the rectangle relative to the left border of the element's box.\nInterpolation\nValues of the &lt;shape&gt; CSS data type which are rectangles can be interpolated in order to allow animations. In that case they are interpolated over their top, right, bottom and left component, each treated as a real, floating-point, number. [1] The speed of the interpolation is determined by the timing function associated with the animation.\nExamples\n\n img.clip04 { \n   clip: rect(10px, 20px, 20px, 10px);\n }\n\nSyntax\nrect(top, right, bottom, left)\n\nwhere:\n top Is a \n&lt;length&gt;\n representing the offset for the top of the rectangle relative to the top border of the element's box.\n\n right Is a \n&lt;length&gt;\n representing the offset for the right of the rectangle relative to the left border of the element's box.\n\n bottom Is a \n&lt;length&gt;\n representing the offset for the bottom of the rectangle relative to the top border of the element's box.\n\n left Is a \n&lt;length&gt;\n representing the offset for the left of the rectangle relative to the left border of the element's box.\nInterpolation\nValues of the &lt;shape&gt; CSS data type which are rectangles can be interpolated in order to allow animations. In that case they are interpolated over their top, right, bottom and left component, each treated as a real, floating-point, number. [1] The speed of the interpolation is determined by the timing function associated with the animation.\nExamples\n\n img.clip04 { \n   clip: rect(10px, 20px, 20px, 10px);\n }\n\nSpecifications\n   Specification Status Comment     CSS Level 2 (Revision 1) Recommendation\n Defined with the clip\n property  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7 or earlier)\n 5.5[*] 9.5 1.3   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n[*] From IE 5.5 to IE 7 included, the IE supported syntax of the rect() didn't allow the comma as the parameter separator, but a space. From IE 8, the standard syntax (only commas) is supported.See also\n Related CSS properties: clip\n The -moz-image-rect() function with similar coordinate than rect(). CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/string","title":"string","description":"Examples\n\n\/* Simple quote escaping *\/\n&quot;Awesome string with double quotes&quot;\n&quot;Awesome string with \\&quot; escaped double quotes&quot;\n'Awesome string with single quotes'\n&quot;Awesome string with \\' escaped single quotes&quot;\n\n\/* New line in a string *\/\n&quot;Awesome string with \\Aline break&quot;\n\n\/* String spanning over two lines (these two strings are exactly the same) *\/\n&quot;A really long \\\nawesome string&quot;\n&quot;A really long awesome string&quot;\n\nNote: Double quoted strings can also be escaped using \\22 and single quoted strings can be escaped using \\27.\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n No significant change from CSS Level 2 (Revision 1)   CSS Level 2 (Revision 1) Recommendation\n Explicitly defined; allows 6-digit Unicode escaped characters   CSS Level 1 Recommendation\n Implicitly defined; allows 4-digit Unicode escaped characters  \n\nBrowser Compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   basic 1.0 1.0 (1.0) &lt;=5.0 yes 1.0 (85)   \\xx 1.0 1.0 (1.0) 6.0 [1] yes 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support yes yes yes yes yes   \\xx yes yes yes yes yes   \n\nSee also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/time","title":"time","description":"Summary\nThe &lt;time&gt; CSS data type denotes time dimensions expressed in seconds or milliseconds. They consists of a &lt;number&gt;\n immediately followed by the unit. Like for any CSS dimension, there is no space between the unit literal and the number.\nThe following units may be used :\n s which represents a time in seconds. E.g. 0s, 1.5s, -60s. ms which represents a time in milliseconds. E.g. 0ms, 1500ms, -60000ms.\n\nConversion between s and ms follows the logical 1s = 1000ms.\nAs all units represents the same time for the value 0, the unit may be omitted in that case: 0 represents 0s, 0ms.\nExamples\nThese are valid time values:\n12s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Positive integer\n-456ms&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Negative integer\n4.3ms       Non-integer\n14mS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The unit is case-insensitive, though capital letters are not recommended for s and ms.\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zero (without the unit)\n+0s&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Zero, with a leading + and the unit\n-0ms        Zero, with a leading - and the unt(Though strange, this is an allowed value)\n\nThese are invalid time values:\n12.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This is a &lt;number&gt;, not an &lt;time&gt;, it must have a unit\n7 ms        No space is allowed between the &lt;number&gt; and the unit\n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome (Webkit) Firefox (Gecko) Internet Explorer Opera (Presto) Safari (Webkit)   Basic support &lt;=11 (?) 4.0 (2.0) 9.0 [1] 10.5 (2.3) [2] &lt;=3.2 (?)   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? no ?   \n\nSee also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/timing-function","title":"timing-function","description":"Summary\nThe &lt;timing-function&gt; CSS data type denotes a mathematical function that describes how fast one-dimensional values change during transitions or animations. This in essence lets you establish an acceleration curve, so that the speed of the animation can vary over its duration.\nIt is a function linking the time with a ratio of the output value (expressed as a &lt;number&gt;\n, with 0.0 representing the initial state, 1.0 the final state.\nThe output ratio can be greater than 1.0 (or smaller than 0.0). This causes the animation to go farther than the final state, then come back, in a kind of bouncing effect.\nNevertheless, if the output value goes outside of its possible range, such as a component of a color going greater than 255 or smaller than 0, the value is clipped to its closest allowed value (in the case of a color-component 255 and 0 respectively. Some cubic-bezier() curves exhibit this property.Values\n CSS supports two kinds of timing functions: the subset of the cubic B&eacute;zier curves that are functions and staircase functions. The most useful of these functions are given a keyword that allows to easily describe them. The cubic-bezier() class of timing-functions\n       The cubic-bezier() functional notation defines a cubic B&eacute;zier curve. As these curves are continuous, they are often used to smooth down the start and end of the animation and are therefore sometimes called easing functions. A cubic B&eacute;zier curve is defined by four points P0, P1, P2, and P3. P0 and P3 are the start and the end of the curve and, in CSS these points are fixed as the coordinates are ratios (the abscissa the ratio of time, the ordinate the ratio of the output range). P0 is (0,&nbsp;0) and represents the initial time and the initial state, P3 is (1,&nbsp;1) and represents the final time and the final state. Not all cubic B&eacute;zier curves are suitable as timing functions as not all are mathematical functions, i.e. curves that for a given abscissa have zero or one value. With P0 and P3 fixed as defined by CSS, a cubic B&eacute;zier curve is a function, and is therefore valid, if and only if the abscissas of P1 and P2 are both in the [0,&nbsp;1] range. Cubic B&eacute;zier curves with the P1 or P2 ordinate outside the [0,&nbsp;1] range may generate bouncing effects. When you specify an invalid cubic-bezier curve, CSS ignores the whole property.   \n\n\nSyntax\ncubic-bezier(x1, y1, x2, y2)\n\nwhere :\n x1, y1, x2, y2 Are &lt;number&gt;\n values representing the abscissas and ordinates of the P1 and P2 points defining the cubic B&eacute;zier curve. x1 and x2 must be in the range [0,&nbsp;1] or the value is invalid.\n\nExamples\nThese cubic B&eacute;zier curves are valid for use in CSS :\ncubic-bezier(0.1, 0.7, 1.0, 0.1)&nbsp;&nbsp; The canonical B&eacute;zier curve with four &lt;number&gt; in the [0,1] range.\ncubic-bezier(0, 0, 1, 1)           Using &lt;integer&gt; is valid as any &lt;integer&gt; is also a &lt;number&gt;.\ncubic-bezier(-0.2, 0.6, -0.1, 0) &nbsp;&nbsp;Negative values for abscissas are valid, leading to bouncing effects.\ncubic-bezier(1.1, 0, 4, 0)       &nbsp;&nbsp;Values &gt; 1.0 for abscissas are also valid.\n\nThese cubic B&eacute;zier curves definitions are invalid :\ncubic-bezier(0.1, red, 1.0, green) Though the animated output type may be a color, B&eacute;zier curves work w\/ numerical ratios.\ncubic-bezier(0.1, 4,   0.6, 2.45)  Ordinates must be in the [0, 1] range or the curve is not a function of time.\ncubic-bezier(0.3, 2.1)             The two points must be defined, there is no default value.\ncubic-bezier(0.3, -1.9, 2.1, -0.2) Ordinates must be in the [0, 1] range or the curve is not a function of time.\n\nThe steps() class of timing-functions\n\n     The steps() functional notation defines a step function dividing the domain of output values in equidistant steps. This subclass of step functions are sometimes also called staircase functions.   steps(2, start) steps(4, end)  \n\n&nbsp;\nSyntax\nsteps(number_of_steps, direction)\n\nwhere :\n number_of_steps Is a strictly positive &lt;integer&gt;\n  representing the amount of equidistant treads composing the stepping function. direction Is a keyword indicating if it the function is left- or right-continuous:  start denotes a left-continuous function, so that the first step happens when the animation begins; end denotes a right-continuous function, so that the last step happens when the animation ends.  \n\nExamples\nThese timing functions are valid :\nsteps(5, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  There is 5 treads, the last one happens right before the end of the animation.\nsteps(2, start)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A two-step staircase, the first one happening at the start of the animation.\n\nThese timing function are invalid :\nsteps(2.0, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The first parameter must be an &lt;integer&gt; and cannot be a real value, even if it is equal to one.\nsteps(-3, start)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The amount of steps must be non-negative.\nsteps(0, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; There must be at least one step.\nsteps(2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The second parameter is not optional.\nsteps(start, 3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Though of different types, the order of parameter is important.\nstep(1, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Even if there is one step, the function name is steps, with the plural 's'\nsteps(3 end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The two parameters must be separated with a comma; one or several spaces is not enough.\n\nKeywords for common timing-functions\nlinear\n     This keyword represents the timing function cubic-bezier(0.0, 0.0, 1.0, 1.0). Using this timing function, the animation goes from its initial state to its final one regularly, with a constant speed.   \n\nease\n    This keyword represents the timing function cubic-bezier(0.25, 0.1, 0.25, 1.0). This function is similar to ease-in-out, though it accelerates more sharply at the beginning and the acceleration and already starts to slow down near the medium of it.  \n\nease-in\n     This keyword represents the timing function cubic-bezier(0.42, 0.0, 1.0, 1.0). The animation begins slowly, then progressively accelerates until the final state is reached and the animation stops abruptly.   \n\nease-in-out\n     This keyword represents the timing function cubic-bezier(0.42, 0.0, 0.58, 1.0). With this timing function, the animation starts slowly, accelerates than slows down when approaching to its final state. At the begin, it behaves similarly to the ease-in function, at the end, it is similar to the ease-out function.   \n\nease-out\n     This keyword represents the timing function cubic-bezier(0.0, 0.0, 0.58, 1.0). The animation starts quickly then slow progressively down when approaching to its final state.   \n\nstep-start\n\n   This keyword represents the timing function steps(1, start). Using this timing function, the animation jumps immediately to the end state and stay in that position until the end of the animation. &nbsp;  \n\nstep-end\n     This keyword represents the timing function steps(1, end). Using this timing function, the animation stays in its initial state until the end, where it directly jumps to its final position.   \n\nThe cubic-bezier() class of timing-functions\n       The cubic-bezier() functional notation defines a cubic B&eacute;zier curve. As these curves are continuous, they are often used to smooth down the start and end of the animation and are therefore sometimes called easing functions. A cubic B&eacute;zier curve is defined by four points P0, P1, P2, and P3. P0 and P3 are the start and the end of the curve and, in CSS these points are fixed as the coordinates are ratios (the abscissa the ratio of time, the ordinate the ratio of the output range). P0 is (0,&nbsp;0) and represents the initial time and the initial state, P3 is (1,&nbsp;1) and represents the final time and the final state. Not all cubic B&eacute;zier curves are suitable as timing functions as not all are mathematical functions, i.e. curves that for a given abscissa have zero or one value. With P0 and P3 fixed as defined by CSS, a cubic B&eacute;zier curve is a function, and is therefore valid, if and only if the abscissas of P1 and P2 are both in the [0,&nbsp;1] range. Cubic B&eacute;zier curves with the P1 or P2 ordinate outside the [0,&nbsp;1] range may generate bouncing effects. When you specify an invalid cubic-bezier curve, CSS ignores the whole property.   \n\nSyntax\ncubic-bezier(x1, y1, x2, y2)\n\nwhere :\n x1, y1, x2, y2 Are &lt;number&gt;\n values representing the abscissas and ordinates of the P1 and P2 points defining the cubic B&eacute;zier curve. x1 and x2 must be in the range [0,&nbsp;1] or the value is invalid.\n\nExamples\nThese cubic B&eacute;zier curves are valid for use in CSS :\ncubic-bezier(0.1, 0.7, 1.0, 0.1)&nbsp;&nbsp; The canonical B&eacute;zier curve with four &lt;number&gt; in the [0,1] range.\ncubic-bezier(0, 0, 1, 1)           Using &lt;integer&gt; is valid as any &lt;integer&gt; is also a &lt;number&gt;.\ncubic-bezier(-0.2, 0.6, -0.1, 0) &nbsp;&nbsp;Negative values for abscissas are valid, leading to bouncing effects.\ncubic-bezier(1.1, 0, 4, 0)       &nbsp;&nbsp;Values &gt; 1.0 for abscissas are also valid.\n\nThese cubic B&eacute;zier curves definitions are invalid :\ncubic-bezier(0.1, red, 1.0, green) Though the animated output type may be a color, B&eacute;zier curves work w\/ numerical ratios.\ncubic-bezier(0.1, 4,   0.6, 2.45)  Ordinates must be in the [0, 1] range or the curve is not a function of time.\ncubic-bezier(0.3, 2.1)             The two points must be defined, there is no default value.\ncubic-bezier(0.3, -1.9, 2.1, -0.2) Ordinates must be in the [0, 1] range or the curve is not a function of time.\n\nThe steps() class of timing-functions\n\n     The steps() functional notation defines a step function dividing the domain of output values in equidistant steps. This subclass of step functions are sometimes also called staircase functions.   steps(2, start) steps(4, end)  \n\n&nbsp;\nSyntax\nsteps(number_of_steps, direction)\n\nwhere :\n number_of_steps Is a strictly positive &lt;integer&gt;\n  representing the amount of equidistant treads composing the stepping function. direction Is a keyword indicating if it the function is left- or right-continuous:  start denotes a left-continuous function, so that the first step happens when the animation begins; end denotes a right-continuous function, so that the last step happens when the animation ends.  \n\nExamples\nThese timing functions are valid :\nsteps(5, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  There is 5 treads, the last one happens right before the end of the animation.\nsteps(2, start)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A two-step staircase, the first one happening at the start of the animation.\n\nThese timing function are invalid :\nsteps(2.0, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The first parameter must be an &lt;integer&gt; and cannot be a real value, even if it is equal to one.\nsteps(-3, start)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The amount of steps must be non-negative.\nsteps(0, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; There must be at least one step.\nsteps(2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The second parameter is not optional.\nsteps(start, 3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Though of different types, the order of parameter is important.\nstep(1, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Even if there is one step, the function name is steps, with the plural 's'\nsteps(3 end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The two parameters must be separated with a comma; one or several spaces is not enough.\n\nKeywords for common timing-functions\nlinear\n     This keyword represents the timing function cubic-bezier(0.0, 0.0, 1.0, 1.0). Using this timing function, the animation goes from its initial state to its final one regularly, with a constant speed.   \n\nease\n    This keyword represents the timing function cubic-bezier(0.25, 0.1, 0.25, 1.0). This function is similar to ease-in-out, though it accelerates more sharply at the beginning and the acceleration and already starts to slow down near the medium of it.  \n\nease-in\n     This keyword represents the timing function cubic-bezier(0.42, 0.0, 1.0, 1.0). The animation begins slowly, then progressively accelerates until the final state is reached and the animation stops abruptly.   \n\nease-in-out\n     This keyword represents the timing function cubic-bezier(0.42, 0.0, 0.58, 1.0). With this timing function, the animation starts slowly, accelerates than slows down when approaching to its final state. At the begin, it behaves similarly to the ease-in function, at the end, it is similar to the ease-out function.   \n\nease-out\n     This keyword represents the timing function cubic-bezier(0.0, 0.0, 0.58, 1.0). The animation starts quickly then slow progressively down when approaching to its final state.   \n\nstep-start\n\n   This keyword represents the timing function steps(1, start). Using this timing function, the animation jumps immediately to the end state and stay in that position until the end of the animation. &nbsp;  \n\nstep-end\n     This keyword represents the timing function steps(1, end). Using this timing function, the animation stays in its initial state until the end, where it directly jumps to its final position.   \n\nThe steps() class of timing-functions\n\n     The steps() functional notation defines a step function dividing the domain of output values in equidistant steps. This subclass of step functions are sometimes also called staircase functions.   steps(2, start) steps(4, end)  \n\n&nbsp;\nSyntax\nsteps(number_of_steps, direction)\n\nwhere :\n number_of_steps Is a strictly positive &lt;integer&gt;\n  representing the amount of equidistant treads composing the stepping function. direction Is a keyword indicating if it the function is left- or right-continuous:  start denotes a left-continuous function, so that the first step happens when the animation begins; end denotes a right-continuous function, so that the last step happens when the animation ends.  \n\nExamples\nThese timing functions are valid :\nsteps(5, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  There is 5 treads, the last one happens right before the end of the animation.\nsteps(2, start)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A two-step staircase, the first one happening at the start of the animation.\n\nThese timing function are invalid :\nsteps(2.0, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The first parameter must be an &lt;integer&gt; and cannot be a real value, even if it is equal to one.\nsteps(-3, start)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The amount of steps must be non-negative.\nsteps(0, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; There must be at least one step.\nsteps(2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The second parameter is not optional.\nsteps(start, 3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Though of different types, the order of parameter is important.\nstep(1, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Even if there is one step, the function name is steps, with the plural 's'\nsteps(3 end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The two parameters must be separated with a comma; one or several spaces is not enough.\n\nSyntax\nsteps(number_of_steps, direction)\n\nwhere :\n number_of_steps Is a strictly positive &lt;integer&gt;\n  representing the amount of equidistant treads composing the stepping function. direction Is a keyword indicating if it the function is left- or right-continuous:  start denotes a left-continuous function, so that the first step happens when the animation begins; end denotes a right-continuous function, so that the last step happens when the animation ends.  \n\nExamples\nThese timing functions are valid :\nsteps(5, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  There is 5 treads, the last one happens right before the end of the animation.\nsteps(2, start)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A two-step staircase, the first one happening at the start of the animation.\n\nThese timing function are invalid :\nsteps(2.0, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The first parameter must be an &lt;integer&gt; and cannot be a real value, even if it is equal to one.\nsteps(-3, start)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The amount of steps must be non-negative.\nsteps(0, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; There must be at least one step.\nsteps(2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The second parameter is not optional.\nsteps(start, 3)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Though of different types, the order of parameter is important.\nstep(1, end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Even if there is one step, the function name is steps, with the plural 's'\nsteps(3 end)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The two parameters must be separated with a comma; one or several spaces is not enough.\n\nKeywords for common timing-functions\nlinear\n     This keyword represents the timing function cubic-bezier(0.0, 0.0, 1.0, 1.0). Using this timing function, the animation goes from its initial state to its final one regularly, with a constant speed.   \n\nease\n    This keyword represents the timing function cubic-bezier(0.25, 0.1, 0.25, 1.0). This function is similar to ease-in-out, though it accelerates more sharply at the beginning and the acceleration and already starts to slow down near the medium of it.  \n\nease-in\n     This keyword represents the timing function cubic-bezier(0.42, 0.0, 1.0, 1.0). The animation begins slowly, then progressively accelerates until the final state is reached and the animation stops abruptly.   \n\nease-in-out\n     This keyword represents the timing function cubic-bezier(0.42, 0.0, 0.58, 1.0). With this timing function, the animation starts slowly, accelerates than slows down when approaching to its final state. At the begin, it behaves similarly to the ease-in function, at the end, it is similar to the ease-out function.   \n\nease-out\n     This keyword represents the timing function cubic-bezier(0.0, 0.0, 0.58, 1.0). The animation starts quickly then slow progressively down when approaching to its final state.   \n\nstep-start\n\n   This keyword represents the timing function steps(1, start). Using this timing function, the animation jumps immediately to the end state and stay in that position until the end of the animation. &nbsp;  \n\nstep-end\n     This keyword represents the timing function steps(1, end). Using this timing function, the animation stays in its initial state until the end, where it directly jumps to its final position.   \n\nlinear\n     This keyword represents the timing function cubic-bezier(0.0, 0.0, 1.0, 1.0). Using this timing function, the animation goes from its initial state to its final one regularly, with a constant speed.   \n\nease\n    This keyword represents the timing function cubic-bezier(0.25, 0.1, 0.25, 1.0). This function is similar to ease-in-out, though it accelerates more sharply at the beginning and the acceleration and already starts to slow down near the medium of it.  \n\nease-in\n     This keyword represents the timing function cubic-bezier(0.42, 0.0, 1.0, 1.0). The animation begins slowly, then progressively accelerates until the final state is reached and the animation stops abruptly.   \n\nease-in-out\n     This keyword represents the timing function cubic-bezier(0.42, 0.0, 0.58, 1.0). With this timing function, the animation starts slowly, accelerates than slows down when approaching to its final state. At the begin, it behaves similarly to the ease-in function, at the end, it is similar to the ease-out function.   \n\nease-out\n     This keyword represents the timing function cubic-bezier(0.0, 0.0, 0.58, 1.0). The animation starts quickly then slow progressively down when approaching to its final state.   \n\nstep-start\n\n   This keyword represents the timing function steps(1, start). Using this timing function, the animation jumps immediately to the end state and stay in that position until the end of the animation. &nbsp;  \n\nstep-end\n     This keyword represents the timing function steps(1, end). Using this timing function, the animation stays in its initial state until the end, where it directly jumps to its final position.   \n\nSpecifications\n   Specification Status Comment     CSS Transitions Level 3 Working Draft\n Defined anonymously   CSS Animations Level 3 Working Draft\n Defined anonymously, says to see definition in the CSS Transitions Module  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 4.0 (2.0) (Supported) -- 10.5 [1] 3.1   cubic-bezier() w\/ ordinate &notin;&nbsp;[0,1] 4.0 (2.0) -- -- -- Nightly [2]   steps() 4.0 (2.0) -- -- -- --   \n\n    Feature Firefox Mobile (Gecko) Android IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 4.0 (2.0) (Supported) -- 10 [3] 2.0 [4]   cubic-bezier() w\/ ordinate &notin;&nbsp;[0,1] 4.0 (2.0) -- -- -- --   steps() 4.0 (2.0) -- -- -- 5.0 [5]   \n\nSee also\n The transition-timing-function\n and animation-timing-function\n needing a &lt;timing-function&gt; value. CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Universal_selectors","title":"Universal selectors","description":"Summary\nAn Asterisk (*) is the universal selector for CSS. It matches a single element of any type. Omitting the Asterisk with simple selectors has the same effect. For instance, *.warning and .warning are considered equal.\nIn CSS 3 Asterisk (*) may be used in combination with namespace\n ns|* - matches all elements in namespace ns *|* - matches all elements |* - matches all elements without any declared namespace\n\nExamples\n\r\n          *[lang=en]{color:green;}\n*.warning {color:red;}\n*#maincontent {border: 1px solid blue;\r\n        \n...where...\n\r\n          &lt;p class=&quot;warning&quot;&gt;\n  &lt;span lang=&quot;en-us&quot;&gt;A green span&lt;\/span&gt; in a red paragraph.\n&lt;\/p&gt;\n&lt;p id=&quot;maincontent&quot; lang=&quot;en-gb&quot;&gt;\n  &lt;span class=&quot;warning&quot;&gt;A red span&lt;\/span&gt; in a green paragraph.\n&lt;\/p&gt;\r\n        \n...should look like\nA green span in a red paragraph.\nA red span in a green paragraph (with a border.)\nNotes\nAuthors are discouraged from using the universal selector as it is the most expensive CSS selector in terms of Webpage Performance.\nSpecifications\n CSS 2 CSS 3\n\n&nbsp;&nbsp;&nbsp;\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ?   Firefox 1   Netscape ?   Opera ?   Safari ?  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Type_selectors","title":"Type selectors","description":"Summary\nCSS type selectors match elements by node name. Used alone, therefore, a type selector for a particular node name selects all elements of that type &mdash; that is, with that node name &mdash; in the document.\nSyntax\n\nnodeName { style properties }\n\nExamples\n\r\n          span {\n  background-color: DodgerBlue;\n}\r\n        \n...where...\n\r\n          &lt;span&gt;Here's a span with some text.&lt;\/span&gt;\n  &lt;p&gt;Here's a p with some text.&lt;\/p&gt;\r\n        \n... should look like ...\nHere's a span with some text.\nHere's a p with some text.\nNotes\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/uri","title":"uri","description":"Summary\nThe &lt;url&gt; CSS data type denotes a pointer to a resource. It has no proper syntax and can only be expressed through the url() functional notation.\nURI or URL?  There is a difference between a URI and a URL. A URL describes the location of the resource, the URI describes an id of the resource . A URI may be a location, a URL, or a name, a URN, of a resource.  In CSS Level 1, the url() functional notation was introduced to describe... URL, i.e. locations (a &lt;url&gt; CSS data type, though it wasn't explicitly defined that way).  In CSS Level 2, the same functional notation was extended to describe any URI, being a URL or URN. This led to the confusing fact that url() was used to create a &lt;uri&gt; CSS data type. Not only was this confusing, but URN are almost never used in the CSS usual case.  To fix this, CSS Level 3 came back to the initial definition, this time explicitly defined. The functional notation url() denotes a &lt;url&gt; CSS data type and no more the more generic &lt;uri&gt; CSS data type.  Remark that these semantic details doesn't change much for a web author, or the implementation details of the data type.\nMany CSS properties take a URL as value, such as background-image\n, cursor\n, @font-face\n, list-style\n etc.&nbsp;&nbsp;The url() functional notation\nThe URI may be quoted by simple quotes or double quotes.&nbsp; Relative URIs are allowed and are relative to the URL of stylesheet (and not to the URL of the web page).Syntax\n\n &lt;a_css_property&gt;:  url(&quot;http:\/\/mysite.example.com\/mycursor.png&quot;)\n\n &lt;a_css_property&gt;:  url(http:\/\/mysite.example.com\/mycursor.png)\n\nExamples\n\n.topbanner { background: url(&quot;topbanner.png&quot;) #00D no-repeat fixed; }\n\n\nul { list-style: square url(http:\/\/www.example.com\/redball.png) }\n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n No significant change from CSS Level 2 (Revision 1)   CSS Level 2 (Revision 1) Recommendation\n No significant change fromm CSS Level 1   CSS Level 1 Recommendation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 1.0 (1.0) 3.0 3.5 1.0 (85)   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 1.0 1.0 (3.5) yes yes 1.0   \n\nSee also\n CSS Reference index CSS Data Types : &lt;angle&gt;, &lt;color&gt;, &lt;frequency&gt;, &lt;gradient&gt;, &lt;identifier&gt;, &lt;image&gt;, &lt;integer&gt;, &lt;length&gt;, &lt;number&gt;, &lt;percentage&gt;, &lt;ratio&gt;, &lt;resolution&gt;, &lt;shape&gt;, &lt;string&gt;, &lt;time&gt;, &lt;timing-function&gt;, &lt;uri&gt;\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Attribute_selectors","title":"Attribute selectors","description":"Summary\nAttribute selectors select an element using the presence of a given attribute or attribute value.\n [attr] Represents an element with an attribute name of attr. [attr=value] Represents an element with an attribute name of attr and whose value is exactly &quot;value&quot;. [attr~=value] Represents an element with an attribute name of attr whose value is a whitespace-separated list of words, one of which is exactly &quot;value&quot;. [attr|=value] Represents an element with an attribute name of attr whose value is a hyphen-separated list of words, one of which is exactly &quot;value&quot;. It can be used for language subcode matches. [attr^=value] Represents an element with an attribute name of attr and whose value is the prefixed by &quot;value&quot;. [attr$=value] Represents an element with an attribute name of attr and whose value is the suffixed by &quot;value&quot;. [attr*=value] Represents an element with an attribute name of attr and whose value contains at least one occurrence of string &quot;value&quot; as substring.\n\nExamples\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n    \/* All spans with a &quot;lang&quot; attribute are bold *\/\n    span[lang] {font-weight:bold;}\n \n    \/* All spans in Portuguese are green *\/\n    span[lang=&quot;pt&quot;] {color:green;}\n\n    \/* All spans in US English are blue  *\/\n    span[lang~=&quot;en-us&quot;] {color: blue;}\n\n    \/* Any span in Chinese is red, matches simplified (zh-CN) or traditional (zh-TW) *\/\n    span[lang|=&quot;zh&quot;] {color: red;}\n\n    \/* All internal links have a gold background *\/\n    a[href^=&quot;#&quot;] {background-color:gold}\n\n    \/* All links to urls ending in &quot;.cn&quot; are red *\/\n    a[href$=&quot;.cn&quot;] {color: red;}\n\n    \/* All links to with &quot;example&quot; in the url have a grey background *\/\n    a[href*=&quot;example&quot;] {background-color: #CCCCCC;}\n&lt;\/style&gt;\r\n        \n...where...\n\r\n          &lt;div class=&quot;hello-example&quot;&gt;\n    &lt;a href=&quot;http:\/\/example.com&quot;&gt;English:&lt;\/a&gt;\n    &lt;span lang=&quot;en-us en-gb en-au en-nz&quot;&gt;Hello World!&lt;\/span&gt;\n&lt;\/div&gt;\n&lt;div class=&quot;hello-example&quot;&gt;\n    &lt;a href=&quot;#portuguese&quot;&gt;Portuguese:&lt;\/a&gt;\n    &lt;span lang=&quot;pt&quot;&gt;Ol&aacute; Mundo!&lt;\/span&gt;\n&lt;\/div&gt;\n&lt;div class=&quot;hello-example&quot;&gt;\n    &lt;a href=&quot;http:\/\/example.cn&quot;&gt;Chinese (Simplified):&lt;\/a&gt;\n    &lt;span lang=&quot;zh-CN&quot;&gt;&#19990;&#30028;&#24744;&#22909;&#65281;&lt;\/span&gt;\n&lt;\/div&gt;\n&lt;div class=&quot;hello-example&quot;&gt;\n    &lt;a href=&quot;http:\/\/example.cn&quot;&gt;Chinese (Traditional):&lt;\/a&gt;\n    &lt;span lang=&quot;zh-TW&quot;&gt;&#19990;&#30028;&#24744;&#22909;&#65281;&lt;\/span&gt;\n&lt;\/div&gt;\r\n        \n...should look like...\nEnglish: Hello World!\nPortuguese: Ol&aacute; Mundo!\nChinese (Simplified): &#19990;&#30028;&#24744;&#22909;&#65281;\nChinese (Traditional): &#19990;&#30028;&#24744;&#22909;&#65281;\nSpecifications\n CSS 2 CSS 3\n\n&nbsp;\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ?   Firefox 1   Netscape ?   Opera ?   Safari ?  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Adjacent_sibling_selectors","title":"Adjacent sibling selectors","description":"Summary\nThe + combinator matches the second element only if it is immediately following the first element.\nSyntax\nelement + element { style properties }\n\nExamples\n\r\n          li + li {\n  color: red;\n}\r\n        \n...where...\n\r\n          &lt;ul&gt;\n    &lt;li&gt;One&lt;\/li&gt;\n    &lt;li&gt;Two&lt;\/li&gt;\n    &lt;li&gt;Three&lt;\/li&gt;\n  &lt;\/ul&gt;\r\n        \n... should look like ...\n One Two Three\n\nAnother use case might be styling of &quot;caption span&quot;s of the following &lt;img&gt;\n elements:\n\r\n          img + span.caption {\n  font-style: italic;\n}\r\n        \nwill match the following &lt;span&gt;\n elements:\n\r\n          &lt;img src=&quot;photo1.jpg&quot;&gt;&lt;span class=&quot;caption&quot;&gt;The first photo&lt;\/span&gt;\n&lt;img src=&quot;photo2.jpg&quot;&gt;&lt;span class=&quot;caption&quot;&gt;The second photo&lt;\/span&gt;\r\n        \nSee also\n General sibling selectors\n\n\nNotes\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Child_selectors","title":"Child selectors","description":"Summary\nThe &gt; combinator separates two selectors and matches only those elements matched by the second selector that are direct children of elements matched by the first. By contrast, when two selectors are combined with the descendant selector, the combined selector expression matches those elements matched by the second selector for which there exists an ancestor element matched by the first selector, regardless of the number of &quot;hops&quot;&nbsp;up the DOM.\nSyntax\n\nselector1 &gt; selector2 { style properties }\n\nExamples\n\r\n          span { background-color: white; }\ndiv &gt; span {\n  background-color: DodgerBlue;\n}\r\n        \nwhen applied to markup as follows:\n\r\n          &lt;div&gt;\n  &lt;span&gt;Span 1. In the div.\n    &lt;span&gt;Span 2. In the span that's in the div.&lt;\/span&gt;\n  &lt;\/span&gt;\n&lt;\/div&gt;\n&lt;span&gt;Span 3. Not in a div at all&lt;\/span&gt;\r\n        \nshould result in:\nSpan 1. In the div. Span 2. In the span that's in the div.\nSpan 3. Not in a div at all.\nNotes\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Descendant_selectors","title":"Descendant selectors","description":"Summary\nThe &#9251; combinator (that's meant to represent a space, or more properly one or more whitespace characters) combines two selectors such that the combined selector matches only those elements matching the second selector for which there is an ancestor element matching the first selector. Descendant selectors are similar to child selectors, but they do not require that the relationship between matched elements be strictly parent-child.\nSyntax\n\nselector1 selector2 { style properties }\n\nExamples\n\r\n          span { background-color: white; }\ndiv span { background-color: DodgerBlue; }\r\n        \n...where...\n\r\n          &lt;div&gt;\n  &lt;span&gt;Span 1.\n    &lt;span&gt;Span 2.&lt;\/span&gt;\n  &lt;\/span&gt;\n&lt;\/div&gt;\n&lt;span&gt;Span 3.&lt;\/span&gt;\r\n        \n... should look like ...\nSpan 1. Span 2.\nSpan 3.\nNotes\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Pseudo-elements","title":"Pseudo-elements","description":"Summary\nJust like pseudo-classes\n, pseudo-elements are added to selectors but instead of describing a special state they allow you to style certain parts of a document. For example the ::first-line\n pseudo-element will only target the first line of a element specified by the selector.Syntax\n\nselector:pseudo-element {\n&nbsp; property: value;\n}\n\nExamples\n :after\n :before\n ::first-letter\n ::first-line\n ::selection\n\nNotes Sometimes you will see double colons (::) instead of just one (:). This is part of CSS3 and an attempt to distinguish between pseudo-classes and pseudo-elements. Most browsers support both values. Note: ::selection always start with double colons (::).\n   Browser Lowest Version Support of   Internet Explorer 8.0 :pseudo-element   Firefox (Gecko) 1.0 (1.0) :pseudo-element   1.0 (1.5) :pseudo-element ::pseudo-element    Opera 4.0 :pseudo-element   7.0 :pseudo-element :: pseudo-element    Safari (WebKit) 1.0 (85) :pseudo-element :: pseudo-element   \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aafter","title":":after | ::after","description":"Summary\n:after creates a pseudo-element that is the last child of the element matched. Typically used to add cosmetic content to an element, by using the content\n CSS property. This element is inline by default.\n\nFirefox 3.5 noteFirefox prior to version 3.5 only implemented the CSS 2.0 version of :after. Not allowed were position, float, list-style-* and some display properties. Firefox 3.5 removed those restrictions. Note this is independent from the colon notation issue mentioned below.\n\n\nSyntax\n\nelement:after  { style properties }  \/* CSS2 syntax *\/\n\nelement::after { style properties }  \/* CSS3 syntax *\/\nThe ::after notation was introduced in CSS 3 in order to establish a discrimination between pseudo-classes and pseudo-elements. Browsers also accept the notation :after introduced in CSS 2.\nNote:&nbsp; Microsoft Internet Explorer 8 supports the :after notation only.\nExamples\n\n.boringtext:after {\n   content:    &quot; Thank you for reading all this!&quot;; \n   font-size:  small; \n   color:      red;\n   background: gray; \n}\nSpecifications\n CSS 2.1 Generated Content CSS 2.1 Selectors CSS 3 Selectors Working draft\n\nBrowser compatibility\n   Browser Lowest Version Support of   Internet Explorer 8.0 :after   Firefox (Gecko) 1.0 (1.0) :after   1.0 (1.5) :after | ::after   Opera 4.0 :after   7.0 :after | ::after   Safari (WebKit) 1.0 (85) :after | ::after  \n\nSee Also\n:before\n, content\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Abefore","title":":before  | ::before","description":"Summary\n:before creates a pseudo-element that is the first child of the element matched. Often used to add cosmetic content to an element, by using the content\n property. This element is inline by default.\n\nFirefox 3.5 noteFirefox prior to version 3.5 only implemented the CSS 2.0 version of :before. Not allowed were position, float, list-style-* and some display properties. Firefox 3.5 removed those restrictions. (Note this is independent from the :: notation issue mentioned below.)\n\n\nSyntax\n\nelement:before  { style properties }  \/* CSS2 syntax *\/\n\nelement::before { style properties }  \/* CSS3 syntax *\/\n\nThe ::before notation was introduced in CSS 3 in order to establish a discrimination between pseudo-classes and pseudo-elements. Browsers also accept the notation :before introduced in CSS 2.\nNote:&nbsp; Microsoft Internet Explorer 8 only supports the :before notation.\nExamples\n\nq:before { content: &quot;&raquo;&quot; }\nq:after { content: '&laquo;' }\n\n&lt;q&gt;Some quotes&lt;\/q&gt;, he said, &lt;q&gt;are better than none&lt;\/q&gt;.\n\nResult:&nbsp; &nbsp; &raquo;Some quotes&laquo;, he said, &raquo;are better than none&laquo;.\nNotes\nAlthough the positioning fixes in Firefox 3.5 do not allow content to be generated as a separate previous sibling (as per the CSS spec stating &quot;The :before and :after pseudo-elements elements interact with other boxes... as if they were real elements inserted just inside their associated element.&quot;), they can be used to provide a slight improvement on tableless layouts (e.g., to achieve centering)&nbsp;in that, as long as the content to be centered is wrapped in a further child, a column before and after the content can be introduced without adding a previous or following sibling (i.e., it is perhaps more semantically correct to add an additional span as below, than it would to add an empty &lt;div\/&gt; before and after). (And always remember to add a width to a float, since, otherwise, it will not float!)\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n\n#floatme {float:left; width:50%;}\n\n.example:before {\n  content: &quot;Floated Before&quot;; \/* To get an empty column, just indicate a hex code for a non-breaking space: \\a0 as the content (use \\0000a0 when following such a space with other characters) *\/\n  float: left;\n  width:25%\n}\n.example:after {\n  content: &quot;Floated After&quot;;\n  float: right;\n  width:25%\n}\n\n\/* For styling *\/\n.example:before, .example:after, .first {\n  background: yellow;\n  color: red;\n}\n\n\n&lt;\/style&gt;\n&lt;div class=&quot;example&quot;&gt;\n&lt;span id=&quot;floatme&quot;&gt;&quot;Floated Before&quot; should be generated on the left of the \nviewport and not allow overflow in this line to flow under it. Likewise \nshould &quot;Floated After&quot; appear on the right of the viewport and not allow this \nline to flow under it.&lt;\/span&gt;\n&lt;\/div&gt;\r\n        \nSpecifications\n CSS 2.1 Generated Content CSS 2.1 Selectors CSS 3 Selectors \n\nBrowser compatibility\n   Browser Lowest Version Support of   Internet Explorer 8.0 :before   Firefox (Gecko) 1.0 (1.0) :before   1.0 (1.5) :before | ::before   Safari (WebKit) 1.0 (85) :before | ::before   Opera 4.0 :before   7.0 :before | ::before  \n\nSee Also\n:after\n, content\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A%3Afirst-letter","title":"::first-letter | :first-letter","description":"Summary\nThe :first-letter CSS pseudo-element selects the first letter of the first line of a block, if it is not preceded by any other content (such as images or inline tables) on its line.\nExamples\n\/* make the first letter of every paragraph red and big *\/\n\np:first-letter  { color: red;  font-size: 130%; }\nSpecifications\n CSS 2.1 Selectors #first-letter CSS 3 Selectors #first-letter Working draft\n\nBrowser compatibility\nCSS 3 introduced the ::first-letter notation in order to establish a discrimination between pseudo-classes and pseudo-elements. Don't use the double colon notation yet for compatibility with Internet Explorer.\n   Browser Lowest Version Support of   Internet Explorer 5.5 :first-letter   Firefox (Gecko) 1.0 (1.0) :first-letter   1.0 (1.5) :first-letter | ::first-letter   Opera 3.5 :first-letter   7.0 :first-letter | ::first-letter   Safari (WebKit) 1.0 :first-letter | ::first-letter  \n\n&nbsp;"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A%3Afirst-line","title":"::first-line | :first-line","description":"Summary\nThe :first-line CSS pseudo-element applies styles to the first line of a element. However, the selector :first-line does not match any real HTML element.\nExamples\n\n\/* change the letters of the first line of every paragraph to uppercase *\/\n\np:first-line { text-transform: uppercase }\n\nBrowser compatibility\n   Browser Lowest version Support of   Internet Explorer 5.5 :first-line   Firefox (Gecko) 1.0 (1.0) :first-line   1.0 (1.5) :first-line | ::first-line   Opera 3.5 :first-line   7.0 :first-line | ::first-line   Safari (WebKit) 1.0 (85) :first-line | ::first-line  \n\nFor compatibility with IE 5.5-8 avoid CSS3 notation ::first-line (use CSS2 notation :first-line).\nSpecifications\n CSS 2.1 Selectors #first-line CSS 3 Selectors #first-line Working draft\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A%3Aselection","title":"::-moz-selection | ::selection","description":"Summary\nThe ::-moz-selection (::selection) pseudo-element applies to the portion of a document that has been highlighted (e.g. selected with the mouse) by the user.\nExamples\n\/* draw any selected text yellow on red background *\/\n::-moz-selection { color: gold;  background: red; }\n::selection      { color: gold;  background: red; }\n\n\/* draw selected text in a paragraph white on black *\/\np::-moz-selection { color: white;  background: black; }\np::selection      { color: white;  background: black; }\nNotes\nGecko\/Firefox supports ::-moz-selection, use also ::selection other browsers.\nThe following properties apply to ::-moz-selection : color, background and background-color (background-image is ignored).\nSpecifications\n::selection was drafted for CSS3 Selectors but removed from the current CSS3 draft. Anyhow, it's implemented in browsers and support will continue.\n CSS 3 Selectors (Draft 2005-12-15) Obsolete CSS 3 Selectors #selection Working draft\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1 1.0 9 9.5 1.1   Element ::selection ::moz-selection&nbsp;\n-moz ::selection ::selection ::selection   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1 1.0 9 9.5 1.1   Element ::selection ::moz-selection&nbsp;\n-moz ::selection ::selection ::selection   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A%3A-moz-progress-bar","title":"::-moz-progress-bar","description":"Summary\nThe ::-moz-progress-bar pseudo-element applies to the area of an HTML&nbsp;&lt;progress&gt;\n&nbsp;element that represents the amount of progress that has happened so far. This lets you, for example, change the color of progress bars.\nYou have pretty broad capabilities to style the bar. This can be especially useful with indeterminate bars (via the :indeterminate\n pseudo-class), where you may wish to substantially change the default appearance; you can change the width and positioning of the bar, for example. (By which we probably mean the whole element's dimensions and position, not just the painted part of the element, as featured in the screen shot below.)\nExamples\nThis example styles the progress meter portion of the progress bar with ID&nbsp;redbar with the color red.\n\r\n          #redbar::-moz-progress-bar {\n  background-color: red;\n}\r\n        \nA bar using this style might look something like this:\n\nSee also\n &lt;progress&gt;\n\nSee also\n &lt;progress&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Pseudo-classes","title":"Pseudo-classes","description":"Summary\nPseudo-classes are added to selectors to specify a special state of the selector, for example :hover\n which will apply a style when the user hovers over the element specified by the selector.\nSyntax\n\nselector:pseudo-class {\n&nbsp; property: value;\n} \n\nExamples\n :link\n :visited\n :active\n :hover\n :focus\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Avisited","title":":visited","description":"Summary\nThe :visited pseudo-class lets you select only links that have been visited.\n \nGecko 2.0 note(Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\n Starting in Firefox 4, major limitations to the styles you can apply using this selector have been introduced. For more information on the limitations and the motivation for them, see Privacy and the :visited selector\n. The same limitations have been adopted by other browsers, including Safari 5\/4.1 and Chrome 6.\nExamples\n\na:visited { color: #4b2f89; }\na:visited { background-color:&nbsp;white } \nSpecifications\n CSS 2.1 Selectors #link CSS 3 Selectors #links\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer 3.5   Firefox 1.0   Opera 3.5   Safari 1.0  \n\nSee also\n Privacy and the :visited selector\n :link\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aactive","title":":active","description":"Specifications\n CSS 2.1 Selectors #dynamic-pseudo-classes CSS 3 Selectors #useraction-pseudos\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer 4.0&nbsp; (only for &lt;a&gt;)   Firefox 1.0   Opera 5.0&nbsp; (only for &lt;a&gt;) 7.0   Safari 1.0  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Alink","title":":link","description":"Summary\nThe :link pseudo-class lets you select only links that have not yet been visited.\nExamples\na:link {color:slaygrate;}\n.external:link {background-color:lightblue;}\nSpecifications\n CSS 2.1 Selectors #link CSS 3 Selectors #links\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1 1.0 (1.7 or earlier)\n 3.0 3.5 1.0   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support 1.5 1.0 (1.9.2)\n ? ? 3.2   \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Ahover","title":":hover","description":"Summary\nThe :hover CSS pseudo-class matches when the user designates an element with a pointing device, but does not necessarily activate it.\nVisual user agents, like Firefox, Internet Explorer, Safari, Opera or Chrome, apply the associated style when the cursor (mouse pointer) hovers over an element.\nUsage Note: on touch screens :hover is problematic or impossible. The :hover pseudo-class never matches, or matches for a short moment after touching an element. As touchscreen devices are very common, it is important for web developer not to have content accessible only when hovering over it, as this content would be hidden for users of such devices.Examples\n:link:hover { outline: dotted red; }\n\n.foo:hover { background: gold; }\nSpecifications\n CSS 2.1 Selectors #dynamic-pseudo-classes\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   for &lt;a&gt; elements 0.2 1.0 (1.7 or earlier)\n 4.0 4.0 2.0.4 (419) various bugs before   for all elements 0.2 1.0 (1.7 or earlier)\n 7.0 7.0 2.0.4 (419) various bugs before   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Afocus","title":":focus","description":"Specifications\n CSS 2.1 Selectors #dynamic-pseudo-classes CSS 3 Selectors #useraction-pseudos\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer 8.0   Firefox 1.0   Opera 7.0   Safari (1.0 ?)  \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Alang","title":":lang","description":"Summary\nThe :lang(language-code pseudo-class matches elements based on the langauge the element is determined to be in. In HTML, the language is determined by a combination of the lang attribute, the &lt;meta&gt;\n element, and possibly by information from the protocol (such as HTTP headers). For other document types there may be other document methods for determining the language.\nAcceptable language-code strings are specified in in HTML 4.0 specification.Syntax\n\nelement:lang(language-code) { style properties }\n\nExamples\nIn this example, the lang selector is used to match on the parent of a quote element using child selectors. Its not meant to demonstrate the only way to do this, or even the correct way (which would depend on the type of document). Note, Unicode values are used to specify special quote characters.\n\r\n          :lang(en) &gt; Q { quotes: '\\201C' '\\201D' '\\2018' '\\2019'; }\n:lang(fr) &gt; Q { quotes: '&laquo; ' ' &raquo;'; }\n:lang(de) &gt; Q { quotes: '&raquo;' '&laquo;' '\\2039' '\\203A'; }\r\n        \n...where...\n\r\n          &lt;div lang=&quot;fr&quot;&gt;&lt;q&gt;This French quote has a &lt;q&gt;nested&lt;\/q&gt; quote.&lt;\/q&gt;&lt;\/div&gt;\n  &lt;div lang=&quot;de&quot;&gt;&lt;q&gt;This German quote has a &lt;q&gt;nested&lt;\/q&gt; quote.&lt;\/q&gt;&lt;\/div&gt;\n  &lt;div lang=&quot;en&quot;&gt;&lt;q&gt;This English quote has a &lt;q&gt;nested&lt;\/q&gt; quote.&lt;\/q&gt;&lt;\/div&gt;\r\n        \n... should look like ... \n&laquo;This French quote has a &laquo;nested&raquo; quote.&raquo;\n&raquo;This German quote has a &lsaquo;nested&rsaquo; quote.&laquo;\n&ldquo;This English quote has a &lsquo;nested&rsquo; quote.&rdquo;\nBrowser compatibility\n   Browser lowest version   Internet Explorer 8.0   Firefox (Gecko) 1.0 (1.2)   Opera 8.0   Safari (WebKit) 3.1 (525)  \n\nRelated Pages\n Language Property\n\nExternal References\n W3C CSS2: lang W3C HTML4: Language codes W3C DOM Level 2 HTML: lang\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Anot","title":":not()","description":"Summary\nThe negation pseudo-class, :not(X), is a functional notation taking a simple selector X as an argument. It matches an element that is not represented by the argument. X must not contain another negation selector, or any pseudo-elements.\nThe specificity of the :not pseudo-class is the specificity of its argument. The :not pseudo-class does not add to the selector specificity, unlike other pseudo-classes.\nNotes:  Useless selectors can be written using this pseudo-class. E.g. :not(*) matching any element which is not any element will never be applied. It is possible to rewrite other rules. E.g. foo:not(bar)will match the same element than the simple foo. Nevertheless the specificity of the first one is higher. \nSyntax\n\n:not(selector) { style properties }\nExamples\nUsage Example\n\np:not(.classy) { color: red; }\n:not(p) { color: green; }\n...where...\n\n&lt;p&gt;Some text.&lt;\/p&gt;\n&lt;p class=&quot;classy&quot;&gt;Some other text.&lt;\/p&gt;\n&lt;span&gt;One more text&lt;span&gt;\n\n...should look like...\nSome text.\nSome other text.\nOne more text\nUsage Example\n\np:not(.classy) { color: red; }\n:not(p) { color: green; }\n...where...\n\n&lt;p&gt;Some text.&lt;\/p&gt;\n&lt;p class=&quot;classy&quot;&gt;Some other text.&lt;\/p&gt;\n&lt;span&gt;One more text&lt;span&gt;\n\n...should look like...\nSome text.\nSome other text.\nOne more text\nSpecifications\n CSS 3 Selectors #negation  \n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer 9.0   Firefox (Gecko) 1.0 (1.0)   Opera 9.5   Safari (WebKit) 1.0 (85)  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Afirst","title":":first","description":"Summary\nThe :first page pseudo-class describes the styling of the first page when printing a document.\nNote: you can not change all CSS properties. You can only change the margins, orphans, widows, and page breaks of the document. All other CSS properties will be ignored.Examples\n\n@page :first {\n&nbsp; margin:2in 3in;\n} \n\nNote: you may only use the absolute length units when defining the margin. Please see the page about length for more information.\nSpecifications\nCSS 2.1 Paged media #page-selectors\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer   8.0   Firefox (Gecko) ---   Opera   9.2   Safari (WebKit) ---  \nSee also\n @page\n :left\n :right\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aleft","title":":left","description":"Summary\nThe :left page pseudo-class matches any left page when printing a page. It allows to describe the styling of left-side pages.\nWhether the page is left or right is decided by the major writing direction of the document. For example, if the first page has a major writing direction of left-to-right then it will be a :right page and if it has a major writing direction of right-to-left then it will be a :left page.\nNote: You can't change all CSS properties. You can only change the the margin, padding, border, and background properties of the page box. All other CSS properties will be ignored, and only the page box, not the document content on the page, will be affected.\nExamples\n\n@page :left {\n&nbsp; margin:2in 3in;\n} \n\nSpecifications\nCSS 2.1 Paged media #page-selectors\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Gecko Webkit Internet Explorer Opera   Basic support -- ? 8 9.2   \n\nSee also\n @page\n :first\n :right\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aright","title":":right","description":"Summary\nThe :right page pseudo-class matches any right page when printing a page. It allows to describe the styling of right-side page.\nWhether the page is left or right is decided by the major writing direction of the document. For example, if the first page has a major writing direction of left-to-right then it will be a :right page and if it has a major writing direction of right-to-left then it will be a :left page.\nNote: You can't change all CSS properties. You can only change the the margin, padding, border, and background properties of the page box. All other CSS properties will be ignored, and only the page box, not the document content on the page, will be affected.Examples\n\r\n          @page :right {\n  margin: 2in 3in;\n}\r\n        \nSpecifications\nCSS 2.1 Paged media #page-selectors\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer   8.0   Firefox (Gecko) ---   Opera   9.2   Safari (WebKit) ---  \nSee also\n @page\n :first\n :left\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aroot","title":":root","description":"Summary\nThe :root pseudo-class matches the root element of a tree representing the document. In HTML, :root represents the &lt;html&gt;\n element and is identical to the selector html, except that its specifity is higher.Specifications\n CSS 3 Selectors #root-pseudo\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1 1.0 (1.7)\n 9 9.5 1.0   \n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Anth-child","title":":nth-child","description":"Summary\nThe :nth-child pseudo-class matches an element that has an+b-1 siblings before it in the document tree, for a given positive or zero value for n, and has a parent element.\nThis can more clearly be described this way: the matching element is the bth child of an element after all its children have been split into groups of a elements each.\nThe values a and b must both be integers, and the index of an element's first child is 1.\nAmong other things, this allows selectors to match every other row in a table.Syntax\n\nelement:nth-child(an + b) { style properties }\n\nExamples\nExample selectors\n tr:nth-child(2n+1) Represents the odd rows of an HTML table. tr:nth-child(odd) Represents the odd rows of an HTML table. tr:nth-child(2n) Represents the even rows of an HTML table. tr:nth-child(even) Represents the even rows of an HTML table. span:nth-child(0n+1) Represents a span element which is the first child of its parent; this is the same as the :first-child\n selector. span:nth-child(1) Equivalent to the above.\n\n span:nth-child(-n+3) Three first span elements.\n\nUsage example\n\r\n          span:nth-child(2n+1)\n{\n    background-color: lime;\n}\r\n        \n...where...\n\r\n          &lt;div&gt;\n    &lt;span&gt;This span is limed!&lt;\/span&gt;\n    &lt;span&gt;This span is not. :(&lt;\/span&gt;\n    &lt;span&gt;But this one is!&lt;\/span&gt;\n    &lt;span&gt;Sadly, this one is not...&lt;\/span&gt;\n  &lt;\/div&gt;\r\n        \n... should look like ...\n \n   This span is limed!\n   This span is not.&nbsp;:(\n   But this one is!\n   Sadly, this one is not...\n\n\nExample selectors\n tr:nth-child(2n+1) Represents the odd rows of an HTML table. tr:nth-child(odd) Represents the odd rows of an HTML table. tr:nth-child(2n) Represents the even rows of an HTML table. tr:nth-child(even) Represents the even rows of an HTML table. span:nth-child(0n+1) Represents a span element which is the first child of its parent; this is the same as the :first-child\n selector. span:nth-child(1) Equivalent to the above.\n\n span:nth-child(-n+3) Three first span elements.\n\nUsage example\n\r\n          span:nth-child(2n+1)\n{\n    background-color: lime;\n}\r\n        \n...where...\n\r\n          &lt;div&gt;\n    &lt;span&gt;This span is limed!&lt;\/span&gt;\n    &lt;span&gt;This span is not. :(&lt;\/span&gt;\n    &lt;span&gt;But this one is!&lt;\/span&gt;\n    &lt;span&gt;Sadly, this one is not...&lt;\/span&gt;\n  &lt;\/div&gt;\r\n        \n... should look like ...\n \n   This span is limed!\n   This span is not.&nbsp;:(\n   But this one is!\n   Sadly, this one is not...\n\n\nSpecifications\n CSS3&nbsp;\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 4.0 3.5 (1.9.1)\n 9 10.10 4   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nNotes\n Opera can't handle dynamic insertion of elements.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Anth-last-child","title":":nth-last-child","description":"Summary\nThe :nth-last-child pseudo-class matches an element that has an+b-1 siblings after it in the document tree, for a given positive or zero value for n, and has a parent element. See :nth-child\n for a more thorough description of the syntax of its argument.Syntax\nelement:nth-last-child(an + b) { style properties }\n\nExamples\nExample selectors\ntr:nth-last-child(-n+4) Matches the last four rows of an HTML table. span:nth-last-child(even) Matches the even elements in their parent element, starting at the last element and working backward. \nExample selectors\ntr:nth-last-child(-n+4) Matches the last four rows of an HTML table. span:nth-last-child(even) Matches the even elements in their parent element, starting at the last element and working backward. \nSee also\n :nth-child\n CSS3 Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Anth-of-type","title":":nth-of-type","description":"Summary\nThe :nth-of-type pseudo-class matches an element that has an+b-1 siblings with the same element name before it in the document tree, for a given positive or zero value for n, and has a parent element. See :nth-child\n for a more thorough description of the syntax of its argument.Syntax\nelement:nth-of-type(an + b) { style properties }\n\nExamples\nExample\nThis example causes the positions of floated images to alternate between right and left.\n\r\n          img:nth-of-type(2n+1) { float: right; }\nimg:nth-of-type(2n) { float: left; }\r\n        \nExample\nThis example causes the positions of floated images to alternate between right and left.\n\r\n          img:nth-of-type(2n+1) { float: right; }\nimg:nth-of-type(2n) { float: left; }\r\n        \nSee also\n :nth-child\n CSS3 Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Anth-last-of-type","title":":nth-last-of-type","description":"Summary\nThe :nth-last-of-type pseudo-class matches an element that has an+b-1 siblings with the same element name after it in the document tree, for a given positive or zero value for n, and has a parent element. See :nth-child\n for a more thorough description of the syntax of its argument.Syntax\nelement:nth-last-of-type(an + b) { style properties }\n\nSee also\n :last-of-type\n CSS3 Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Afirst-child","title":":first-child","description":"Summary\nThe :first-child pseudo-class represents any element that is the first child element of its parent.Syntax\n\nelement:first-child { style properties }\n\nExamples\n\r\n          span:first-child\n{\n    background-color: lime;\n}\r\n        \n...where...\n\r\n          &lt;div&gt;\n    &lt;span&gt;This span is limed!&lt;\/span&gt;\n    &lt;span&gt;This span is not. :(&lt;\/span&gt;\n  &lt;\/div&gt;\r\n        \n... should look like ... \nThis span is limed! This span is not.&nbsp;:(\nSpecifications\n Selectors Level 3\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 4.0 3.0 (1.9)\n 7 9.5 4  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support 1.0 1.0 (1.9.1)\n 7 10.0 3.1  \n\nNotes\n In Internet Explorer 8, if a element is inserted dynamically by clicking on a link the first-child style isn't applied until the link loses focus.\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Alast-child","title":":last-child","description":"Summary\nThe :last-child pseudo-class represents any element that is the last child element of its parent.Syntax\nelement:last-child { style properties }\n\n&nbsp;&nbsp;\nExamples\n\r\n          span:last-child\n{\n    background-color: lime;\n}\r\n        \n...where...\n\r\n          &lt;div&gt;\n    &lt;span&gt;This span is not limed.&lt;\/span&gt;\n    &lt;span&gt;This span is! :)&lt;\/span&gt;\n  &lt;\/div&gt;\r\n        \n... should look like ... \nThis span is not limed. This span is!&nbsp;:)\nNotes\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Afirst-of-type","title":":first-of-type","description":"Summary\nThe :first-of-type pseudo-class represents the first sibling of the given type in the list of children of its parent element.Syntax\nelement:first-of-type { style properties }\n\nExample\nTo match the first data cell in a table row, you can use this:\n\r\n          tr &gt; td:first-of-type\r\n        \nSee also\n :nth-of-type\n :last-of-type\n CSS3 Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aonly-child","title":":only-child","description":"Summary\nThe :only-child pseudo-class represents any element which is the only child of its parent.Syntax\n\nparent child:only-child {\n&nbsp;&nbsp;&nbsp; property:value;\n} \n\nExamples\n\r\n          div span:only-child {\n    color:red;\n}\r\n        \n\r\n          &lt;div&gt;\n    &lt;span&gt;Some red text&lt;\/span&gt;\n&lt;\/div&gt;\n\n&lt;div&gt;\n    &lt;span&gt;Some regular text&lt;\/span&gt;\n    &lt;span&gt;Some regular text&lt;\/span&gt;\n&lt;\/div&gt;\r\n        \nResult\nSome red textSome regular text Some regular text\nResult\nSome red textSome regular text Some regular text\nSpecifications\n\n\n CSS3\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 2 1.5 (1.8)\n 9 9.5 3.1  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support 2.1 1.0 (1.8)\n 9 10.0 3.1  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Alast-of-type","title":":last-of-type","description":"Summary\nThe :last-of-type pseudo-class represents the last sibling of the given type in the list of children of its parent element.Syntax\nelement:last-of-type { style properties }\n\nExample\nTo match the last data cell in a table row, you can use this:\n\r\n          tr &gt; td:last-of-type\r\n        \nSee also\n :nth-last-of-type\n :first-of-type\n :nth-of-type\n CSS3 Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aonly-of-type","title":":only-of-type","description":"Summary\nThe :only-of-type pseudo-class represents any element that have no siblings of the given type.\nSyntax\nelement:only-of-type { style properties }\n\nSee also\n :nth-of-type\n :first-of-type\n :last-of-type\n CSS3 Reference\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aempty","title":":empty","description":"Summary\nThe :empty pseudo-class represents any element that has no children at all. Only element nodes and text (including whitespace) are considered. Comments or processing instructions do not affect whether an element is considered empty or not.Syntax\n\nspan:empty { style properties }\n\nExamples\n\r\n          span:empty::before  { background-color: lime; }\r\n        \n...where...\n\r\n          &lt;span&gt;&lt;\/span&gt;\r\n        \nSpecifications\n CSS3 Selectors #empty-pseudo&nbsp;\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ---   Firefox (Gecko) 1.5 (1.8)   Opera 9.5   Safari (WebKit) 3.1 (525), very buggy before  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Atarget","title":":target","description":"Summary\nThe :target pseudo-class represents the unique element, if any, with an id matching the fragment identifier of the URI of the document..\nURIs with fragment identifiers link to a certain element within the document, known as the target element. For instance, here is a URI pointing to an anchor named section2: &nbsp; http:\/\/example.com\/folder\/document.html#section2 The anchor can be any element with an id attribute, e.g. &lt;h1 id=&quot;section2&quot;&gt; in our example. The target element h1 can be represented by the :target pseudo-class.Examples\n\n:target { outline: solid red }  \/* draw a red, solid line around the target element *\/\n\n\n\/* example code for userContent.css or any web pages;\n   a red\/yellow arrow indicates the target element *\/  \n\n:target { \n    -moz-box-shadow:  0.2em 0.2em 0.3em #888;\n -webkit-box-shadow:  0.2em 0.2em 0.3em #888;\n}\n\n:target:before {\n&nbsp; font:           70% Arial,&quot;Nimbus Sans L&quot;,sans-serif !important;\n&nbsp; content:        &quot;\\25ba&quot;;  \/* &#9658; *\/\n&nbsp; color:          red;\n &nbsp;background:     gold;\n&nbsp; border:         solid thin;\n &nbsp;padding-left:   1px;\n &nbsp;display:        inline-block;\n &nbsp;margin-right:   0.13em;\n &nbsp;vertical-align: 20%;\n}\n\nNote\nThe id attribute was new in HTML 4 (December 1997).&nbsp; In old-style HTML &lt;a name=&quot;foo&quot;&gt; is a target element.&nbsp; The :target pseudo-class applies to those targets as well.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ?  (1.3)\n 9 9.5 1.3   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n\nSpecifications\n CSS 3 Selectors #:target Proposed Recommendation\n\nSee also\nUsing the :target selectorBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ?  (1.3)\n 9 9.5 1.3   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n\nSpecifications\n CSS 3 Selectors #:target Proposed Recommendation\n\nSee also\nUsing the :target selectorSpecifications\n CSS 3 Selectors #:target Proposed Recommendation\n\nSee also\nUsing the :target selector"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Achecked","title":":checked","description":"Summary\nThe :checked pseudo-class selector represents any radio (&lt;input type=&quot;radio&quot;&gt;) or checkbox (&lt;option&gt;\n in a &lt;select&gt;\n) element that is checked or toggled to an on state. The user can change this state by clicking on the element, or selecting a different value, in which case the :checked pseudo-class no longer applies to this element, but will to the relevant one.Syntax&nbsp;\n\nelement:checked { style properties }\nExamples\nExample selectors\n input[type=&quot;radio&quot;]:checked  Represents all radio buttons on the page that are checked input[type=&quot;checkbox&quot;]:checked Represents all checkboxes on the page that are checked\n\nExample selectors\n input[type=&quot;radio&quot;]:checked  Represents all radio buttons on the page that are checked input[type=&quot;checkbox&quot;]:checked Represents all checkboxes on the page that are checked\n\nSpecifications\n CSS3 Selectors :checked Proposed Recommendation WHATWG web-forms\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ? 1.0 (1.7 or earlier)\n 9 9.0 ?   \n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ? 1.0 (1.7 or earlier)\n 9 9.0 ?   \n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Adefault","title":":default","description":"Summary\nThe :default pseudo-class represents any user interface element that is the default among a group of similar elements.\nFor example, the default button in a set of buttons could be selected using this pseudo-class.\nUser interface elements that permit multiple selections may have multiple defaults set in order to initially appear with multiple items selected. In that case all defaults can be represented using the :default pseudo-class.Syntax\n:default { style properties }\n\nExamples\n\r\n          :default\n{\n    background-color: lime;\n}\r\n        \n...where...\n\r\n          &lt;form method=&quot;get&quot;&gt;\n  &lt;p&gt;&lt;input type=&quot;submit&quot; id=&quot;submit1&quot;&gt;&lt;\/p&gt;\n  &lt;p&gt;&lt;input type=&quot;submit&quot; id=&quot;submit2&quot;&gt;&lt;\/p&gt;\n  &lt;p&gt;&lt;input type=&quot;reset&quot;&gt;&lt;\/p&gt;\n &lt;\/form&gt;\r\n        \nThis example causes the background color to be lime for the default submit button in the form.\nSpecification\n CSS3 Basic User Interface Module:&nbsp;:default Web Forms 2.0: Relation to CSS selectors\n "},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aenabled","title":":enabled","description":"Specifications\n CSS3 Selectors enabled disabled WHATWG web-forms\n\nBrowser compatibility\n   Browser Lowest Version   Internet Explorer ?   Firefox ?   Opera ?   Safari ?  \n\n&nbsp;\n&nbsp;"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aindeterminate","title":":indeterminate","description":"Summary\nThe :indeterminate CSS pseudo-class represents any &lt;input type=&quot;checkbox&quot;&gt; element whose indeterminate DOM property is set to true by JavaScript. In addition, in some browsers, it can be used to match to &lt;progress&gt;\n&nbsp;elements in an indeterminate state.Examples\nW3C CSS3 Selectors test#177\n\n&lt;style&gt;\n       input, span { background: red }\n       :indeterminate, :indeterminate + span { background: limegreen }\n&lt;\/style&gt;\n\n&lt;p&gt;&lt;input type=checkbox&gt; &lt;span&gt;Everything in this paragraph should have a green background.&lt;\/span&gt;&lt;\/p&gt;\n\n&lt;script&gt; document.getElementsByTagName(&quot;input&quot;)[0].indeterminate = true; &lt;\/script&gt;\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Checkboxes (Supported) 3.6 (1.9.2)\n 9.0 10.60 (2.6) 3.0   &lt;progress&gt;\n ? 6.0 (6.0)\n ? ? ?  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Checkboxes ? 1.0 (1.9.2)\n ? ? ?   &lt;progress&gt;\n ? 6.0 (6.0)\n ? ? ?  \n\n\nSpecifications\n CSS 3 Selectors #indeterminate Working draft HTML 5 Interactive elements #selector-indeterminate HTML 5 Forms #checkbox-state\n\nSee also\n Web Tech Blog - A new checkbox type\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Adisabled","title":":disabled","description":"Summary\nThe :disabled pseudo-class represents any disabled element. An element is disabled if it can't be activated (e.g. selected, clicked on or accept text input) or accept focus. The element also has an enabled state, in which it can be activated or accept focus.Examples\nExample selectors\n input:disabled Selects all disabled inputs select.country:disabled Targets a select element with class country that is disabled\n\nUsage example\nThe following CSS:\n.input[type=&quot;text&quot;]:disabled {background:#ccc}\n\napplied to this HTML5 fragment:\n\n&lt;form action=&quot;#&quot;&gt;\n&nbsp;&nbsp;&lt;fieldset&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;legend&gt;Shipping address&lt;\/legend&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_firstName&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_lastName&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_address1&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_address2&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_zipCode&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_town&quot; disabled&gt;\n&nbsp;&nbsp;&lt;\/fieldset&gt;\n&nbsp;&nbsp;&lt;fieldset&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;legend&gt;Billing address&lt;\/legend&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;label&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;checkbox&quot; name=&quot;billing_is_shipping&quot; value=&quot;true&quot; checked&gt; \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Billing address is the same as shipping address\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/label&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_firstName&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_lastName&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_address1&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_address2&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_zipCode&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_town&quot; disabled&gt;\n&nbsp;&nbsp;&lt;\/fieldset&gt;\n&lt;\/form&gt;\nWill result in all text elements in the billing fieldset having a light grey background.\nExample selectors\n input:disabled Selects all disabled inputs select.country:disabled Targets a select element with class country that is disabled\n\nUsage example\nThe following CSS:\n.input[type=&quot;text&quot;]:disabled {background:#ccc}\n\napplied to this HTML5 fragment:\n\n&lt;form action=&quot;#&quot;&gt;\n&nbsp;&nbsp;&lt;fieldset&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;legend&gt;Shipping address&lt;\/legend&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_firstName&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_lastName&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_address1&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_address2&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_zipCode&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;shipping_town&quot; disabled&gt;\n&nbsp;&nbsp;&lt;\/fieldset&gt;\n&nbsp;&nbsp;&lt;fieldset&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;legend&gt;Billing address&lt;\/legend&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;label&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;checkbox&quot; name=&quot;billing_is_shipping&quot; value=&quot;true&quot; checked&gt; \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Billing address is the same as shipping address\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;\/label&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_firstName&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_lastName&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_address1&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_address2&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_zipCode&quot; disabled&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input type=&quot;text&quot; name=&quot;billing_town&quot; disabled&gt;\n&nbsp;&nbsp;&lt;\/fieldset&gt;\n&lt;\/form&gt;\nWill result in all text elements in the billing fieldset having a light grey background.\nSpecifications\n CSS3 Selectors :enabled :disabled Proposed Recommendation WHATWG web-forms\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ? 1.0 (1.7 or earlier)\n 9 9.0 ?   \n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ? 1.0 (1.7 or earlier)\n 9 9.0 ?   \n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Aoptional","title":":optional","description":"Summary\nThe :optional CSS pseudo-class represents any &lt;input&gt;\n&nbsp;element that does not have the \n\nrequired\n attribute set on it. This allows forms to easily indicate optional fields, and to style them accordingly.\nTo provide an appearance for required form fields, the :required\n pseudo-class may be used.Browser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox Chrome Internet Explorer Safari Opera   Basic support 4 8 -- 5 9.5   \nSpecifications\n CSS 3 Basic User Interface Module\n\nSee also\n :required\n :invalid\n :valid\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Ainvalid","title":":invalid","description":"Summary\nThe :invalid pseudo-class represents any &lt;input&gt;\n&nbsp;element whose content fails to validate according to the input's type setting. This allows you to easily have invalid fields adopt an appearance that helps the user identify and correct errors.\nBy default, Gecko does not apply a style to the :invalid pseudo-class. However it does apply a style (a red &quot;glow&quot; using the box-shadow\n property) to the :-moz-ui-invalid\n pseudo-class, which applies in a subset of cases for :invalid.\nYou can disable the glow using the following CSS, or completely override it to alter the appearance of invalid fields.\n\r\n          :invalid {\n  box-shadow: none;\n}\n\n:-moz-submit-invalid {\n  box-shadow: none;\n}\n\n:-moz-ui-invalid {\n  box-shadow:none;\n}\r\n        \nNotes\nRadio buttons\nIf any of the radio buttons in a group (that is, with the same value for their name attribute) is required, the :invalid pseudo-class is applied to all of them if none of the buttons in the group are selected.\nRadio buttons\nIf any of the radio buttons in a group (that is, with the same value for their name attribute) is required, the :invalid pseudo-class is applied to all of them if none of the buttons in the group are selected.\nExamples\nThis example presents a simple form that colors elements green when they validate and red when they don't.\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n  :invalid {\n    background-color: #ffdddd;\n  }\n  \n  :valid {\n    background-color: #ddffdd;\n  }\n  \n  :required {\n    border-color: #800000;\n    border-width: 3px;\n  }\n&lt;\/style&gt;\n\n&lt;form&gt;\n  &lt;label&gt;Enter a URL:&lt;\/label&gt;\n  &lt;input type=&quot;url&quot; \/&gt;\n  &lt;br \/&gt;\n  &lt;br \/&gt;\n  &lt;label&gt;Enter an email address:&lt;\/label&gt;\n  &lt;input type=&quot;email&quot; required\/&gt;\n&lt;\/form&gt;\r\n        \nView this sample live.\nBrowser compatibility\n   Browser Lowest version   Internet Explorer ---   Firefox (Gecko) 4.0 (2.0)   Opera 9.5    Safari | Chrome | WebKit   5 | 8 | 534.10   \n\nSpecifications\n CSS 3 Basic User Interface Module\n\nSee also\n :valid\n :-moz-submit-invalid\n :required\n :optional\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Arequired","title":":required","description":"Summary\nThe :required CSS pseudo-class represents any &lt;input&gt;\n&nbsp;element that has the \n\nrequired\n attribute set on it. This allows forms to easily indicate which fields must have valid data before the form can be submitted.\nThe :optional\n pseudo-class may be used to provide an appearance for optional form fields.\nExamples\nSee :invalid\n for an example.\nBrowser compatibility\n   Browser Lowest version   Internet Explorer ---   Firefox (Gecko) 4.0 (2.0)   Opera 9.5    Safari | Chrome | WebKit   5 | 8 | 534.10   \n\nSpecifications\n CSS 3 Basic User Interface Module\n\nSee also\n :optional\n :invalid\n :valid\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3Avalid","title":":valid","description":"Summary\nThe :valid CSS pseudo-class represents any &lt;input&gt;\n&nbsp;element whose content validates correctly according to the input's type setting. This allows to easily make valid fields adopt an appearance that helps the user confirm that their data is formatted properly.Examples\nSee :invalid\n for an example.\nBrowser compatibility\n   Browser Lowest version   Internet Explorer ---   Firefox (Gecko) 4.0 (2.0)   Opera 9.5    Safari | Chrome | WebKit   5 | 8 | 534.10   \n\nSpecifications\n CSS 3 Basic User Interface Module\n\nSee also\n :invalid\n :required\n :optional\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/@charset","title":"@charset","description":"Summary\nThe @charset CSS at-rule specifies the character encoding used in the style sheet. It must be the first element in the style sheet and not be preceded by any character. If several @charset at-rules are defined, only the first one is used, and it cannot be used inside a style attribute on an HTML element or inside the &lt;style&gt;\n element where the character set of the HTML page is relevant.\nThis at-rule is useful when using non-ASCII characters in some CSS properties, like content\n.\nAs there are several ways to define the character encoding of a style sheet, the browser will try the following methods in the following order (and stop as soon as one yields a result) :\n The value given by the charset attribute of the Content-Type: HTTP header or the equivalent in the protocol used to serve the style sheet. The value of the Unicode byte-order character placed at the beginning of the file. The @charset CSS at-rule. Use the character encoding defined by the referring document: the charset attribute of the &lt;link&gt;\n element. This method is obsoleted in HTML5 and must not be used. Assume that the document is UTF-8.\n\nSyntax\n@charset charset;\n\nwhere :\n charset Is a &lt;string&gt;\n  denoting the character encoding to be used. It must be the name of a web-safe character encoding defined in the IANA-registry. If several names are associated with an encoding, only the one marked with&nbsp;preferred must be used.\n\nExamples\n@charset &quot;UTF-8&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  \/\/ Set the encoding of the style sheet to Unicode UTF-8\n@charset 'iso-8859-15'; \/\/ Set the encoding of the style sheet to Latin-9 (Western European languages, with euro sign)\n @charset &quot;UTF-8&quot;;      \/\/ Invalid, there is a character before the at-rule\n@charset UTF-8;         \/\/ Invalid, without ' or &quot;, the charset is not a CSS &lt;string&gt;\n\nSpecifications\n   Specification Status Comment     CSS&nbsp;Level&nbsp;2 (Revision&nbsp;1) Recommendation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 2.0 1.5 (1.8)\n[*] 5.5 [**] [1] 9 4   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support 2.1 1.0 (1.8)\n 5.5 [**] [2] 10.0 4   \n\n[*] Firefox 1.0 supported only an invalid syntax where the character encoding is not set between single or double quotes. [**] From IE 5.5 to IE 7 included, IE also supported the invalid syntax where the character encoding is not set between single or double quotes.\nSee also\n CSS Reference CSS at-rules: @charset, @font-face, @import, @keyframes, @media, @page.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/@import","title":"@import","description":"Summary\nThe @import CSS at-rule allows to import style rules from other style sheets. These rules must precede all other types of rules, except @charset\n rules.\nSo that user agents can avoid retrieving resources for unsupported media types, authors may specify media-dependent @import rules. These conditional imports specify comma-separated media queries after the URI. In the absence of any media query, the import is unconditional. Specifying all for the medium has the same effect.Syntax\n@import url;                      or\n@import url list-of-media-queries;\n\nwhere :\n url Is a &lt;string&gt;\n  or a &lt;uri&gt;\n representing the location of the resource to import. The url may be an absolute or relative url. list-of-media-queries Is a comma-separated list of media queries conditioning the application of the css rules defined in the linked url. If the browser doesn't support any of these media types, it won't even load the linked resource.\nExamples\n\n@import url(&quot;fineprint.css&quot;) print;\n@import url(&quot;bluish.css&quot;) projection, tv;\n@import 'custom.css';\n@import &quot;common.css&quot; screen, projection;\n@import url('landscape.css') screen and (orientation:landscape);\n\nSpecifications\n   Specification Status Comment     Media Queries Candidate Recommandation\n Extended the syntax to support any media query and not only simple media types.   CSS&nbsp;Level&nbsp;2 (Revision&nbsp;1) Recommendation\n Added support for &lt;string&gt;\n  to denote the url of a stylesheet, and requirement to insert the @import rule at the beginning of the CSS document.   CSS&nbsp;Level&nbsp;1 Recommendation\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support (Supported) (Supported) 5.5 [1] (Supported) (Supported)   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support (Supported) (Supported) 5.5 [2] (Supported) (Supported)   \n\nSee also\n CSS Reference CSS at-rules: @charset, @font-face, @import, @keyframes, @media, @page.\n\n \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/@font-face","title":"@font-face","description":"Summary\n@font-face allows authors to specify online fonts to display text on their web pages. By allowing authors to provide their own fonts, @font-face eliminates the need to depend on the limited number of fonts users have installed on their computers.\nSyntax\n\n@font-face {\n  font-family: &lt;a-remote-font-name&gt;;\n  src: &lt;source&gt; [,&lt;source&gt;]*;\n&nbsp; [font-weight:&nbsp;&lt;weight&gt;];\n&nbsp; [font-style:&nbsp;&lt;style&gt;];\n}\n\nValues\n &lt;a-remote-font-name&gt;&nbsp; Specifies a font name that will be used as font face value for font properties. &lt;source&gt;&nbsp; URL for the remote font file location, or the name of a font on the user's computer in the form local(&quot;Font Name&quot;). &lt;weight&gt;&nbsp; A font weight value. &lt;style&gt;&nbsp; A font style value.\n\nYou can specify a font on the user's local computer by name using the local()&nbsp;syntax. If that font isn't found, other sources will be tried until one is found.\nExamples\nThis example simply specifies a downloadable font to use, applying it to the entire body of the document.\nView live sample\n\n&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Web Font Sample&lt;\/title&gt;\n  &lt;style type=&quot;text\/css&quot; media=&quot;screen, print&quot;&gt;\n    @font-face {\n      font-family: &quot;Bitstream Vera Serif Bold&quot;;\n      src: url(&quot;http:\/\/developer.mozilla.org\/@api\/deki\/files\/2934\/=VeraSeBd.ttf&quot;);\n    }\n    \n    body { font-family: &quot;Bitstream Vera Serif Bold&quot;, serif }\n  &lt;\/style&gt;\n&lt;\/head&gt;\n&lt;body&gt;\n  This is Bitstream Vera Serif Bold.\n&lt;\/body&gt;\n&lt;\/html&gt;\n\nIn this example, the user's local copy of &quot;Helvetica Neue Bold&quot;&nbsp;is used; if the user doesn't have that font installed (two different names are tried), then the downloadable font named &quot;MgOpenModernaBold.ttf&quot; is used instead:\n\r\n          @font-face {\n  font-family: MyHelvetica;\n  src: local(&quot;Helvetica Neue Bold&quot;),\n  local(&quot;HelveticaNeue-Bold&quot;),\n  url(MgOpenModernaBold.ttf);\n  font-weight: bold;\n}\r\n        \nNotes\n In Gecko, web fonts are subject to the same domain restriction (font files must be on the same domain as the page using them), unless HTTP&nbsp;access controls are used to relax this restriction.  Note: Because there are no defined MIME types for TrueType, OpenType, and WOFF fonts, the MIME type of the file specified is not considered.  When Gecko displays a page that uses web fonts, it initially displays text using the best CSS&nbsp;fallback font available on the user's computer while it waits for the web font to finish downloading.&nbsp; As each web font finishes downloading, Gecko updates the text that uses that font.&nbsp; This allows the user to read the text on the page more quickly.\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 3.5 (1.9.1)\n 4.0 4.0 10.0 3.1   WOFF 3.5 (1.9.1)\n 6.0 9.0 11.10 5.1   SVG Font -- \nUnimplemented (see\n\nbug 119490\n)\n yes -- yes yes   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mini Opera Mobile Safari Mobile   Basic support (Supported) 1.0 (1.9.1)\n ? -- 10.0 (Supported)   WOFF -- 5.0 (5.0)\n ? -- 11.0 --   SVG fonts -- -- \nUnimplemented (see\n\nbug 119490\n)\n ? -- 10.0 (Supported)   \n\nNotes\n Support of the Embedded OpenType font format is not included in the compatibility table because it is a proprietary feature. Prior to IE 9.0, IE supported only this format. TrueType and OpenType are not included because they are superseded by WOFF.\nNotes\n Support of the Embedded OpenType font format is not included in the compatibility table because it is a proprietary feature. Prior to IE 9.0, IE supported only this format. TrueType and OpenType are not included because they are superseded by WOFF.\nSpecifications\n CSS 2 Fonts 1998-05-12 Obsolete CSS Fonts Module Level 3 2011 Working draft WOFF File Format 1.0 2011 Candidate Recommendation\n\nSee also\n CSS Reference CSS at-rules: @charset, @font-face, @import, @keyframes, @media, @page. \nfont\n, font-family\n, font-size\n, font-size-adjust\n, font-stretch\n, font-style\n, font-variant\n, font-weight\n, @font-face\n  FontSquirrel @font-face generator About WOFF Beautiful fonts with @font-face Open&nbsp;Font Library MSDN Microsoft library @font-face When can I use WOFF?When can I use SVG Fonts?\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/@keyframes","title":"@keyframes","description":"Summary\n@keyframes lets authors control the intermediate steps in a CSS animation sequence by establishing keyframes (or waypoints) along the animation sequence that must be reached by certain points during the animation. This gives you more specific control over the intermediate steps of the animation sequence than you get when letting the browser handle everything automatically.\nTo use keyframes, you create a @keyframes rule with a name that is then used by the animation-name\n property to match an animation to its keyframe list. Each @keyframes rule contains a style list of keyframe selectors, each of which is comprised of a percentage along the animation at which the keyframe occurs as well as a block containing the style information for that keyframe.\nYou can list the keyframes in any order; they will be handled in the order in which their specified percentages indicate they should occur.\nValid keyframe lists\nIn order for a keyframe list to be valid, it must include rules for at least the times 0% (or from) and 100% (or to) (that is, the starting and ending states of the animation). If both of these time offsets aren't specified, the keyframe declaration is invalid and can't be used for animation.\nIf you include properties that can't be animated in your keyframe rules, they get ignored, but the supported properties will still be animated.\nDuplicate resolution\nIf multiple keyframe sets exist for a given name, the last one encountered is used. @keyframes rules don't cascade, so animations never drive keyframes from more than one rule set.\nIf a given animation time offset is duplicated, the last keyframe in the @keyframes rule for that percentage is used for that frame. There's no cascading within a @keyframes rule if multiple keyframes specify the same percentage values.\nWhen properties are left out of some keyframes\nAny properties that you don't specify in every keyframe are interpolated (with the exception of those that can't be interpolated, which are instead dropped from the animation entirely). For example:\n\r\n          @keyframes identifier {\n  0% { top: 0; left: 0; }\n  30% { top: 50px; }\n  68%, 72% { left: 50px; }\n  100% { top: 100px; left: 100%; }\n}\r\n        \nHere, the top\n property animates using the 0%, 30%, and 100% keyframes, and left\n animates using the 0%, 70%, and 100% keyframes.\nOnly properties that are specified in both the 0% and 100% keyframes will be animated; any property not included in both of those keyframes will retain their starting value for the duration of the animation sequence.\nValid keyframe lists\nIn order for a keyframe list to be valid, it must include rules for at least the times 0% (or from) and 100% (or to) (that is, the starting and ending states of the animation). If both of these time offsets aren't specified, the keyframe declaration is invalid and can't be used for animation.\nIf you include properties that can't be animated in your keyframe rules, they get ignored, but the supported properties will still be animated.\nDuplicate resolution\nIf multiple keyframe sets exist for a given name, the last one encountered is used. @keyframes rules don't cascade, so animations never drive keyframes from more than one rule set.\nIf a given animation time offset is duplicated, the last keyframe in the @keyframes rule for that percentage is used for that frame. There's no cascading within a @keyframes rule if multiple keyframes specify the same percentage values.\nWhen properties are left out of some keyframes\nAny properties that you don't specify in every keyframe are interpolated (with the exception of those that can't be interpolated, which are instead dropped from the animation entirely). For example:\n\r\n          @keyframes identifier {\n  0% { top: 0; left: 0; }\n  30% { top: 50px; }\n  68%, 72% { left: 50px; }\n  100% { top: 100px; left: 100%; }\n}\r\n        \nHere, the top\n property animates using the 0%, 30%, and 100% keyframes, and left\n animates using the 0%, 70%, and 100% keyframes.\nOnly properties that are specified in both the 0% and 100% keyframes will be animated; any property not included in both of those keyframes will retain their starting value for the duration of the animation sequence.\nSyntax\n@keyframes &lt;identifier&gt; {\n  [ [ from | to | &lt;percentage&gt; ] [, from | to | &lt;percentage&gt; ]* block ]*\n}\n\nValues\n &lt;identifier&gt; A name identifying the keyframe list. This must match the identifier production in CSS syntax. from A starting offset of 0%. to An ending offset of 100%. &lt;percentage&gt;\n A percentage of the time through the animation sequence at which the specified keyframe should occur.\n\nValues\n &lt;identifier&gt; A name identifying the keyframe list. This must match the identifier production in CSS syntax. from A starting offset of 0%. to An ending offset of 100%. &lt;percentage&gt;\n A percentage of the time through the animation sequence at which the specified keyframe should occur.\n\nExamples\nSee CSS animations for examples.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support (Supported)\n-webkit 5.0 (5.0)\n\n-moz 10 \n-ms [1] ? 4.0\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSpecifications\n \nCSS Animations Module Level 3: KeyframesWD\n\nSee also\n CSS animations CSS Reference CSS at-rules: @charset, @font-face, @import, @keyframes, @media, @page. AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/@media","title":"@media","description":"Summary\n@media specifies the target media types (separated by commas) of a set of rules (delimited by curly braces).\nSyntax\n\n@media &lt;media types&gt; {\n  \/* media-specific rules *\/\n}\n\nMedia types\nNote: Firefox currently only implements the print and screen media types.&nbsp; The FullerScreen extension enables support for the projection media type.\n all Suitable for all devices. braille Intended for braille tactile feedback devices. embossed Intended for paged braille printers. handheld Intended for handheld devices (typically small screen, limited bandwidth). print Intended for paged material and for documents viewed on screen in print preview mode. Please consult the section on paged media, and the media section of the Getting Started tutorial for information about formatting issues that are specific to paged media. projection Intended for projected presentations, for example projectors. Please consult the section on paged media for information about formatting issues that are specific to paged media. screen Intended primarily for color computer screens. speech Intended for speech synthesizers. Note: CSS2 had a similar media type called 'aural' for this purpose. See the appendix on aural style sheets for details. tty Intended for media using a fixed-pitch character grid (such as teletypes, terminals, or portable devices with limited display capabilities). Authors should not use pixel units with the &quot;tty&quot; media type. tv Intended for television-type devices (low resolution, color, limited-scrollability screens, sound available).\n\nMedia groups\nMedia types are also part of different Media Groups. The following table indicates which types are in which group.\n   &nbsp; Groups   Type continuous paged visual audio speech tactile grid bitmap interactive static   braille X &nbsp; &nbsp; &nbsp; &nbsp; X X &nbsp; X X   embossed &nbsp; X &nbsp; &nbsp; &nbsp; X X &nbsp; &nbsp; X   handheld X X X X X &nbsp; X X X X   print &nbsp; X X &nbsp; &nbsp; &nbsp; &nbsp; X &nbsp; X   projection &nbsp; X X &nbsp; &nbsp; &nbsp; &nbsp; X X &nbsp;   screen X &nbsp; X X &nbsp; &nbsp; &nbsp; X X X   speech X &nbsp; &nbsp; &nbsp; X &nbsp; &nbsp; &nbsp; X X   tty X &nbsp; X &nbsp; &nbsp; &nbsp; X &nbsp; X X   tv X X X X &nbsp; &nbsp; &nbsp; X X X  \n\nExamples\n@media print {\n  body { font-size: 10pt }\n}\n@media screen {\n  body { font-size: 13px }\n}\n@media screen, print {\n  body { line-height: 1.2 }\n}\n\nNotes\nA multimodal media type is still only one media type. The 'tv' media type, for example, is a multimodal media type that renders both visually and aurally to a single canvas.\nSpecifications\n CSS 2.1\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 1.0 1.0 (1.7)\n 9.0 9.2 1.3   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support 1.0 1.0 (1.7)\n 9.0 9.0 3.1   \n\nSee also\n Media queries CSS Reference CSS at-rules: @charset, @font-face, @import, @keyframes, @media, @page.\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Comments","title":"Comments","description":"Summary\nComments are used to add explanatory notes or prevent the browser from interpreting parts of the stylesheet.\nSyntax\n\n\/* Comment *\/\nExamples\n\r\n          \/* A single line comment *\/\n\n\/*\nA comment\nwhich stretches\nover several\nlines\n*\/\r\n        \nNotes\nThe \/* *\/ comment syntax is used for both single and multi line comments. There is no other way to specify comments in external stylesheets. However, when using the &lt;style&gt; element, you may use &lt;!-- --&gt; to hide CSS from older browsers, although this is not recommended. As in most programming languages that use the \/* *\/ comment syntax, comments cannot be nested. In other words, the first instance of *\/ that follows an instance of \/* closes the comment.\nSpecifications\n CSS 2.1 Syntax and basic data types #comments\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/@page","title":"@page","description":"Summary\nThe @page rule is used to modify some CSS properties when printing a document.\nNote: you can not change all CSS properties. You can only change the margins, orphans, widows, and page breaks of the document. All other CSS properties will be ignored.\nSyntax\n\n@page :pseudo-class {\n&nbsp; margin:2in;\n}\n\nExamples\nPlease refer to the various pseudo-classes of @page for examples.\n :first\n :left\n :right\n\n\nSpecifications\n CSS 2.1 Paged media #page-selectors\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 2.0 -- 8.0 6.0 5.0   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee also\n CSS Reference CSS at-rules: @charset, @font-face, @import, @keyframes, @media, @page.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Media_queries","title":"CSS media queries","description":"Syntax\nMedia queries consist of a media type and one or more expressions, involving media features, which resolve to either true or false.&nbsp; The result of the query is true if the media type specified in the media query matches the type of device the document is being displayed on and all expressions in the media query are true.\nWhen a media query is true, the corresponding style sheet is applied following the normal cascading rules.\nWhen neither not nor only are used within a media query, the media type is optional and will be interpreted as all.\nLogical operators\nYou can compose complex media queries using logical operators, including not, and, and only.\nIn addition, you can combine multiple media queries in a comma-separated list; if any of the media queries in the list is true, the associated style sheet is applied.&nbsp; This is the equivalent of a logical &quot;or&quot; operation.\nThe not keyword negates the result of the query; &quot;all and (not color)&quot; is true for monochrome devices regardless of media type, for example.\nThe only keyword hides style sheets from older browsers that don't support media queries:\n\n&lt;link rel=&quot;stylesheet&quot;&nbsp;media=&quot;only screen and (color)&quot; href=&quot;example.css&quot; \/&gt;\n\nOperator precedence\nThe not operator has a very low precedence.&nbsp; For example, the not is evaluated last in the following query:\n\n@media not all and (-moz-windows-compositor) {&nbsp;... }\n\nThis means that the query is evaluated like this:\n\n@media not (all and (-moz-windows-compositor)) { ... }\n\n... rather than like this:\n\n@media (not all) and (-moz-windows-compositor) { ... }\n\n&nbsp;\nAs another example, look at the following media query:\n\n@media not screen and (color), print and (color)\n\nIt is evaluated like this:\n\n@media (not (screen and (color))), print and (color)\n\nPseudo-BNF (for those of you that like that kind of thing)\n\nmedia_query_list: &lt;media_query&gt; [, &lt;media_query&gt; ]*\nmedia_query: [[only | not]? &lt;media_type&gt; [ and &lt;expression&gt; ]*]\n  | &lt;expression&gt; [ and &lt;expression&gt; ]*\nexpression: ( &lt;media_feature&gt; [: &lt;value&gt;]? )\nmedia_type: all | aural | braille | handheld | print |\n  projection | screen | tty | tv | embossed\nmedia_feature: width | min-width | max-width\n  | height | min-height | max-height\n  | device-width | min-device-width | max-device-width\n  | device-height | min-device-height | max-device-height\n  | aspect-ratio | min-aspect-ratio | max-aspect-ratio\n  | device-aspect-ratio | min-device-aspect-ratio | max-device-aspect-ratio\n  | color | min-color | max-color\n  | color-index | min-color-index | max-color-index\n  | monochrome | min-monochrome | max-monochrome\n  | resolution | min-resolution | max-resolution\n  | scan | grid\nMedia queries are case insensitive.&nbsp; Media queries involving unknown media types are always false.\nNote: Parentheses are required around expressions; failing to use them is an error.\nLogical operators\nYou can compose complex media queries using logical operators, including not, and, and only.\nIn addition, you can combine multiple media queries in a comma-separated list; if any of the media queries in the list is true, the associated style sheet is applied.&nbsp; This is the equivalent of a logical &quot;or&quot; operation.\nThe not keyword negates the result of the query; &quot;all and (not color)&quot; is true for monochrome devices regardless of media type, for example.\nThe only keyword hides style sheets from older browsers that don't support media queries:\n\n&lt;link rel=&quot;stylesheet&quot;&nbsp;media=&quot;only screen and (color)&quot; href=&quot;example.css&quot; \/&gt;\n\nOperator precedence\nThe not operator has a very low precedence.&nbsp; For example, the not is evaluated last in the following query:\n\n@media not all and (-moz-windows-compositor) {&nbsp;... }\n\nThis means that the query is evaluated like this:\n\n@media not (all and (-moz-windows-compositor)) { ... }\n\n... rather than like this:\n\n@media (not all) and (-moz-windows-compositor) { ... }\n\n&nbsp;\nAs another example, look at the following media query:\n\n@media not screen and (color), print and (color)\n\nIt is evaluated like this:\n\n@media (not (screen and (color))), print and (color)\n\nPseudo-BNF (for those of you that like that kind of thing)\n\nmedia_query_list: &lt;media_query&gt; [, &lt;media_query&gt; ]*\nmedia_query: [[only | not]? &lt;media_type&gt; [ and &lt;expression&gt; ]*]\n  | &lt;expression&gt; [ and &lt;expression&gt; ]*\nexpression: ( &lt;media_feature&gt; [: &lt;value&gt;]? )\nmedia_type: all | aural | braille | handheld | print |\n  projection | screen | tty | tv | embossed\nmedia_feature: width | min-width | max-width\n  | height | min-height | max-height\n  | device-width | min-device-width | max-device-width\n  | device-height | min-device-height | max-device-height\n  | aspect-ratio | min-aspect-ratio | max-aspect-ratio\n  | device-aspect-ratio | min-device-aspect-ratio | max-device-aspect-ratio\n  | color | min-color | max-color\n  | color-index | min-color-index | max-color-index\n  | monochrome | min-monochrome | max-monochrome\n  | resolution | min-resolution | max-resolution\n  | scan | grid\nMedia queries are case insensitive.&nbsp; Media queries involving unknown media types are always false.\nNote: Parentheses are required around expressions; failing to use them is an error.\nMedia features\nMost media features can be prefixed with &quot;min-&quot;&nbsp;or &quot;max-&quot; to express &quot;greater or equal to&quot;&nbsp;or &quot;less than or equal to&quot; constraints.&nbsp; This avoids using the &quot;&lt;&quot; and &quot;&gt;&quot;&nbsp;symbols, which would conflict with&nbsp;HTML&nbsp;and XML.&nbsp; If you use a media feature without specifying a value, the expression resolves to true if the feature's value is non-zero.\nNote: If a media feature doesn't apply to the device on which the browser is running, expressions involving that media feature are always false.&nbsp; For example, querying the aspect ratio of an aural device always results in false.\ncolor\nValue: &lt;color&gt;\n\nMedia: visual\n \nAccepts min\/max prefixes: yes\nIndicates the number of bits per color component of the output device.&nbsp; If the device is not a color device, this value is zero.\nNote: If the color components have different numbers of bits per color component, the smallest number is used.&nbsp; For example, if a display uses 5 bits for blue and red and 6 bits for green, then the device is considered to use 5 bits per color component.&nbsp; If the device uses indexed colors, the minimum number of bits per color component in the color table is used.\nExamples\nTo apply a style sheet to all color devices:\n\n@media all and (color) { ... }\n\nTo apply a style sheet to devices with at least 4 bits per color component:\n\n@media all and (min-color: 4) { ... }\n\ncolor-index\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: yes\nIndicates the number of entries in the color look-up table for the output device.\nExamples\nTo indicate that a style sheet should apply to all devices using indexed color, you can do:\n\n@media all and (color-index) { ... }\n\nTo apply a style sheet to indexed color devices with at least 256 colors:\n\n&lt;link rel=&quot;stylesheet&quot; media=&quot;all and (min-color-index:&nbsp;256)&quot; href=&quot;http:\/\/foo.bar.com\/stylesheet.css&quot; \/&gt;\n\naspect-ratio\nValue: &lt;ratio&gt;\n Media: visual\n , tactile\n  Accepts min\/max prefixes: yes\nDescribes the aspect ratio of the targeted display area of the output device.&nbsp; This value consists of two positive integers separated by a slash (&quot;\/&quot;)&nbsp;character.&nbsp; This represents the ratio of horizontal pixels (first term) to vertical pixels (second term).\nExample\nThe following selects a special style sheet to use for when the display area is at least as wide as it is high.\n\n@media screen and (min-aspect-ratio: 1\/1) { ... }\nThis selects the style when the aspect ratio is either 1:1 or greater.device-aspect-ratio\nValue: &lt;ratio&gt;\n Media: visual\n , tactile\n  Accepts min\/max prefixes: yes\nDescribes the aspect ratio of the output device.&nbsp; This value consists of two positive integers separated by a slash (&quot;\/&quot;)&nbsp;character.&nbsp; This represents the ratio of horizontal pixels (first term) to vertical pixels (second term).\nExample\nThe following selects a special style sheet to use for widescreen displays.\n\n@media screen and (device-aspect-ratio: 16\/9), screen and (device-aspect-ratio: 16\/10) { ... }\nThis selects the style when the aspect ratio is either 16:9 or 16:10.device-height\nValue: \n&lt;length&gt;\n\nMedia: visual\n , tactile\n \nAccepts min\/max prefixes: yes\nDescribes the height of the output device (meaning the entire screen or page, rather than just the rendering area, such as the document window).\nExample\nTo apply a style sheet to a document when displayed on a screen that is less than 800 pixels wide, you can use this:\n\n&lt;link rel=&quot;stylesheet&quot;&nbsp;media=&quot;screen and (max-device-width: 799px)&quot; \/&gt;\n\ndevice-width\nValue: \n&lt;length&gt;\n\nMedia: visual\n , tactile\n \nAccepts min\/max prefixes: yes\nDescribes the width of the output device (meaning the entire screen or page, rather than just the rendering area, such as the document window).\ngrid\nValue: &lt;integer&gt;\n  Media: all Accepts min\/max prefixes: no\nDetermines whether the output device is a grid device or a bitmap device.&nbsp; If the device is grid-based (such as a TTY terminal or a phone display with only one font), the value is 1.&nbsp; Otherwise it is zero.\nExample\nTo apply a style to handheld devices with a 15-character or narrower display:\n\n@media handheld and (grid) and (max-width: 15em) { ... }\n\nNote: The &quot;em&quot;&nbsp;unit has a special meaning for grid devices; since the exact width of an &quot;em&quot;&nbsp;can't be determined, 1em is assumed to be the width of one grid cell horizontally, and the height of one cell vertically.height\nValue: \n&lt;length&gt;\n\nMedia: visual\n , tactile\n \nAccepts min\/max prefixes: yes\nThe height media feature describes the height of the output device's rendering surface (such as the height of the viewport or of the page box on a printer).\nNote: As the user resizes the window, Firefox switches style sheets as appropriate based on media queries using the width and height media features.\nmonochrome\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: yes\nIndicates the number of bits per pixel on a monochrome (greyscale)&nbsp;device.&nbsp; If the device isn't monochrome, the device's value is 0.\nExamples\nTo apply a style sheet to all monochrome devices:\n\n@media all and (monochrome) { ... }\n\nTo apply a style sheet to monochrome devices with at least 8 bits per pixel:\n\n@media all and (min-monochrome: 8) { ... }\n\norientation\nValue: landscape | portrait\nMedia: visual\n \nAccepts min\/max prefixes: no\nIndicates whether the device is in landscape (the display is wider than it is tall)&nbsp;or portrait (the display is taller than it is wide)&nbsp;mode.\nExample\nTo apply a style sheet only in portrait orientation:\n\n@media all and (orientation:&nbsp;portrait) { ... }\nresolution\nValue: &lt;resolution&gt;\n \nMedia: bitmap\n \nAccepts min\/max prefixes: yes\nIndicates the resolution (pixel density) of the output device.&nbsp; The resolution may be specified in either dots per inch (dpi) or dots per centimeter (dpcm).\nExample\nTo apply a style sheet to devices with at least 300 dots per inch of resolution:\n\n@media print and (min-resolution: 300dpi) { ... }\n\nscan\nValue: progressive |&nbsp;interlace\nMedia: tv\n \nAccepts min\/max prefixes: no\nDescribes the scanning process of television output devices.\nExample\nTo apply a style sheet only to progressive scanning televisions:\n\n@media tv and (scan: progressive) { ... }\n\nwidth\nValue: \n&lt;length&gt;\n Media: visual\n , tactile\n  Accepts min\/max prefixes: yes\nThe width media feature describes the width of the rendering surface of the output device (such as the width of the document window, or the width of the page box on a printer).\nNote: As the user resizes the window, Firefox switches style sheets as appropriate based on media queries using the width and height media features.\nExamples\nIf you want to specify a style sheet for handheld devices, or screen devices with a width greater than 20em, you can use this query:\n\n@media handheld and (min-width: 20em), screen and (min-width: 20em) { ... }\n\nThis media query specifies a style sheet that applies to printed media wider than 8.5 inches:\n\n&lt;link rel=&quot;stylesheet&quot; media=&quot;print and (min-width:&nbsp;8.5in)&quot;\n    href=&quot;http:\/\/foo.com\/mystyle.css&quot; \/&gt;\n\nThis query specifies a style sheet that is usable when the viewport is between 500 and 800 pixels wide:\n\n@media screen and (min-width: 500px) and (max-width: 800px) { ... }\n\ncolor\nValue: &lt;color&gt;\n\nMedia: visual\n \nAccepts min\/max prefixes: yes\nIndicates the number of bits per color component of the output device.&nbsp; If the device is not a color device, this value is zero.\nNote: If the color components have different numbers of bits per color component, the smallest number is used.&nbsp; For example, if a display uses 5 bits for blue and red and 6 bits for green, then the device is considered to use 5 bits per color component.&nbsp; If the device uses indexed colors, the minimum number of bits per color component in the color table is used.\nExamples\nTo apply a style sheet to all color devices:\n\n@media all and (color) { ... }\n\nTo apply a style sheet to devices with at least 4 bits per color component:\n\n@media all and (min-color: 4) { ... }\n\nExamples\nTo apply a style sheet to all color devices:\n\n@media all and (color) { ... }\n\nTo apply a style sheet to devices with at least 4 bits per color component:\n\n@media all and (min-color: 4) { ... }\n\ncolor-index\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: yes\nIndicates the number of entries in the color look-up table for the output device.\nExamples\nTo indicate that a style sheet should apply to all devices using indexed color, you can do:\n\n@media all and (color-index) { ... }\n\nTo apply a style sheet to indexed color devices with at least 256 colors:\n\n&lt;link rel=&quot;stylesheet&quot; media=&quot;all and (min-color-index:&nbsp;256)&quot; href=&quot;http:\/\/foo.bar.com\/stylesheet.css&quot; \/&gt;\n\nExamples\nTo indicate that a style sheet should apply to all devices using indexed color, you can do:\n\n@media all and (color-index) { ... }\n\nTo apply a style sheet to indexed color devices with at least 256 colors:\n\n&lt;link rel=&quot;stylesheet&quot; media=&quot;all and (min-color-index:&nbsp;256)&quot; href=&quot;http:\/\/foo.bar.com\/stylesheet.css&quot; \/&gt;\n\naspect-ratio\nValue: &lt;ratio&gt;\n Media: visual\n , tactile\n  Accepts min\/max prefixes: yes\nDescribes the aspect ratio of the targeted display area of the output device.&nbsp; This value consists of two positive integers separated by a slash (&quot;\/&quot;)&nbsp;character.&nbsp; This represents the ratio of horizontal pixels (first term) to vertical pixels (second term).\nExample\nThe following selects a special style sheet to use for when the display area is at least as wide as it is high.\n\n@media screen and (min-aspect-ratio: 1\/1) { ... }\nThis selects the style when the aspect ratio is either 1:1 or greater.Example\nThe following selects a special style sheet to use for when the display area is at least as wide as it is high.\n\n@media screen and (min-aspect-ratio: 1\/1) { ... }\nThis selects the style when the aspect ratio is either 1:1 or greater.device-aspect-ratio\nValue: &lt;ratio&gt;\n Media: visual\n , tactile\n  Accepts min\/max prefixes: yes\nDescribes the aspect ratio of the output device.&nbsp; This value consists of two positive integers separated by a slash (&quot;\/&quot;)&nbsp;character.&nbsp; This represents the ratio of horizontal pixels (first term) to vertical pixels (second term).\nExample\nThe following selects a special style sheet to use for widescreen displays.\n\n@media screen and (device-aspect-ratio: 16\/9), screen and (device-aspect-ratio: 16\/10) { ... }\nThis selects the style when the aspect ratio is either 16:9 or 16:10.Example\nThe following selects a special style sheet to use for widescreen displays.\n\n@media screen and (device-aspect-ratio: 16\/9), screen and (device-aspect-ratio: 16\/10) { ... }\nThis selects the style when the aspect ratio is either 16:9 or 16:10.device-height\nValue: \n&lt;length&gt;\n\nMedia: visual\n , tactile\n \nAccepts min\/max prefixes: yes\nDescribes the height of the output device (meaning the entire screen or page, rather than just the rendering area, such as the document window).\nExample\nTo apply a style sheet to a document when displayed on a screen that is less than 800 pixels wide, you can use this:\n\n&lt;link rel=&quot;stylesheet&quot;&nbsp;media=&quot;screen and (max-device-width: 799px)&quot; \/&gt;\n\nExample\nTo apply a style sheet to a document when displayed on a screen that is less than 800 pixels wide, you can use this:\n\n&lt;link rel=&quot;stylesheet&quot;&nbsp;media=&quot;screen and (max-device-width: 799px)&quot; \/&gt;\n\ndevice-width\nValue: \n&lt;length&gt;\n\nMedia: visual\n , tactile\n \nAccepts min\/max prefixes: yes\nDescribes the width of the output device (meaning the entire screen or page, rather than just the rendering area, such as the document window).\ngrid\nValue: &lt;integer&gt;\n  Media: all Accepts min\/max prefixes: no\nDetermines whether the output device is a grid device or a bitmap device.&nbsp; If the device is grid-based (such as a TTY terminal or a phone display with only one font), the value is 1.&nbsp; Otherwise it is zero.\nExample\nTo apply a style to handheld devices with a 15-character or narrower display:\n\n@media handheld and (grid) and (max-width: 15em) { ... }\n\nNote: The &quot;em&quot;&nbsp;unit has a special meaning for grid devices; since the exact width of an &quot;em&quot;&nbsp;can't be determined, 1em is assumed to be the width of one grid cell horizontally, and the height of one cell vertically.Example\nTo apply a style to handheld devices with a 15-character or narrower display:\n\n@media handheld and (grid) and (max-width: 15em) { ... }\n\nNote: The &quot;em&quot;&nbsp;unit has a special meaning for grid devices; since the exact width of an &quot;em&quot;&nbsp;can't be determined, 1em is assumed to be the width of one grid cell horizontally, and the height of one cell vertically.height\nValue: \n&lt;length&gt;\n\nMedia: visual\n , tactile\n \nAccepts min\/max prefixes: yes\nThe height media feature describes the height of the output device's rendering surface (such as the height of the viewport or of the page box on a printer).\nNote: As the user resizes the window, Firefox switches style sheets as appropriate based on media queries using the width and height media features.\nmonochrome\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: yes\nIndicates the number of bits per pixel on a monochrome (greyscale)&nbsp;device.&nbsp; If the device isn't monochrome, the device's value is 0.\nExamples\nTo apply a style sheet to all monochrome devices:\n\n@media all and (monochrome) { ... }\n\nTo apply a style sheet to monochrome devices with at least 8 bits per pixel:\n\n@media all and (min-monochrome: 8) { ... }\n\nExamples\nTo apply a style sheet to all monochrome devices:\n\n@media all and (monochrome) { ... }\n\nTo apply a style sheet to monochrome devices with at least 8 bits per pixel:\n\n@media all and (min-monochrome: 8) { ... }\n\norientation\nValue: landscape | portrait\nMedia: visual\n \nAccepts min\/max prefixes: no\nIndicates whether the device is in landscape (the display is wider than it is tall)&nbsp;or portrait (the display is taller than it is wide)&nbsp;mode.\nExample\nTo apply a style sheet only in portrait orientation:\n\n@media all and (orientation:&nbsp;portrait) { ... }\nExample\nTo apply a style sheet only in portrait orientation:\n\n@media all and (orientation:&nbsp;portrait) { ... }\nresolution\nValue: &lt;resolution&gt;\n \nMedia: bitmap\n \nAccepts min\/max prefixes: yes\nIndicates the resolution (pixel density) of the output device.&nbsp; The resolution may be specified in either dots per inch (dpi) or dots per centimeter (dpcm).\nExample\nTo apply a style sheet to devices with at least 300 dots per inch of resolution:\n\n@media print and (min-resolution: 300dpi) { ... }\n\nExample\nTo apply a style sheet to devices with at least 300 dots per inch of resolution:\n\n@media print and (min-resolution: 300dpi) { ... }\n\nscan\nValue: progressive |&nbsp;interlace\nMedia: tv\n \nAccepts min\/max prefixes: no\nDescribes the scanning process of television output devices.\nExample\nTo apply a style sheet only to progressive scanning televisions:\n\n@media tv and (scan: progressive) { ... }\n\nExample\nTo apply a style sheet only to progressive scanning televisions:\n\n@media tv and (scan: progressive) { ... }\n\nwidth\nValue: \n&lt;length&gt;\n Media: visual\n , tactile\n  Accepts min\/max prefixes: yes\nThe width media feature describes the width of the rendering surface of the output device (such as the width of the document window, or the width of the page box on a printer).\nNote: As the user resizes the window, Firefox switches style sheets as appropriate based on media queries using the width and height media features.\nExamples\nIf you want to specify a style sheet for handheld devices, or screen devices with a width greater than 20em, you can use this query:\n\n@media handheld and (min-width: 20em), screen and (min-width: 20em) { ... }\n\nThis media query specifies a style sheet that applies to printed media wider than 8.5 inches:\n\n&lt;link rel=&quot;stylesheet&quot; media=&quot;print and (min-width:&nbsp;8.5in)&quot;\n    href=&quot;http:\/\/foo.com\/mystyle.css&quot; \/&gt;\n\nThis query specifies a style sheet that is usable when the viewport is between 500 and 800 pixels wide:\n\n@media screen and (min-width: 500px) and (max-width: 800px) { ... }\n\nExamples\nIf you want to specify a style sheet for handheld devices, or screen devices with a width greater than 20em, you can use this query:\n\n@media handheld and (min-width: 20em), screen and (min-width: 20em) { ... }\n\nThis media query specifies a style sheet that applies to printed media wider than 8.5 inches:\n\n&lt;link rel=&quot;stylesheet&quot; media=&quot;print and (min-width:&nbsp;8.5in)&quot;\n    href=&quot;http:\/\/foo.com\/mystyle.css&quot; \/&gt;\n\nThis query specifies a style sheet that is usable when the viewport is between 500 and 800 pixels wide:\n\n@media screen and (min-width: 500px) and (max-width: 800px) { ... }\n\nMozilla-specific media features\nMozilla offers several Gecko-specific media features. Some of these may be proposed as official media features.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-images-in-menus\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the device allows images to appear in menus, this is 1; otherwise, the value is 0. This corresponds to the :-moz-system-metric(images-in-menus)\n CSS&nbsp;pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-mac-graphite-theme\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the user has configured their device to use the &quot;Graphite&quot; appearance on Mac OS&nbsp;X, this is 1. If the user is using the standard blue appearance, or is not on Mac OS&nbsp;X, this is 0.\nThis corresponds to the :-moz-system-metric(mac-graphite-theme)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-maemo-classic\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the user is using Maemo with the original theme, this is 1; if it's using the newer Fremantle theme, this is 0.\nThis corresponds to the :-moz-system-metric(maemo-classic)\n CSS pseudo-class.\n\nRequires Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\n-moz-device-pixel-ratio\n\nValue: &lt;number&gt;\n Media: visual\n  Accepts min\/max prefixes: yes\nGives the number of device pixels per CSS pixel.\nNote: This media feature is also implemented by Webkit as -webkit-device-pixel-ratio. The min and max prefixes as implemented by Gecko are named min--moz-device-pixel-ratio and max--moz-device-pixel-ratio; but the same prefixes as implemented by Webkit are named -webkit-min-device-pixel-ratio and -webkit-max-device-pixel-ratio.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-scrollbar-end-backward\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the device's user interface displays a backward arrow button at the end of scrollbars, this is 1. Otherwise it's 0.\nThis corresponds to the :-moz-system-metric(scrollbar-end-backward)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-scrollbar-end-forward\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the device's user interface displays a forward arrow button at the end of scrollbars, this is 1. Otherwise it's 0.\nThis corresponds to the :-moz-system-metric(scrollbar-end-forward)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-scrollbar-start-backward\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the device's user interface displays a backward arrow button at the beginning of scrollbars, this is 1. Otherwise it's 0.\nThis corresponds to the :-moz-system-metric(scrollbar-start-backward)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-scrollbar-start-forward\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the device's user interface displays a forward arrow button at the beginning of scrollbars, this is 1. Otherwise it's 0.\nThis corresponds to the :-moz-system-metric(scrollbar-start-forward)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-scrollbar-thumb-proportional\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the device's user interface displays the thumb of scrollbars proportionally (that is, sized based on the percentage of the document that is visible), this is 1. Otherwise it's 0.\nThis corresponds to the :-moz-system-metric(scrollbar-thumb-proportional)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-touch-enabled\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the device supports touch events (for a touch screen), this is 1. Otherwise it's 0.\nThis corresponds to the :-moz-system-metric(touch-enabled)\n CSS pseudo-class.\nExample\nYou might use this to render your buttons slightly larger, for example, if the user is on a touch-screen device, to make them more finger-friendly.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-windows-classic\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the user is using Windows unthemed (in classic mode instead of using uxtheme), this is 1; otherwise it's 0.\nThis corresponds to the :-moz-system-metric(windows-classic)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-windows-compositor\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the user is using Windows with the DWM&nbsp;compositor, this is 1; otherwise it's 0.\nThis corresponds to the :-moz-system-metric(windows-compositor)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-windows-default-theme\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the user is currently using one of the default Windows themes (Luna, Royale, Zune, or Aero (including Vista Basic, Vista Advanced, and Aero Glass), this is 1. Otherwise it's 0.\nThis corresponds to the :-moz-system-metric(windows-default-theme)\n CSS pseudo-class.\n\nRequires Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\n-moz-windows-theme\n\nValue: aero | luna-blue | luna-olive | luna-silver | royale | generic | zune Media: visual\n  Accepts min\/max prefixes: no\nIndicates which Windows theme is currently being used. Only available on&nbsp;Windows. Possible values are:\n aero  luna-blue  luna-olive  luna-silver  royale  generic  zune\n\nThis is provided for application skins and other chrome code to be able to adapt to work well with the current Windows theme.Example\nYou might use this to render your buttons slightly larger, for example, if the user is on a touch-screen device, to make them more finger-friendly.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-windows-classic\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the user is using Windows unthemed (in classic mode instead of using uxtheme), this is 1; otherwise it's 0.\nThis corresponds to the :-moz-system-metric(windows-classic)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-windows-compositor\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the user is using Windows with the DWM&nbsp;compositor, this is 1; otherwise it's 0.\nThis corresponds to the :-moz-system-metric(windows-compositor)\n CSS pseudo-class.\n\nRequires Gecko 1.9.2 (Firefox 3.6 \/ Thunderbird 3.1 \/ Fennec 1.0)\n\n-moz-windows-default-theme\n\nValue: &lt;integer&gt;\n  Media: visual\n  Accepts min\/max prefixes: no\nIf the user is currently using one of the default Windows themes (Luna, Royale, Zune, or Aero (including Vista Basic, Vista Advanced, and Aero Glass), this is 1. Otherwise it's 0.\nThis corresponds to the :-moz-system-metric(windows-default-theme)\n CSS pseudo-class.\n\nRequires Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\n-moz-windows-theme\n\nValue: aero | luna-blue | luna-olive | luna-silver | royale | generic | zune Media: visual\n  Accepts min\/max prefixes: no\nIndicates which Windows theme is currently being used. Only available on&nbsp;Windows. Possible values are:\n aero  luna-blue  luna-olive  luna-silver  royale  generic  zune\n\nThis is provided for application skins and other chrome code to be able to adapt to work well with the current Windows theme.Browser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support ? 3.5 (1.9.1)\n ? ? ?   grid ? -- (grid media type is not supported) ? ? ?   resolution ? 3.5 (1.9.1)\n supports &lt;integer&gt;\n  values; 8.0 (8.0)\n supports &lt;number&gt;\n values, as per the spec. ? ? ?   scan ? --&nbsp;(tv media type is not supported) ? ? ?   \n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? ?  \n\n\nSee also\n CSS 3 media query specification Media types Using media queries from code\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS_Counters","title":"CSS Counters","description":"Using counters\nTo use a CSS counter, it must first be reset to a value, 0 by default. To add the value of a counter to an element, use the counter() function. The following example adds to the beginning of each h1 element &quot;Section &lt;the value of the counter&gt;:&quot;.\n\r\n          body {\n  counter-reset: section;           \/* Set the section counter to 0 *\/\n}\nh1:before {\n  counter-increment: section;      \/* Increment the section counter *\/\n  content: &quot;Section &quot; counter(section) &quot;: &quot;; \/* Display the counter *\/\n}\r\n        \nNesting counters\nA CSS counter can be especially useful to make outlined lists because a new instance of a CSS counter is automatically created in child elements. Using the counters() function, a string can be inserted between different levels of nested counters:\n\r\n          ol {\n  counter-reset: section;                \/* Creates a new instance of the\n                                            section counter with each ol\n                                            element *\/\n  list-style-type: none;\n}\nli:before {\n  counter-increment: section;            \/* Increments only this instance\n                                            of the section counter *\/\n  content: counters(section, &quot;.&quot;) &quot; &quot;;   \/* Adds the value of all instances\n                                            of the section counter separated\n                                            by a &quot;.&quot;. *\/\n}\r\n        \nWith the following HTML:\n\r\n          &lt;ol&gt;\n  &lt;li&gt;item&lt;\/li&gt;          &lt;!-- 1     --&gt;\n  &lt;li&gt;item               &lt;!-- 2     --&gt;\n    &lt;ol&gt;\n      &lt;li&gt;item&lt;\/li&gt;      &lt;!-- 2.1   --&gt;\n      &lt;li&gt;item&lt;\/li&gt;      &lt;!-- 2.2   --&gt;\n      &lt;li&gt;item           &lt;!-- 2.3   --&gt;\n        &lt;ol&gt;\n          &lt;li&gt;item&lt;\/li&gt;  &lt;!-- 2.3.1 --&gt;\n          &lt;li&gt;item&lt;\/li&gt;  &lt;!-- 2.3.2 --&gt;\n        &lt;\/ol&gt;\n        &lt;ol&gt;\n          &lt;li&gt;item&lt;\/li&gt;  &lt;!-- 2.3.1 --&gt;\n          &lt;li&gt;item&lt;\/li&gt;  &lt;!-- 2.3.2 --&gt;\n          &lt;li&gt;item&lt;\/li&gt;  &lt;!-- 2.3.3 --&gt;\n        &lt;\/ol&gt;\n      &lt;\/li&gt;\n      &lt;li&gt;item&lt;\/li&gt;      &lt;!-- 2.4   --&gt;\n    &lt;\/ol&gt;\n  &lt;\/li&gt;\n  &lt;li&gt;item&lt;\/li&gt;          &lt;!-- 3     --&gt;\n  &lt;li&gt;item&lt;\/li&gt;          &lt;!-- 4     --&gt;\n&lt;\/ol&gt;\n&lt;ol&gt;\n  &lt;li&gt;item&lt;\/li&gt;          &lt;!-- 1     --&gt;\n  &lt;li&gt;item&lt;\/li&gt;          &lt;!-- 2     --&gt;\n&lt;\/ol&gt;\r\n        \nSpecifications\n CSS 2.1\n\nSee also\n counter-reset counter-increment\n\nThere is an additional example available at http:\/\/www.mezzoblue.com\/archives\/20...\/counter_intu\/. This blog entry was posted on November 01, 2006, but appears to be accurate.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Using_CSS_gradients","title":"Using CSS gradients","description":"Linear gradients\nTo create a linear gradient, you set a starting point and a direction (specified as an angle) along which the gradient effect is applied. You also define color stops. Color stops are the colors you want Gecko to render smooth transitions among, and you must specify at least two of them, but can specify more to create more complex gradient effects.\nSimple linear gradients\nHere's a linear gradient that starts at the center (horizontally) and top (vertically), and starts blue, transitioning to white.\n   Screen Shot Live Demonstration      t    \n\n&nbsp;\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(top, blue, white); \n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to bottom, blue, white);\r\n        \nChanging the same gradient to run from left to right:\n   Screen Shot Live Demonstration      t    \n\n&nbsp;\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(left, blue, white); \n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to right, blue, white);\r\n        \nYou can make the gradient run diagonally by specifying both the horizontal and vertical starting positions. For example:\n   Screen Shot Live Demonstration      t    \n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(left top, blue, white); \n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to bottom right, blue, white);\r\n        \nUsing angles\nIf you don't specify an angle, one is determined automatically based on the start position. If you'd like more control over the direction of the gradient, you can set the angle specifically.\nFor example, here are two gradients that have the same starting point of &quot;left center&quot;, but the second one also has an angle of 20 degrees.\n\nThe one on the right uses CSS&nbsp;like this:\n\r\n          \/* Must be prefixed *\/\nbackground: linear-gradient(left 20deg, black, white);\r\n        \nThe angle is specified as an angle between a horizontal line and the gradient line, going counter-clockwise. In other words, 0deg generates a left to right horizontal gradient, while 90deg creates a vertical gradient from the bottom to the top:\n\n\r\n          \/* Must be prefixed *\/\nbackground: linear-gradient(&lt;angle&gt;, red, white);\r\n        \nColor stops\nColor stops are points along the gradient line that will have a specific color at that location. The location can be specified as either a percentage of the length of the line, or as an absolute length. You may specify as many color stops as you like in order to achieve the desired effect.\nIf you specify the location as a percentage, 0% represents the starting point, while 100% represents the ending point; however, you can use values outside that range if necessary to get the effect you want.\nExample:&nbsp;Three color stops\nThis example specifies three color stops:\n   Screen Shot Live Demonstration      t    \n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(top, blue, white 80%, orange);\n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to bottom, blue, white 80%, orange);\r\n        \nNote that the first and last color stops don't specify a location; because of that, values of 0% and 100% are assigned automatically. The middle color stop specifies a location of 80%, putting it most of the way toward the bottom.\nExample:&nbsp;Evenly spaced color stops\nHere's an example using a wide variety of colors, all evenly spaced:\n   Screen Shot Live Demonstration      t    \n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(left, red, orange, yellow, green, blue);\n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to right, red, orange, yellow, green, blue);\r\n        \nNotice that the color stops are automatically spaced evenly when no locations are specified.\nTransparency and gradients\nGradients support transparency. You can use this, for example, when stacking multiple backgrounds, to create fading effects on background images. For example:\n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/ \nbackground: linear-gradient(left, rgba(255,255,255,0), rgba(255,255,255,1)), url(http:\/\/foo.com\/image.jpg);\n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/  \nbackground: linear-gradient(to right, rgba(255,255,255,0), rgba(255,255,255,1)), url(http:\/\/foo.com\/image.jpg);\r\n        \nThe backgrounds are stacked with the first specified background on top, and each successive background farther away. By stacking backgrounds this way, you can create very creative effects as seen above.\nSimple linear gradients\nHere's a linear gradient that starts at the center (horizontally) and top (vertically), and starts blue, transitioning to white.\n   Screen Shot Live Demonstration      t    \n\n&nbsp;\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(top, blue, white); \n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to bottom, blue, white);\r\n        \nChanging the same gradient to run from left to right:\n   Screen Shot Live Demonstration      t    \n\n&nbsp;\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(left, blue, white); \n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to right, blue, white);\r\n        \nYou can make the gradient run diagonally by specifying both the horizontal and vertical starting positions. For example:\n   Screen Shot Live Demonstration      t    \n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(left top, blue, white); \n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to bottom right, blue, white);\r\n        \nUsing angles\nIf you don't specify an angle, one is determined automatically based on the start position. If you'd like more control over the direction of the gradient, you can set the angle specifically.\nFor example, here are two gradients that have the same starting point of &quot;left center&quot;, but the second one also has an angle of 20 degrees.\n\nThe one on the right uses CSS&nbsp;like this:\n\r\n          \/* Must be prefixed *\/\nbackground: linear-gradient(left 20deg, black, white);\r\n        \nThe angle is specified as an angle between a horizontal line and the gradient line, going counter-clockwise. In other words, 0deg generates a left to right horizontal gradient, while 90deg creates a vertical gradient from the bottom to the top:\n\n\r\n          \/* Must be prefixed *\/\nbackground: linear-gradient(&lt;angle&gt;, red, white);\r\n        \nColor stops\nColor stops are points along the gradient line that will have a specific color at that location. The location can be specified as either a percentage of the length of the line, or as an absolute length. You may specify as many color stops as you like in order to achieve the desired effect.\nIf you specify the location as a percentage, 0% represents the starting point, while 100% represents the ending point; however, you can use values outside that range if necessary to get the effect you want.\nExample:&nbsp;Three color stops\nThis example specifies three color stops:\n   Screen Shot Live Demonstration      t    \n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(top, blue, white 80%, orange);\n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to bottom, blue, white 80%, orange);\r\n        \nNote that the first and last color stops don't specify a location; because of that, values of 0% and 100% are assigned automatically. The middle color stop specifies a location of 80%, putting it most of the way toward the bottom.\nExample:&nbsp;Evenly spaced color stops\nHere's an example using a wide variety of colors, all evenly spaced:\n   Screen Shot Live Demonstration      t    \n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(left, red, orange, yellow, green, blue);\n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to right, red, orange, yellow, green, blue);\r\n        \nNotice that the color stops are automatically spaced evenly when no locations are specified.\nExample:&nbsp;Three color stops\nThis example specifies three color stops:\n   Screen Shot Live Demonstration      t    \n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(top, blue, white 80%, orange);\n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to bottom, blue, white 80%, orange);\r\n        \nNote that the first and last color stops don't specify a location; because of that, values of 0% and 100% are assigned automatically. The middle color stop specifies a location of 80%, putting it most of the way toward the bottom.\nExample:&nbsp;Evenly spaced color stops\nHere's an example using a wide variety of colors, all evenly spaced:\n   Screen Shot Live Demonstration      t    \n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/\nbackground: linear-gradient(left, red, orange, yellow, green, blue);\n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/\nbackground: linear-gradient(to right, red, orange, yellow, green, blue);\r\n        \nNotice that the color stops are automatically spaced evenly when no locations are specified.\nTransparency and gradients\nGradients support transparency. You can use this, for example, when stacking multiple backgrounds, to create fading effects on background images. For example:\n\n\r\n          \/* The old syntax, deprecated, but still needed with the -o, -ms and -webkit prefixes*\/ \nbackground: linear-gradient(left, rgba(255,255,255,0), rgba(255,255,255,1)), url(http:\/\/foo.com\/image.jpg);\n\n\/* The new syntax needed for Firefox 10 onwards, with the -moz prefix *\/  \nbackground: linear-gradient(to right, rgba(255,255,255,0), rgba(255,255,255,1)), url(http:\/\/foo.com\/image.jpg);\r\n        \nThe backgrounds are stacked with the first specified background on top, and each successive background farther away. By stacking backgrounds this way, you can create very creative effects as seen above.\nRadial gradients\nRadial gradients are specified using the -moz-radial-gradient\n property. The syntax is similar to that for linear gradients, except you can specify the gradient's shape (whether it should be a circle or ellipse) as well as its size.\nColor stops\nYou specify color stops the same way as for linear gradients. The gradient line extends out from the starting position in all directions.\nExample:&nbsp;Evenly spaced color stops\nBy default, as with linear gradients, the color stops are evenly spaced:\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(red, yellow, rgb(30, 144, 255));\r\n        \nExample:&nbsp;Explicitly spaced color stops\nHere we specify specific locations for the color stops:\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(red 5%, yellow 25%, #1E90FF 50%);\r\n        \nSize\nThis is one of the areas in which radial gradients differ from linear gradients. You can provide a size value that specifies the point that defines the size of the circle or ellipse. See this description of the size constants for specifics.\nExample:&nbsp;closest-side for ellipses\nThis ellipse uses the closest-side size value, which means the size is set by the distance from the starting point (the center)&nbsp;to the closest side of the enclosing box.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(ellipse closest-side, red, yellow 10%, #1E90FF 50%, white);\r\n        \nExample:&nbsp;farthest-corner for ellipses\nThis example is similar to the previous one, except that its size is specified as farthest-corner, which sets the size of the gradient by the distance from the starting point to the farthest corner of the enclosing box from the starting point.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(ellipse farthest-corner, red, yellow 10%, #1E90FF 50%, white);\r\n        \nExample:&nbsp;closest-side for circles\nThis example uses closest-side, which determines the circle's size as the distance between the start point (the center)&nbsp;and the closest side.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(circle closest-side, red, yellow 10%, #1E90FF 50%, white);\r\n        \nHere, the circle's radius is half the height of the box, since the top and bottom edges are equidistant from the start point and are closer than the left and right edges.\nColor stops\nYou specify color stops the same way as for linear gradients. The gradient line extends out from the starting position in all directions.\nExample:&nbsp;Evenly spaced color stops\nBy default, as with linear gradients, the color stops are evenly spaced:\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(red, yellow, rgb(30, 144, 255));\r\n        \nExample:&nbsp;Explicitly spaced color stops\nHere we specify specific locations for the color stops:\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(red 5%, yellow 25%, #1E90FF 50%);\r\n        \nExample:&nbsp;Evenly spaced color stops\nBy default, as with linear gradients, the color stops are evenly spaced:\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(red, yellow, rgb(30, 144, 255));\r\n        \nExample:&nbsp;Explicitly spaced color stops\nHere we specify specific locations for the color stops:\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(red 5%, yellow 25%, #1E90FF 50%);\r\n        \nSize\nThis is one of the areas in which radial gradients differ from linear gradients. You can provide a size value that specifies the point that defines the size of the circle or ellipse. See this description of the size constants for specifics.\nExample:&nbsp;closest-side for ellipses\nThis ellipse uses the closest-side size value, which means the size is set by the distance from the starting point (the center)&nbsp;to the closest side of the enclosing box.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(ellipse closest-side, red, yellow 10%, #1E90FF 50%, white);\r\n        \nExample:&nbsp;farthest-corner for ellipses\nThis example is similar to the previous one, except that its size is specified as farthest-corner, which sets the size of the gradient by the distance from the starting point to the farthest corner of the enclosing box from the starting point.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(ellipse farthest-corner, red, yellow 10%, #1E90FF 50%, white);\r\n        \nExample:&nbsp;closest-side for circles\nThis example uses closest-side, which determines the circle's size as the distance between the start point (the center)&nbsp;and the closest side.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(circle closest-side, red, yellow 10%, #1E90FF 50%, white);\r\n        \nHere, the circle's radius is half the height of the box, since the top and bottom edges are equidistant from the start point and are closer than the left and right edges.\nExample:&nbsp;closest-side for ellipses\nThis ellipse uses the closest-side size value, which means the size is set by the distance from the starting point (the center)&nbsp;to the closest side of the enclosing box.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(ellipse closest-side, red, yellow 10%, #1E90FF 50%, white);\r\n        \nExample:&nbsp;farthest-corner for ellipses\nThis example is similar to the previous one, except that its size is specified as farthest-corner, which sets the size of the gradient by the distance from the starting point to the farthest corner of the enclosing box from the starting point.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(ellipse farthest-corner, red, yellow 10%, #1E90FF 50%, white);\r\n        \nExample:&nbsp;closest-side for circles\nThis example uses closest-side, which determines the circle's size as the distance between the start point (the center)&nbsp;and the closest side.\n   Screen Shot Live Demonstration        \n\n\r\n          background: -moz-radial-gradient(circle closest-side, red, yellow 10%, #1E90FF 50%, white);\r\n        \nHere, the circle's radius is half the height of the box, since the top and bottom edges are equidistant from the start point and are closer than the left and right edges.\nRepeating gradients\nThe linear-gradient\n&nbsp;and radial-gradient\n properties don't support automatically repeating the color stops. However, the repeating-linear-gradient\n and repeating-radial-gradient\n&nbsp;properties are available to offer this functionality.\nExample:&nbsp;Repeating linear gradient\nThis example uses repeating-linear-gradient\n to create a gradient:\n   Screen Shot Live Demonstration    &nbsp;  \n\n\r\n          background: repeating-linear-gradient(top left -45deg, red, red 5px, white 5px, white 10px);\r\n        \nExample:&nbsp;Repeating radial gradient\nThis example uses -moz-repeating-radial-gradient\n&nbsp;to create a gradient:\n   Screen Shot Live Demonstration    &nbsp;  \n\n\r\n          background: -moz-repeating-radial-gradient(black, black 5px, white 5px, white 10px);\r\n        \nExample:&nbsp;Repeating linear gradient\nThis example uses repeating-linear-gradient\n to create a gradient:\n   Screen Shot Live Demonstration    &nbsp;  \n\n\r\n          background: repeating-linear-gradient(top left -45deg, red, red 5px, white 5px, white 10px);\r\n        \nExample:&nbsp;Repeating radial gradient\nThis example uses -moz-repeating-radial-gradient\n&nbsp;to create a gradient:\n   Screen Shot Live Demonstration    &nbsp;  \n\n\r\n          background: -moz-repeating-radial-gradient(black, black 5px, white 5px, white 10px);\r\n        \nSee also\n Gradient-related reference articles: &lt;image&gt;\n , &lt;gradient&gt;\n , linear-gradient\n, radial-gradient\n, repeating-linear-gradient\n, repeating-radial-gradient\n.\n\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Specificity","title":"Specificity","description":"See also\n CSS selectors spec: http:\/\/www.w3.org\/TR\/css3-selectors\/#specificity CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/initial_value","title":"initial value","description":"Summary\nThe initial value given in the summary of the definition of each CSS property has different meaning for inherited and non-inherited properties.\nFor inherited properties, the initial value is used, for the root element only, when no value is specified for the element.\nFor non-inherited properties the initial value is used, for any element, when no value is specified for the element.\nAn initial keyword is being added in CSS3 to allow authors to explicitly specify this initial value.\nSee Also\n CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values.  initial\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/inheritance","title":"inheritance","description":"Summary\nThe summary of every CSS property definition says whether that property is inherited by default (&quot;Inherited: Yes&quot;) or not inherited by default (&quot;Inherited: no&quot;). This controls what happens when no value is specified for a property on an element.\nInherited properties\nWhen no value for an inherited property has been specified on an element, the element gets the computed value of that property on its parent element. Only the root element of the document gets the initial value given in the property's summary.\nA typical example of an inherited property is the color\n property. Given the style rules:\n\r\n          p { color: green }\r\n        \nand the markup:\n\r\n          &lt;p&gt;This paragraph has &lt;em&gt;emphasized text&lt;\/em&gt; in it.&lt;\/p&gt;\r\n        \nthe words &quot;emphasized text&quot; will appear green, since the em element has inherited the value of the color\n property from the p element. It does not get the initial value of the property (which is the color that is used for the root element when the page specifies no color).\nNon-inherited properties\nWhen no value for an non-inherited property (sometimes called a reset property in Mozilla code) has been specified on an element, the element gets the initial value of that property (as specified in the property's summary).\nA typical example of a non-inherited property is the border\n property. Given the style rules:\n\r\n          p { border: medium solid }\r\n        \nand the markup\n\r\n          &lt;p&gt;This paragraph has &lt;em&gt;emphasized text&lt;\/em&gt; in it.&lt;\/p&gt;\r\n        \nthe words &quot;emphasized text&quot; will not have a border (since the initial value of border-style\n is none).\nNotes\nThe inherit\n keyword allows authors to explicitly specify inheritance. It works on both inherited and non-inherited properties.\nSee Also\n CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values. inherit\n\n\n&nbsp;\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/specified_value","title":"specified value","description":"Summary\nThe specified value of a CSS property is set in one out of three ways.\n If the document's stylesheet has specified a value for the property then it will be used. For example; if the color\n property is set to green then the text color of the corresponding element will be green. If the document's stylesheet has not specified a value then it will be inherited form the parent element (if possible). For example; if we have a paragraph (&lt;p&gt;\n) inside a &lt;div&gt;\n and the &lt;div&gt;\n has a CSS font property value of &quot;Arial&quot; and the &lt;p&gt;\n doesn't have a font property defined then it will inherit the Arial font. If none of the above are available, the initial value for the element as specified by the CSS specification is applied.\n\nSpecifications\n CSS 2.1 Assigning property values #specified-value\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/used_value","title":"used value","description":"Details\nThere are three steps to calculating any CSS property's final value. First, the specified value&nbsp;is the result of cascading (choosing the most specific stylesheet rule that changes the property), inheritance&nbsp;(using the same computed value as a parent if the property is inheritable), or using the default. Then, the computed value&nbsp;is calculated according to the specification (for example, a span with position: absolute will have its computed&nbsp;display changed to block). Finally, layout is calculated (dimensions that are&nbsp;auto&nbsp;or percentages relative to a parent are replaced with pixel values), and the result is the used value. These steps are calculated internally; a script can read only the final used values with&nbsp;window.getComputedStyle.\nExample\nNo explicit width. Specified width: auto (default). Computed width: auto. Used width: 998px (for example). Explicit width: 50%.&nbsp;Specified width: 50%. Computed width: 50%. Used width: 447px (for example). Explicit width: inherit.&nbsp;Specified width: 50%. Computed width: 50%. Used width: 221px (for example). \n\nDifference from computed values\nCSS 2.0 defined only&nbsp;computed value as the last step in a property's calculation. Then, CSS 2.1 introduced the&nbsp;distinct definition of used value&nbsp;so that an element could explicitly inherit a width\/height of a parent whose computed value&nbsp;is a percentage.&nbsp;For CSS properties that don't depend on layout (e.g. display, font-size, line-height), the computed values and used values are the same. These are the properties that do depend on layout so have a different computed value and used value: (taken from&nbsp;CSS 2.1 Changes: Specified, computed, and actual values):\n background-position bottom, left, right, top height, width margin-bottom, margin-left, margin-right, margin-top, min-height, min-width padding-bottom, padding-left, padding-right, padding-top text-indent\n\nSpecification\nCSS Level 2: Used Values\nSee also\n CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values. window.getComputedStyle\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/computed_value","title":"Computed value","description":"Summary\nThe computed value of a CSS property is computed from the specified value by:\n handling the special values inherit\n and initial\n, and doing the computation needed to reach the value described in the &quot;Computed value&quot; line in the property's summary.\n\nThe computation needed to reach the &quot;Computed value&quot; for the property typically involves converting relative values (such as those in em units or percentages) to absolute values.\nFor example, if an element has specified values font-size:16px and padding-top:2em, then the computed value of padding-top is 32px (double the font size).\nHowever, for some properties (those where percentages are relative to something that may require layout to determine, such as width, margin-right, text-indent, and top), percentage specified values turn into percentage computed values. Additionally, unitless numbers specified on the line-height property become the computed value, as specified. These relative values that remain in the computed value become absolute when the used value is determined.\nThe main use of the computed value (other than as a step between the specified value and used value) is inheritance, including the inherit\n keyword.\nNotes\nThe getComputedStyle DOM API returns the used value, not the computed value.\nSpecifications\n CSS 21 Assigning property values #computed-value \n\nSee also\n CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values.\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/actual_value","title":"actual value","description":"Summary\nThe actual value of a CSS property is the used value after all approximations have been applied. For example; a user agent may only be able to render borders with a integer pixel value and may be forced to approximate the computed width of the border.\nSpecifications\n CSS 2.1 Assigning property values #actual-value\n\nSee also\n CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/box_model","title":"Box model","description":"Summary\nIn a document, each element is represented as a rectangular box. Determining the size, properties &mdash; like its color, background, borders aspect &mdash; and the position of these boxes is the goal of the rendering engine.\nIn CSS each of these rectangular boxes is described using the standard box model. This model describes the content of the space taken by an element. Each box has four edges, the margin edge, border edge, padding edge, and content edge.\n\nThe content area is the area containing the real content of the element. It is located inside the content edge, and its dimensions are the content width, or content-box width, and the content height, or content-box height.\nIf the CSS box-sizing\n property is not set to another value than its default, the CSS properties width\n, min-width\n, max-width\n, height\n, min-height\n and max-height\n controls the content size.\nThe padding area extends the content area with the empty area between the content and the eventual borders surrounding it. It often has a background, a color or an image (in that order, an opaque image hiding the background color), and is located inside the padding edge. Its dimensions are the padding-box width and the padding-box height.\nThe space between the padding and the content edge can be controlled using the padding-top\n, padding-right\n, padding-bottom\n, padding-left\n and the shorthand padding\n CSS properties.\nThe border area extends the padding area with the area containing the borders. It is the area inside the border edge, and its dimensions are the border-box width and the border-box height. This area depends of the size of the border that is defined by the border-width\n property or the shorthand border\n.\nThe margin area extends the boarder area with an empty area used to separate the element from its neighbors. It is the area inside the margin edge, and its dimensions are the margin-box width and the margin-box height.\nThe size of the margin area is controlled using the margin-top\n, margin-right\n, margin-bottom\n, margin-left\n and the shorthand margin\n CSS properties.\nWhen margin collapsing happens, the margin area is not clearly defined since margins are shared between boxes.\nFinally, note that, for non-replaced inline elements, the amount of space taken up (the contribution to the height of the line) is determined by the line-height\n property, even though the border and padding appear visually around the content.\nSpecification\n   Specification Status Comment     CSS Level 2 (revision 1) Recommendation\n Though more precisely worded, there is no practical change   CSS Level 1 Recommendation\n &nbsp;  \n\nSee also\n CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values. Related CSS properties: box-sizing\n, height\n, max-height\n, min-height\n, width\n, max-height\n, min-height\n, padding\n, padding-top\n, padding-right\n, padding-bottom\n, padding-left\n, border\n, border-top\n, border-right\n, border-bottom\n, border-left\n, border-width\n, border-top-width\n, border-right-width\n, border-bottom-width\n, border-left-width\n, margin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started","title":"Getting Started","description":"Introduction\nThis tutorial introduces you to Cascading Style Sheets (CSS).\nIt guides you through the basic features of CSS with practical examples that you can try for yourself on your own computer. It is in two parts.\n Part I illustrates the standard features of CSS that work in Mozilla browsers and also in most other modern browsers.\n\n Part II contains some examples of special features that work in Mozilla but do not necessarily work in other environments.\n\nThe tutorial is based on the CSS 2.1 Specification.\nWho should use this tutorial?\nThis tutorial is mostly for beginners in CSS, but you can also use it if you have some experience in CSS.\nIf you are a beginner in CSS, use Part I of this tutorial to understand CSS and learn how to use it. Then use Part II to understand the scope of CSS in Mozilla.\nIf you know some CSS, you can skip the parts of the tutorial that you already know, and only use the parts that interest you.\nIf you are experienced in CSS but not in Mozilla, you can skip to Part II.\nWhat do you need before you start?\nTo get the most from this tutorial, you need an editor for text files and, especially for Part II, a Mozilla browser (Firefox, Camino or SeaMonkey). You must also know how to use them in basic ways.\nIf you do not want to edit files, then you can just read the tutorial and look at the pictures, but that is a less effective way for you to learn.\nA few parts of the tutorial require other Mozilla software. Those parts are optional. If you do not want to download other Mozilla software, then you can skip them. The other Mozilla software referenced by this tutorial includes:\n DOM&nbsp;Inspector\n\nNote:&nbsp; CSS provides ways to work with color, so parts of this tutorial depend on color. You can only use these parts of the tutorial easily if you have a color display and normal color vision.\nHow to use this tutorial\nTo use this tutorial, read the pages carefully and in sequence. If you miss a page, then you might find it difficult to understand later pages.\nOn each page, use the Information section to understand how CSS works. Use the Action section to try using CSS on your own computer.\nTo test your understanding, take the challenge at the end of each page. Solutions the challenges are linked under the challenges, so you don't need to look at them if you don't want to.\nTo understand CSS in more depth, read the information that you find in boxes captioned More details. Use the links there to find reference information about CSS.\nWho should use this tutorial?\nThis tutorial is mostly for beginners in CSS, but you can also use it if you have some experience in CSS.\nIf you are a beginner in CSS, use Part I of this tutorial to understand CSS and learn how to use it. Then use Part II to understand the scope of CSS in Mozilla.\nIf you know some CSS, you can skip the parts of the tutorial that you already know, and only use the parts that interest you.\nIf you are experienced in CSS but not in Mozilla, you can skip to Part II.\nWhat do you need before you start?\nTo get the most from this tutorial, you need an editor for text files and, especially for Part II, a Mozilla browser (Firefox, Camino or SeaMonkey). You must also know how to use them in basic ways.\nIf you do not want to edit files, then you can just read the tutorial and look at the pictures, but that is a less effective way for you to learn.\nA few parts of the tutorial require other Mozilla software. Those parts are optional. If you do not want to download other Mozilla software, then you can skip them. The other Mozilla software referenced by this tutorial includes:\n DOM&nbsp;Inspector\n\nNote:&nbsp; CSS provides ways to work with color, so parts of this tutorial depend on color. You can only use these parts of the tutorial easily if you have a color display and normal color vision.\nHow to use this tutorial\nTo use this tutorial, read the pages carefully and in sequence. If you miss a page, then you might find it difficult to understand later pages.\nOn each page, use the Information section to understand how CSS works. Use the Action section to try using CSS on your own computer.\nTo test your understanding, take the challenge at the end of each page. Solutions the challenges are linked under the challenges, so you don't need to look at them if you don't want to.\nTo understand CSS in more depth, read the information that you find in boxes captioned More details. Use the links there to find reference information about CSS.\nTutorial Part I\nA basic step-by-step guide to CSS.\n What is CSS Why use CSS How CSS works Cascading and inheritance Selectors Readable CSS Text styles Color Content Lists Boxes Layout Tables Media\n\nTutorial Part II\nExamples that show the scope of CSS used with other web and Mozilla technologies.\n JavaScript SVG graphics XML data XBL bindings XUL user interfaces\n\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/margin_collapsing","title":"Margin collapsing","description":"Summary\nTop and bottom margins of blocks are sometimes combined (collapsed) into a single margin whose size is the largest of the margins combined into it, a behavior known as margin collapsing.\nMargin collapsing occurs in three basic cases:\n Adjacent siblings The margins of adjacent siblings are collapsed (except when the later sibling needs to be cleared past floats). For example: \n &lt;p&gt;The bottom margin of this paragraph is collapsed...&lt;\/p&gt;\n &lt;p&gt;...with the top margin of this paragraph.&lt;p&gt;\n  Parent and first\/last child If there is no border, padding, inline content, or clearance to separate the margin-top of a block with the margin-top of its first child block, or no border, padding, inline content, height, min-height, or max-height to separate the margin-bottom of a block with the margin-bottom of its last child, then those margins collapse. The collapsed margin ends up outside the parent. Empty blocks If there is no border, padding, inline content, height, or min-height to separate a block's margin-top from its margin-bottom, then its top and bottom margins collapse.\n\nMore complex margin collapsing (of more than two margins) occurs when these cases are combined.\nThese rules apply even to margins that are zero, so the margin of a first\/last child ends up outside its parent (according to the rules above) whether or not the parent's margin is zero.\nWhen negative margins are involved, the size of the collapsed margin is the sum of the largest positive margin and the smallest (most negative) negative margin.\nMargins of floating and absolutely positioned elements never collapse.\nSpecifications\n CSS 2.1 Box #Collapsing_margins\n\nSee also\n CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values. \n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n\n\nSee also\n CSS Reference CSS Key Concepts: specificity and inheritance, the box model and margin collapsing, or the initial, computed, used and actual values. \n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/block_formatting_context","title":"block formatting context","description":" Summary \nA block formatting context is a part of a visual CSS rendering of a Web page. It is the region in which the layout of block boxes occurs and in which floats interact with each other.\nA block formatting context is created by one of the following:\n\n the root element or something that contains it\n floats (elements where float is not none)\n absolutely positioned elements (elements where position is absolute or fixed)\n inline-blocks (elements with display: inline-block)\n table cells (elements with display: table-cell, which is the default for HTML table cells)\n table captions (elements with display: table-caption, which is the default for HTML table captions)\n elements where overflow has a value other than visible\n\nA block formatting context contains everything inside of the element creating it that is not also inside a descendant element that creates a new block formatting context.\nBlock formatting contexts are important for the positioning (see float) and clearing (see clear) of floats. The rules for positioning and clearing of floats apply only to things within the same block formatting context. Floats do not affect the layout of things in other block formatting contexts, and clear only clears past floats in the same block formatting context.\n\n Specifications \n CSS 2.1\n\n See Also \nfloat, clear\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/CSS_transitions","title":"CSS transitions","description":"List of animatable CSS properties\nCSS&nbsp;transitions and CSS animations can be used to animate the CSS properties listed here: CSS animatable properties. This list also includes the SVG properties that can be animated.\nNote: The set of properties that can be animated is subject to change; as such, you should avoid including any properties in the list that don't currently animate, because someday they might, causing unexpected results.\nCSS&nbsp;transition properties\nCSS&nbsp;transitions are controlled using the transition\n shorthand property. This is the preferred way to set up your transitions, because it makes it easier to avoid getting your parameter list lengths out of sync, which can result in a frustratingly large amount of time spent debugging of your CSS.\nIf you wish, you can control the individual components of the transition using the following sub-properties:\n transition-property\n Specifies the name or names of the CSS&nbsp;properties to which transitions should be applied. Only properties listed here are animated during transitions; changes to all other properties occur instantaneously as usual. transition-duration\n Specifies the duration over which transitions should occur. You can specify a single duration that applies to all properties during the transition, or multiple values to allow each property to transition over a different period of time. transition-timing-function\n Specifies a cubic bezier curve used to define how intermediate values for properties are computed. transition-delay\n Defines how long to wait between the time a property is changed and the transition actually begins.\n\nUsing transition timing functions\nTiming functions determine how intermediate values of the transition are calculated. The timing function can be specified by providing the graph of the corresponding function, as defined by four points defining a cubic bezier:\n\nThis CSS transition function manipulator is a convenient tool to visually generate CSS transition timing functions.\nInstead of specifying a bezier directly, there are pre-defined timing values:\n ease, equivalent to cubic-bezier(0.25, 0.1, 0.25, 1.0) linear, equivalent to cubic-bezier(0.0, 0.0, 1.0, 1.0) ease-in, equivalent to cubic-bezier(0.42, 0, 1.0, 1.0) ease-out, equivalent to cubic-bezier(0, 0, 0.58, 1.0) ease-in-out, equivalent to cubic-bezier(0.42, 0, 0.58, 1.0)\n\nA transition timing effect sampler\nThis simple example provides demonstrations of several of the transition effects without a lot of extra fluff.\nBefore we look at code snippets, you might want to take a look at the live demo (assuming your browser supports transitions). You can also take a look directly at the CSS it uses.\nFirst, the HTML to create the items we'll be testing our transitions on:\n\r\n          &lt;ul&gt;\n  &lt;li id=&quot;long1&quot;&gt;Long, gradual transition...&lt;\/li&gt;\n  &lt;li id=&quot;fast1&quot;&gt;Very fast transition...&lt;\/li&gt;\n  &lt;li id=&quot;delay1&quot;&gt;Long transition with a 2-second delay...&lt;\/li&gt;\n  &lt;li id=&quot;easeout&quot;&gt;Using ease-out timing...&lt;\/li&gt;\n  &lt;li id=&quot;linear&quot;&gt;Using linear timing...&lt;\/li&gt;\n  &lt;li id=&quot;cubic1&quot;&gt;Using cubic-bezier(0.2, 0.4, 0.7, 0.8)...&lt;\/li&gt;\n&lt;\/ul&gt;\r\n        \nEach item has its own ID; the CSS takes care of the rest. Let's take a look at a couple of examples.\nUsing a delay\nThis example performs a four-second font size transition with a two-second delay between the time the user mouses over the element and the beginning of the animation effect:\n\r\n          #delay1 {\n  position: relative;\n  transition-property: font-size;\n  transition-duration: 4s;\n  transition-delay: 2s;\n  font-size: 14px;\n}\n\n#delay1:hover {\n  transition-property: font-size;\n  transition-duration: 4s;\n  transition-delay: 2s;\n  font-size: 36px;\n}\r\n        \nUsing a linear transition timing function\nBy default, the timing function used to compute the intermediate steps during the animation sequence provides a gentle acceleration and deceleration curve for the animation effect. If you'd rather have the effect maintain a constant speed for the duration of the animation, you can specify that you'd like to use the linear transition timing function, as shown below.\n\r\n          transition-timing-function: linear;\r\n        \nThere are several other standard timing functions available; see transition-timing-function\n&nbsp;for details.\nSpecifying a cubic bezier timing function\nYou can take even more control over the timing of the animation sequence by specifying your own cubic bezier curve describing the animation speed. For example:\n\r\n          transition-timing-function: cubic-bezier(0.2, 0.4, 0.7, 0.8);\r\n        \nThis establishes a timing function with a bezier curve defined by the points (0.0, 0.0), (0.2, 0.4), (0.7, 0.8), and (1.0, 1.0).\nA transition timing effect sampler\nThis simple example provides demonstrations of several of the transition effects without a lot of extra fluff.\nBefore we look at code snippets, you might want to take a look at the live demo (assuming your browser supports transitions). You can also take a look directly at the CSS it uses.\nFirst, the HTML to create the items we'll be testing our transitions on:\n\r\n          &lt;ul&gt;\n  &lt;li id=&quot;long1&quot;&gt;Long, gradual transition...&lt;\/li&gt;\n  &lt;li id=&quot;fast1&quot;&gt;Very fast transition...&lt;\/li&gt;\n  &lt;li id=&quot;delay1&quot;&gt;Long transition with a 2-second delay...&lt;\/li&gt;\n  &lt;li id=&quot;easeout&quot;&gt;Using ease-out timing...&lt;\/li&gt;\n  &lt;li id=&quot;linear&quot;&gt;Using linear timing...&lt;\/li&gt;\n  &lt;li id=&quot;cubic1&quot;&gt;Using cubic-bezier(0.2, 0.4, 0.7, 0.8)...&lt;\/li&gt;\n&lt;\/ul&gt;\r\n        \nEach item has its own ID; the CSS takes care of the rest. Let's take a look at a couple of examples.\nUsing a delay\nThis example performs a four-second font size transition with a two-second delay between the time the user mouses over the element and the beginning of the animation effect:\n\r\n          #delay1 {\n  position: relative;\n  transition-property: font-size;\n  transition-duration: 4s;\n  transition-delay: 2s;\n  font-size: 14px;\n}\n\n#delay1:hover {\n  transition-property: font-size;\n  transition-duration: 4s;\n  transition-delay: 2s;\n  font-size: 36px;\n}\r\n        \nUsing a linear transition timing function\nBy default, the timing function used to compute the intermediate steps during the animation sequence provides a gentle acceleration and deceleration curve for the animation effect. If you'd rather have the effect maintain a constant speed for the duration of the animation, you can specify that you'd like to use the linear transition timing function, as shown below.\n\r\n          transition-timing-function: linear;\r\n        \nThere are several other standard timing functions available; see transition-timing-function\n&nbsp;for details.\nSpecifying a cubic bezier timing function\nYou can take even more control over the timing of the animation sequence by specifying your own cubic bezier curve describing the animation speed. For example:\n\r\n          transition-timing-function: cubic-bezier(0.2, 0.4, 0.7, 0.8);\r\n        \nThis establishes a timing function with a bezier curve defined by the points (0.0, 0.0), (0.2, 0.4), (0.7, 0.8), and (1.0, 1.0).\nUsing a delay\nThis example performs a four-second font size transition with a two-second delay between the time the user mouses over the element and the beginning of the animation effect:\n\r\n          #delay1 {\n  position: relative;\n  transition-property: font-size;\n  transition-duration: 4s;\n  transition-delay: 2s;\n  font-size: 14px;\n}\n\n#delay1:hover {\n  transition-property: font-size;\n  transition-duration: 4s;\n  transition-delay: 2s;\n  font-size: 36px;\n}\r\n        \nUsing a linear transition timing function\nBy default, the timing function used to compute the intermediate steps during the animation sequence provides a gentle acceleration and deceleration curve for the animation effect. If you'd rather have the effect maintain a constant speed for the duration of the animation, you can specify that you'd like to use the linear transition timing function, as shown below.\n\r\n          transition-timing-function: linear;\r\n        \nThere are several other standard timing functions available; see transition-timing-function\n&nbsp;for details.\nSpecifying a cubic bezier timing function\nYou can take even more control over the timing of the animation sequence by specifying your own cubic bezier curve describing the animation speed. For example:\n\r\n          transition-timing-function: cubic-bezier(0.2, 0.4, 0.7, 0.8);\r\n        \nThis establishes a timing function with a bezier curve defined by the points (0.0, 0.0), (0.2, 0.4), (0.7, 0.8), and (1.0, 1.0).\nDetecting the completion of a transition\nThere is a single event that is fired when transitions complete. In Firefox, the event is transitionend, in Opera, oTransitionEnd, and in WebKit it is webkitTransitionEnd. See the compatibility table at the bottom for more.&nbsp;The transitionend&nbsp;event offers two properties:\n propertyName A string indicating the name of the CSS property whose transition completed. elapsedTime A float indicating the number of seconds the transition had been running at the time the event fired. This value isn't affected by the value of transition-delay\n.\n\nAs usual, you can use the element.addEventListener()\n method to monitor for this event:\n\r\n          el.addEventListener(&quot;transitionend&quot;, updateTransition, true);\r\n        \nNote: The &quot;transitionend&quot; event doesn't fire if the transition is aborted because the animating property's value is changed before the transition is completed.\nWhen property value lists are of different lengths\nIf any property's list of values is shorter than the others, its values are repeated to make them match. For example:\n\r\n          div {\n  transition-property: opacity, left, top, height;\n  transition-duration: 3s, 5s;\n}\r\n        \nThis is treated as if it were:\n\r\n          div {\n  transition-property: opacity, left, top, height;\n  transition-duration: 3s, 5s, 3s, 5s;\n}\r\n        \nSimilarly, if any property's value list is longer than that for transition-property\n, it's truncated, so if you have the following CSS:\n\r\n          div {\n  transition-property: opacity, left;\n  transition-duration: 3s, 5s, 2s, 1s;\n}\r\n        \nThis gets interpreted as:\n\r\n          div {\n  transition-property: opacity, left;\n  transition-duration: 3s, 5s;\n}\r\n        \nUsing transitions when highlighting menus\nA common use of CSS is to highlight items in a menu as the user hovers the mouse cursor over them. It's easy to use transitions to make the effect even more attractive.\nBefore we look at code snippets, you might want to take a look at the live demo (assuming your browser supports transitions). You can also take a look directly at the CSS it uses.\nFirst we set up the menu using HTML:\n\r\n          &lt;div class=&quot;sidebar&quot;&gt;\n  &lt;p&gt;&lt;a class=&quot;menuButton&quot; href=&quot;home&quot;&gt;Home&lt;\/a&gt;&lt;\/p&gt;\n  &lt;p&gt;&lt;a class=&quot;menuButton&quot; href=&quot;about&quot;&gt;About&lt;\/a&gt;&lt;\/p&gt;\n  &lt;p&gt;&lt;a class=&quot;menuButton&quot; href=&quot;contact&quot;&gt;Contact Us&lt;\/a&gt;&lt;\/p&gt;\n  &lt;p&gt;&lt;a class=&quot;menuButton&quot; href=&quot;links&quot;&gt;Links&lt;\/a&gt;&lt;\/p&gt;\n&lt;\/div&gt;\r\n        \nThen we build the CSS to implement the look and feel of our menu. The relevant portions are shown here:\n\r\n          .menuButton {\n  position: relative;\n  transition-property: background-color, color;\n  transition-duration: 1s;\n  transition-timing-function: ease-out;\n  -webkit-transition-property: background-color, color;\n  -webkit-transition-duration: 1s;\n  -o-transition-property: background-color, color;\n  -o-transition-duration: 1s;\n  text-align: left;\n  background-color: grey;\n  left: 5px;\n  top: 5px;\n  height: 26px;\n  color: white;\n  border-color: black;\n  font-family: sans-serif;\n  font-size: 20px;\n  text-decoration: none;\n  -moz-box-shadow: 2px 2px 1px black;\n  padding: 2px 4px;\n  border: solid 1px black;\n}\n\n.menuButton:hover {\n  position: relative;\n  transition-property: background-color, color;\n  transition-duration: 1s;\n  transition-timing-function: ease-out;\n  -webkit-transition-property: background-color, color;\n  -webkit-transition-duration: 1s;\n  -o-transition-property: background-color, color;\n  -o-transition-duration: 1s;\n  background-color:white;\n  color:black;\n  -moz-box-shadow: 2px 2px 1px black;\n}\r\n        \nThis CSS&nbsp;establishes the look of the menu, with the background and text colors both changing when the element is in its :hover\n state.\nInstead of describing the effect at length, you can take a look at the live sample if your browser has transitions support.\nUsing transitions to make JavaScript functionality smooth\nTransitions are a great tool to make things look much smoother without having to do anything to your JavaScript functionality. Take the following example.\n&lt;p&gt;Click anywhere to move the ball&lt;\/p&gt;\n&lt;div id=&quot;foo&quot;&gt;&lt;\/div&gt;\n\nUsing JavaScript you can make the effect of moving the ball to a certain position happen:\nvar f = document.getElementById('foo');\ndocument.addEventListener('click', function(ev){\n&nbsp; &nbsp;&nbsp;f.style.left = (ev.clientX-25)+'px';\n&nbsp; &nbsp;&nbsp;f.style.top = (ev.clientY-25)+'px';\n},false);&nbsp; &nbsp; \n\nWith CSS you can make it smooth without any extra effort. Simply add a transition to the element and any change will happen smoothly:\np{\n  padding-left:60px;\n}\n#foo{\n  border-radius:50px;\n  width:50px;\n  height:50px;\n  background:#c00;\n  position:absolute;\n  top:0;\n  left:0;\n  -moz-transition: all 1s; \n  -webkit-transition: all 1s;&nbsp;&nbsp;\n  -ms-transition: all 1s;&nbsp;&nbsp;\n  -o-transition: all 1s;&nbsp;&nbsp;\n  transition: all 1s;&nbsp;&nbsp;\n}\n\nYou can play with this here: http:\/\/jsfiddle.net\/RwtHn\/5\/\nUsing transition events to animate an object\nIn this example, a small box with text inside it moves back and forth across the screen, its background and text colors fading between two values as the animation takes place.\nIf your browser supported HTML5 video and Theora, you would see this demo in action here.\nBefore we look at code snippets, you might want to take a look at the live demo (assuming your browser supports transitions). You can also take a look directly at the CSS it uses.\nThe HTML\nThe HTML for this example is very simple:\n\r\n          &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;CSS Transition Demo&lt;\/title&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;transitions.css&quot; type=&quot;text\/css&quot;&gt;\n    &lt;script src=&quot;transitions.js&quot; type=&quot;text\/javascript&quot;&gt;&lt;\/script&gt;\n  &lt;\/head&gt;\n  &lt;body onload=&quot;runDemo()&quot;&gt;\n    &lt;div class=&quot;slideRight&quot;&gt;This is a box!&lt;\/div&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nThe only thing of note here is that we set the class for our box to &quot;slideRight&quot; initially, and when the document is done loading, the runDemo()&nbsp;function in the JavaScript code is executed.\nThe CSS\nIn order to create our animation effect, we use two CSS classes, &quot;slideRight&quot; and &quot;slideLeft&quot;. If you want to see the complete CSS&nbsp;code, you may look at the transitions.css file in its entirety. Only the relevant bits are shown below:\n\r\n          .slideRight {\n  position: absolute;\n  -moz-transition-property: background-color, color, left;\n  -moz-transition-duration: 5s;\n  -webkit-transition-property: background-color, color, left;\n  -webkit-transition-duration: 5s;\n  -o-transition-property: background-color, color, left;\n  -o-transition-duration: 5s;\n  background-color: red;\n  left: 0%;\n  color: black;\n}\r\n        \nNote that we specify the position property explicitly here. This is necessary because only elements whose position property is expressly defined can have their position animated.\nThe transition-property\n property is used to list the CSS&nbsp;properties we wish to have animated. In this case, the properties to animate are background-color\n, color\n, and left\n. The transition-duration\n property indicates that we wish the animation to take 5 seconds from start to finish.\nThe WebKit and Opera equivalents are included in order to let the example work in the corresponding software.\nThe &quot;slideRight&quot; class is used to specify the start point for the animation of moving the element from the left edge toward the right edge of the browser window. As such, it defines the position and color of the element when it's at the beginning of the animation sequence; in particular, the value for its left\n property is 0%, indicating it will begin at the left edge of the window.\nShown below, the &quot;slideLeft&quot; class defines the end point for the animation; that is, the point at which the left-to-right animation will conclude and we will switch to a right-to-left animation.\n\r\n          .slideLeft {\n  position: absolute;\n  -moz-transition-property: background-color, color, left;\n  -moz-transition-duration: 5s;\n  -webkit-transition-property: background-color, color, left;\n  -webkit-transition-duration: 5s;\n  -o-transition-property: background-color, color, left;\n  -o-transition-duration: 5s;\n  text-align: center;\n  background-color: blue;\n  left: 90%;\n  color: white;\n  width: 100px;\n  height: 100px;\n}\r\n        \nThe color values have been changed here, in order to cause the background and text colors to change over the duration of the animation sequence. Additionally, the left\n&nbsp;property is 90% here.\nThe JavaScript code\nNow that we've established the endpoints for the animation sequence, we need to actually initiate the animation. We can do this easily using JavaScript.\nNote: Once CSS&nbsp;animations support is available, JavaScript code won't be necessary to achieve this effect.\nFirst, the runDemo()&nbsp;function, which is called when the document loads to initialize the animation sequence:\n\r\n          function runDemo() {\n  var el = updateTransition();\n  \n  \/\/ Set up an event handler to reverse the direction\n  \/\/ when the transition finishes.\n  \n  el.addEventListener(&quot;transitionend&quot;, updateTransition, true);\n}\r\n        \nThis is simple enough; it calls the updateTransition()&nbsp;function we'll define momentarily, whose job is to set the class for the element we're animating based on which direction we want it to travel in. Then it sets up an event listener to watch for the &quot;transitionend&quot; event that's sent when a transition completes; this lets us know when it's time to change the element's class to reverse the direction of the animation.\nThe updateTransition()&nbsp;function looks like this:\n\r\n          function updateTransition() {\n  var el = document.querySelector(&quot;div.slideLeft&quot;);\n  \n  if (el) {\n    el.className = &quot;slideRight&quot;;\n  } else {\n    el = document.querySelector(&quot;div.slideRight&quot;);\n    el.className = &quot;slideLeft&quot;;\n  }\n  \n  return el;\n}\r\n        \nThis locates the element we're animating by looking it up by its class name (we could use an ID here, of course, but humor me). First we look for the class name &quot;slideLeft&quot;. If this is found, we change the element's class to &quot;slideRight&quot;. This will initiate the right-to-left translation, since it's time to slide to the left if the element is already at the right edge, which it will be when the &quot;transitionend&quot; event arrives and the element's class is &quot;slideLeft&quot;.\nIf no element is found matching the class &quot;slideLeft&quot;, we find the element matching &quot;slideRight&quot; and change its class to &quot;slideLeft&quot;, thereby starting the animation in the opposite direction.\nThe HTML\nThe HTML for this example is very simple:\n\r\n          &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;CSS Transition Demo&lt;\/title&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;transitions.css&quot; type=&quot;text\/css&quot;&gt;\n    &lt;script src=&quot;transitions.js&quot; type=&quot;text\/javascript&quot;&gt;&lt;\/script&gt;\n  &lt;\/head&gt;\n  &lt;body onload=&quot;runDemo()&quot;&gt;\n    &lt;div class=&quot;slideRight&quot;&gt;This is a box!&lt;\/div&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nThe only thing of note here is that we set the class for our box to &quot;slideRight&quot; initially, and when the document is done loading, the runDemo()&nbsp;function in the JavaScript code is executed.\nThe CSS\nIn order to create our animation effect, we use two CSS classes, &quot;slideRight&quot; and &quot;slideLeft&quot;. If you want to see the complete CSS&nbsp;code, you may look at the transitions.css file in its entirety. Only the relevant bits are shown below:\n\r\n          .slideRight {\n  position: absolute;\n  -moz-transition-property: background-color, color, left;\n  -moz-transition-duration: 5s;\n  -webkit-transition-property: background-color, color, left;\n  -webkit-transition-duration: 5s;\n  -o-transition-property: background-color, color, left;\n  -o-transition-duration: 5s;\n  background-color: red;\n  left: 0%;\n  color: black;\n}\r\n        \nNote that we specify the position property explicitly here. This is necessary because only elements whose position property is expressly defined can have their position animated.\nThe transition-property\n property is used to list the CSS&nbsp;properties we wish to have animated. In this case, the properties to animate are background-color\n, color\n, and left\n. The transition-duration\n property indicates that we wish the animation to take 5 seconds from start to finish.\nThe WebKit and Opera equivalents are included in order to let the example work in the corresponding software.\nThe &quot;slideRight&quot; class is used to specify the start point for the animation of moving the element from the left edge toward the right edge of the browser window. As such, it defines the position and color of the element when it's at the beginning of the animation sequence; in particular, the value for its left\n property is 0%, indicating it will begin at the left edge of the window.\nShown below, the &quot;slideLeft&quot; class defines the end point for the animation; that is, the point at which the left-to-right animation will conclude and we will switch to a right-to-left animation.\n\r\n          .slideLeft {\n  position: absolute;\n  -moz-transition-property: background-color, color, left;\n  -moz-transition-duration: 5s;\n  -webkit-transition-property: background-color, color, left;\n  -webkit-transition-duration: 5s;\n  -o-transition-property: background-color, color, left;\n  -o-transition-duration: 5s;\n  text-align: center;\n  background-color: blue;\n  left: 90%;\n  color: white;\n  width: 100px;\n  height: 100px;\n}\r\n        \nThe color values have been changed here, in order to cause the background and text colors to change over the duration of the animation sequence. Additionally, the left\n&nbsp;property is 90% here.\nThe JavaScript code\nNow that we've established the endpoints for the animation sequence, we need to actually initiate the animation. We can do this easily using JavaScript.\nNote: Once CSS&nbsp;animations support is available, JavaScript code won't be necessary to achieve this effect.\nFirst, the runDemo()&nbsp;function, which is called when the document loads to initialize the animation sequence:\n\r\n          function runDemo() {\n  var el = updateTransition();\n  \n  \/\/ Set up an event handler to reverse the direction\n  \/\/ when the transition finishes.\n  \n  el.addEventListener(&quot;transitionend&quot;, updateTransition, true);\n}\r\n        \nThis is simple enough; it calls the updateTransition()&nbsp;function we'll define momentarily, whose job is to set the class for the element we're animating based on which direction we want it to travel in. Then it sets up an event listener to watch for the &quot;transitionend&quot; event that's sent when a transition completes; this lets us know when it's time to change the element's class to reverse the direction of the animation.\nThe updateTransition()&nbsp;function looks like this:\n\r\n          function updateTransition() {\n  var el = document.querySelector(&quot;div.slideLeft&quot;);\n  \n  if (el) {\n    el.className = &quot;slideRight&quot;;\n  } else {\n    el = document.querySelector(&quot;div.slideRight&quot;);\n    el.className = &quot;slideLeft&quot;;\n  }\n  \n  return el;\n}\r\n        \nThis locates the element we're animating by looking it up by its class name (we could use an ID here, of course, but humor me). First we look for the class name &quot;slideLeft&quot;. If this is found, we change the element's class to &quot;slideRight&quot;. This will initiate the right-to-left translation, since it's time to slide to the left if the element is already at the right edge, which it will be when the &quot;transitionend&quot; event arrives and the element's class is &quot;slideLeft&quot;.\nIf no element is found matching the class &quot;slideLeft&quot;, we find the element matching &quot;slideRight&quot; and change its class to &quot;slideLeft&quot;, thereby starting the animation in the opposite direction.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1.0 4.0 (2)\n 10 10.5 3.2   Property -webkit-transition -moz-transition -ms-transition -o-transition -webkit-transition   Transition ended event webkitTransitionEnd transitionend MSTransitionEnd oTransitionEnd webkitTransitionEnd   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support (Supported) 4.0 (2)\n ? ? (Supported)   \n\nSee also\n CSS Transitions CSS Transitions Module Level 3 CSS animatable properties -moz-transition\n -moz-transition-property\n -moz-transition-duration\n -moz-transition-timing-function\n -moz-transition-delay\n\n\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/CSS_animations","title":"CSS animations","description":"Configuring the animation\nTo create a&nbsp;CSS&nbsp;animation sequence, you style the element you want to animate with the animation\n&nbsp;property or its sub-properties. This lets you configure the timing and duration of the animation, as well as other details of how the animation sequence should progress. This does not configure the actual appearance of the animation, which is done using the @keyframes\n&nbsp;at-rule as described in Defining the animation sequence using keyframes&nbsp;below.\nThe sub-properties of the animation\n&nbsp;property are:\n animation-delay\n Configures the delay between the time the element is loaded and the beginning of the animation sequence. animation-direction\n Configures whether or not the animation should alternate direction on each run through the sequence or reset to the start point and repeat itself. animation-duration\n Configures the length of time that an animation should take to complete one cycle. animation-iteration-count\n Configures the number of times the animation should repeat; you can specify infinite to repeat the animation indefinitely. animation-name\n Specifies the name of the @keyframes\n&nbsp;at-rule describing the animation's keyframes. animation-play-state\n Lets you pause and resume the animation sequence. animation-timing-function\n Configures the timing of the animation; that is, how the animation transitions through keyframes, by establishing acceleration curves. animation-fill-mode\n Configures what values are applied by the animation before and after it is executing.\n\nDefining the animation sequence using keyframes\nOnce you've configured the animation's timing, you need to define the appearance of the animation. This is done by establishing two or more keyframes using the @keyframes\n at-rule. Each keyframe describes how the animated element should render at a given time during the animation sequence.\nSince the timing of the animation is defined in the CSS&nbsp;style that configures the animation, keyframes use a percentage\n to indicate the time during the animation sequence at which they take place. 0% indicates the first moment of the animation sequence, while 100% indicates the final state of the animation. These two times must be specified so that the browser knows where the animation should start and finish; because they're so important, these two times have special aliases: from and to.\nYou can optionally include additional keyframes that describe intermediate steps along the way from the starting point to the ending point of the animation.\nExamples\nNote: The examples here use the -moz- prefix on the animation CSS properties for brevity; the live examples you can click to see in your browser also include the -webkit- prefixed versions.\nMaking text slide across the browser window\nThis simple example styles the &lt;h1&gt;\n element so that the text slides in from off the right edge of the browser window.\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n  h1 {\n    -moz-animation-duration: 3s;\n    -moz-animation-name: slidein;\n  }\n  \n  @-moz-keyframes slidein {\n    from {\n      margin-left: 100%;\n      width: 300%\n    }\n    \n    to {\n      margin-left: 0%;\n      width: 100%;\n    }\n  }\n&lt;\/style&gt;\r\n        \nThe style for the &lt;h1&gt;\n&nbsp;element here specifies that the animation should take 3 seconds to execute from start to finish, using the animation-duration\n property, and that the name of the @keyframes\n at-rule defining the keyframes for the animation sequence is named &quot;slidein&quot;.\nIf we wanted any custom styling on the &lt;h1&gt;\n element to appear in browsers that don't support CSS&nbsp;animations, we would include it here as well; however, in this case we don't want any custom styling other than the animation effect.\nThe keyframes are defined using the @keyframes\n at-rule. In this case, we have just two keyframes. The first occurs at 0%&nbsp;(using the alias from). Here, we configure the left margin of the element to be at 100% (that is, at the far right edge of the containing element), and the width of the element to be 300% (or three times the width of the containing element). This causes the first frame of the animation to have the header drawn off the right edge of the browser window.\nThe second (and final)&nbsp;keyframe occurs at 100% (using the alias to). The left margin is set to 0% and the width of the element is set to 100%. This causes the header to finish its animation flush against the left edge of the content area.\n\nView the live example\n\nAdding another keyframe\nLet's add another keyframe to the previous example's animation. Let's say we want the header's font size to increase as it moves from right to left for a while, then to decrease back to its original size. That's as simple as adding this keyframe:\n\r\n          75% {\n  font-size: 300%;\n  margin-left: 25%;\n  width: 150%;\n}\r\n        \nThis tells the browser that 75% of the way through the animation sequence, the header should have its left margin at 25% and the width should be 150%.\n\nView the live example\n\nMaking it repeat\nTo make the animation repeat itself, simply use the animation-iteration-count\n property to indicate how many times to repeat the animation. In this case, let's use infinite to have the animation repeat indefinitely:\n\r\n          h1 {\n  -moz-animation-duration: 3s;\n  -moz-animation-name: slidein;\n  -moz-animation-iteration-count: infinite;\n}\r\n        \n\nView the live example\n\nMaking it move back and forth\nThat made it repeat, but it's very odd having it jump back to the start each time it begins animating. What we really want is for it to move back and forth across the screen. That's easily accomplished by setting animation-direction\n&nbsp;to alternate:\n\r\n          h1 {\n  -moz-animation-duration: 3s;\n  -moz-animation-name: slidein;\n  -moz-animation-iteration-count: infinite;\n  -moz-animation-direction: alternate;\n}\r\n        \n\nView the live example\nUsing animation events\nYou can get additional control over animations -- as well as useful information about them -- by making use of animation events. These events, represented by the AnimationEvent\n object, can be used to detect when animations start, finish, and begin a new iteration. Each event includes the time at which it occurred as well as the name of the animation that triggered the event.\nWe'll modify the sliding text example to output some information about each animation event when it occurs, so we can get a look at how they work.\nAdding the animation event listeners\nWe'll use JavaScript code to listen for all three possible animation events. The setup() function configures our event listeners; we call it when the document is first loaded in order to set things up.\n\r\n          function setup() {\n  var e = document.getElementById(&quot;watchme&quot;);\n  e.addEventListener(&quot;animationstart&quot;, listener, false);\n  e.addEventListener(&quot;animationend&quot;, listener, false);\n  e.addEventListener(&quot;animationiteration&quot;, listener, false);\n  \n  var e = document.getElementById(&quot;watchme&quot;);\n  e.className = &quot;slidein&quot;;\n}\r\n        \nThis is pretty standard code; you can get details on how it works in the documentation for element.addEventListener()\n. The last thing the setup() function here does is set the class on the element we'll be animating to &quot;slidein&quot;; we do this to start the animation.\nWhy? Because the animationstart event fires as soon as the animation starts, and in our case, that happens before our code runs. So we'll start the animation ourselves by setting the class of the element to the style that gets animated after the fact.\nReceiving the events\nThe events get delivered to the listener() function, which is shown below.\n\r\n          function listener(e) {\n  var l = document.createElement(&quot;li&quot;);\n  switch(e.type) {\n    case &quot;animationstart&quot;:\n      l.innerHTML = &quot;Started: elapsed time is &quot; + e.elapsedTime;\n      break;\n    case &quot;animationend&quot;:\n      l.innerHTML = &quot;Ended: elapsed time is &quot; + e.elapsedTime;\n      break;\n    case &quot;animationiteration&quot;:\n      l.innerHTML = &quot;New loop started at time &quot; + e.elapsedTime;\n      break;\n  }\n  document.getElementById(&quot;output&quot;).appendChild(l);\n}\r\n        \nThis code, too, is very simple. It simply looks at the event.type\n to determine which kind of animation event occurred, then adds an appropriate note the &lt;ul&gt;\n (unordered list) we're using to log these events.\nThe output, when all is said and done, looks something like this:\n Started: elapsed time is 0 New loop started at time 3.01200008392334 New loop started at time 6.00600004196167 Ended: elapsed time is 9.234000205993652\n\nNote that the times are very close to, but not exactly, those expected given the timing established when the animation was configured. Note also that after the final iteration of the animation, the animationiteration event isn't sent; instead, the animationend event is sent.\nThe HTML\nJust for the sake of completeness, here's the HTML that displays the page content, including the list into which the script inserts information about the received events:\n\r\n          &lt;body onload=&quot;setup()&quot;&gt;\n  &lt;h1 id=&quot;watchme&quot;&gt;Watch me move&lt;\/h1&gt;\n  &lt;p&gt;This example shows how to use CSS animations to make &lt;code&gt;H1&lt;\/code&gt; elements\n  move across the page.&lt;\/p&gt;\n  &lt;p&gt;In addition, we output some text each time an animation event fires, so you can see them in action.&lt;\/p&gt;\n  &lt;ul id=&quot;output&quot;&gt;\n  &lt;\/ul&gt;\n&lt;\/body&gt;\r\n        \n\nView the live example\n\nMaking text slide across the browser window\nThis simple example styles the &lt;h1&gt;\n element so that the text slides in from off the right edge of the browser window.\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n  h1 {\n    -moz-animation-duration: 3s;\n    -moz-animation-name: slidein;\n  }\n  \n  @-moz-keyframes slidein {\n    from {\n      margin-left: 100%;\n      width: 300%\n    }\n    \n    to {\n      margin-left: 0%;\n      width: 100%;\n    }\n  }\n&lt;\/style&gt;\r\n        \nThe style for the &lt;h1&gt;\n&nbsp;element here specifies that the animation should take 3 seconds to execute from start to finish, using the animation-duration\n property, and that the name of the @keyframes\n at-rule defining the keyframes for the animation sequence is named &quot;slidein&quot;.\nIf we wanted any custom styling on the &lt;h1&gt;\n element to appear in browsers that don't support CSS&nbsp;animations, we would include it here as well; however, in this case we don't want any custom styling other than the animation effect.\nThe keyframes are defined using the @keyframes\n at-rule. In this case, we have just two keyframes. The first occurs at 0%&nbsp;(using the alias from). Here, we configure the left margin of the element to be at 100% (that is, at the far right edge of the containing element), and the width of the element to be 300% (or three times the width of the containing element). This causes the first frame of the animation to have the header drawn off the right edge of the browser window.\nThe second (and final)&nbsp;keyframe occurs at 100% (using the alias to). The left margin is set to 0% and the width of the element is set to 100%. This causes the header to finish its animation flush against the left edge of the content area.\n\nView the live example\n\nAdding another keyframe\nLet's add another keyframe to the previous example's animation. Let's say we want the header's font size to increase as it moves from right to left for a while, then to decrease back to its original size. That's as simple as adding this keyframe:\n\r\n          75% {\n  font-size: 300%;\n  margin-left: 25%;\n  width: 150%;\n}\r\n        \nThis tells the browser that 75% of the way through the animation sequence, the header should have its left margin at 25% and the width should be 150%.\n\nView the live example\n\nMaking it repeat\nTo make the animation repeat itself, simply use the animation-iteration-count\n property to indicate how many times to repeat the animation. In this case, let's use infinite to have the animation repeat indefinitely:\n\r\n          h1 {\n  -moz-animation-duration: 3s;\n  -moz-animation-name: slidein;\n  -moz-animation-iteration-count: infinite;\n}\r\n        \n\nView the live example\n\nMaking it move back and forth\nThat made it repeat, but it's very odd having it jump back to the start each time it begins animating. What we really want is for it to move back and forth across the screen. That's easily accomplished by setting animation-direction\n&nbsp;to alternate:\n\r\n          h1 {\n  -moz-animation-duration: 3s;\n  -moz-animation-name: slidein;\n  -moz-animation-iteration-count: infinite;\n  -moz-animation-direction: alternate;\n}\r\n        \n\nView the live example\nAdding another keyframe\nLet's add another keyframe to the previous example's animation. Let's say we want the header's font size to increase as it moves from right to left for a while, then to decrease back to its original size. That's as simple as adding this keyframe:\n\r\n          75% {\n  font-size: 300%;\n  margin-left: 25%;\n  width: 150%;\n}\r\n        \nThis tells the browser that 75% of the way through the animation sequence, the header should have its left margin at 25% and the width should be 150%.\n\nView the live example\n\nMaking it repeat\nTo make the animation repeat itself, simply use the animation-iteration-count\n property to indicate how many times to repeat the animation. In this case, let's use infinite to have the animation repeat indefinitely:\n\r\n          h1 {\n  -moz-animation-duration: 3s;\n  -moz-animation-name: slidein;\n  -moz-animation-iteration-count: infinite;\n}\r\n        \n\nView the live example\n\nMaking it move back and forth\nThat made it repeat, but it's very odd having it jump back to the start each time it begins animating. What we really want is for it to move back and forth across the screen. That's easily accomplished by setting animation-direction\n&nbsp;to alternate:\n\r\n          h1 {\n  -moz-animation-duration: 3s;\n  -moz-animation-name: slidein;\n  -moz-animation-iteration-count: infinite;\n  -moz-animation-direction: alternate;\n}\r\n        \n\nView the live example\nUsing animation events\nYou can get additional control over animations -- as well as useful information about them -- by making use of animation events. These events, represented by the AnimationEvent\n object, can be used to detect when animations start, finish, and begin a new iteration. Each event includes the time at which it occurred as well as the name of the animation that triggered the event.\nWe'll modify the sliding text example to output some information about each animation event when it occurs, so we can get a look at how they work.\nAdding the animation event listeners\nWe'll use JavaScript code to listen for all three possible animation events. The setup() function configures our event listeners; we call it when the document is first loaded in order to set things up.\n\r\n          function setup() {\n  var e = document.getElementById(&quot;watchme&quot;);\n  e.addEventListener(&quot;animationstart&quot;, listener, false);\n  e.addEventListener(&quot;animationend&quot;, listener, false);\n  e.addEventListener(&quot;animationiteration&quot;, listener, false);\n  \n  var e = document.getElementById(&quot;watchme&quot;);\n  e.className = &quot;slidein&quot;;\n}\r\n        \nThis is pretty standard code; you can get details on how it works in the documentation for element.addEventListener()\n. The last thing the setup() function here does is set the class on the element we'll be animating to &quot;slidein&quot;; we do this to start the animation.\nWhy? Because the animationstart event fires as soon as the animation starts, and in our case, that happens before our code runs. So we'll start the animation ourselves by setting the class of the element to the style that gets animated after the fact.\nReceiving the events\nThe events get delivered to the listener() function, which is shown below.\n\r\n          function listener(e) {\n  var l = document.createElement(&quot;li&quot;);\n  switch(e.type) {\n    case &quot;animationstart&quot;:\n      l.innerHTML = &quot;Started: elapsed time is &quot; + e.elapsedTime;\n      break;\n    case &quot;animationend&quot;:\n      l.innerHTML = &quot;Ended: elapsed time is &quot; + e.elapsedTime;\n      break;\n    case &quot;animationiteration&quot;:\n      l.innerHTML = &quot;New loop started at time &quot; + e.elapsedTime;\n      break;\n  }\n  document.getElementById(&quot;output&quot;).appendChild(l);\n}\r\n        \nThis code, too, is very simple. It simply looks at the event.type\n to determine which kind of animation event occurred, then adds an appropriate note the &lt;ul&gt;\n (unordered list) we're using to log these events.\nThe output, when all is said and done, looks something like this:\n Started: elapsed time is 0 New loop started at time 3.01200008392334 New loop started at time 6.00600004196167 Ended: elapsed time is 9.234000205993652\n\nNote that the times are very close to, but not exactly, those expected given the timing established when the animation was configured. Note also that after the final iteration of the animation, the animationiteration event isn't sent; instead, the animationend event is sent.\nThe HTML\nJust for the sake of completeness, here's the HTML that displays the page content, including the list into which the script inserts information about the received events:\n\r\n          &lt;body onload=&quot;setup()&quot;&gt;\n  &lt;h1 id=&quot;watchme&quot;&gt;Watch me move&lt;\/h1&gt;\n  &lt;p&gt;This example shows how to use CSS animations to make &lt;code&gt;H1&lt;\/code&gt; elements\n  move across the page.&lt;\/p&gt;\n  &lt;p&gt;In addition, we output some text each time an animation event fires, so you can see them in action.&lt;\/p&gt;\n  &lt;ul id=&quot;output&quot;&gt;\n  &lt;\/ul&gt;\n&lt;\/body&gt;\r\n        \n\nView the live example\n\nAdding the animation event listeners\nWe'll use JavaScript code to listen for all three possible animation events. The setup() function configures our event listeners; we call it when the document is first loaded in order to set things up.\n\r\n          function setup() {\n  var e = document.getElementById(&quot;watchme&quot;);\n  e.addEventListener(&quot;animationstart&quot;, listener, false);\n  e.addEventListener(&quot;animationend&quot;, listener, false);\n  e.addEventListener(&quot;animationiteration&quot;, listener, false);\n  \n  var e = document.getElementById(&quot;watchme&quot;);\n  e.className = &quot;slidein&quot;;\n}\r\n        \nThis is pretty standard code; you can get details on how it works in the documentation for element.addEventListener()\n. The last thing the setup() function here does is set the class on the element we'll be animating to &quot;slidein&quot;; we do this to start the animation.\nWhy? Because the animationstart event fires as soon as the animation starts, and in our case, that happens before our code runs. So we'll start the animation ourselves by setting the class of the element to the style that gets animated after the fact.\nReceiving the events\nThe events get delivered to the listener() function, which is shown below.\n\r\n          function listener(e) {\n  var l = document.createElement(&quot;li&quot;);\n  switch(e.type) {\n    case &quot;animationstart&quot;:\n      l.innerHTML = &quot;Started: elapsed time is &quot; + e.elapsedTime;\n      break;\n    case &quot;animationend&quot;:\n      l.innerHTML = &quot;Ended: elapsed time is &quot; + e.elapsedTime;\n      break;\n    case &quot;animationiteration&quot;:\n      l.innerHTML = &quot;New loop started at time &quot; + e.elapsedTime;\n      break;\n  }\n  document.getElementById(&quot;output&quot;).appendChild(l);\n}\r\n        \nThis code, too, is very simple. It simply looks at the event.type\n to determine which kind of animation event occurred, then adds an appropriate note the &lt;ul&gt;\n (unordered list) we're using to log these events.\nThe output, when all is said and done, looks something like this:\n Started: elapsed time is 0 New loop started at time 3.01200008392334 New loop started at time 6.00600004196167 Ended: elapsed time is 9.234000205993652\n\nNote that the times are very close to, but not exactly, those expected given the timing established when the animation was configured. Note also that after the final iteration of the animation, the animationiteration event isn't sent; instead, the animationend event is sent.\nThe HTML\nJust for the sake of completeness, here's the HTML that displays the page content, including the list into which the script inserts information about the received events:\n\r\n          &lt;body onload=&quot;setup()&quot;&gt;\n  &lt;h1 id=&quot;watchme&quot;&gt;Watch me move&lt;\/h1&gt;\n  &lt;p&gt;This example shows how to use CSS animations to make &lt;code&gt;H1&lt;\/code&gt; elements\n  move across the page.&lt;\/p&gt;\n  &lt;p&gt;In addition, we output some text each time an animation event fires, so you can see them in action.&lt;\/p&gt;\n  &lt;ul id=&quot;output&quot;&gt;\n  &lt;\/ul&gt;\n&lt;\/body&gt;\r\n        \n\nView the live example\n\nSee also\n AnimationEvent\n animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n Detecting CSS animation support This post from Mozilla hacks, provides two additional examples:  http:\/\/jsfiddle.net\/T88X5\/3\/light\/ http:\/\/jsfiddle.net\/RtvCB\/9\/light\/  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/CSS_animations\/Detecting_CSS_animation_support","title":"Detecting CSS animation support","description":"Testing for CSS animation support\nThis code will check to see if CSS animation support is available:\n\r\n          var animation = false,\n    animationstring = 'animation',\n    keyframeprefix = '',\n    domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n    pfx  = '';\n\nif( elm.style.animationName ) { animation = true; }    \n\nif( animation === false ) {\n  for( var i = 0; i &lt; domPrefixes.length; i++ ) {\n    if( elm.style[ domPrefixes[i] + 'AnimationName' ] !== undefined ) {\n      pfx = domPrefixes[ i ];\n      animationstring = pfx + 'Animation';\n      keyframeprefix = '-' + pfx.toLowerCase() + '-';\n      animation = true;\n      break;\n    }\n  }\n}\r\n        \nFor starters we define a few variables. We assume that animation is not supported by setting animation to false. We set the animationstring to animation which is the property we want to set later on. We create an array of browser prefixes to loop over and we set pfx to an empty string.\nThen we check if the CSS animationName\n property on the style collection for the element specified by the variable elm is set. This means the browser supports CSS animation without any prefix, which, to date, none of them do.\nIf the browser does not support non-prefixed animation and animation is still false, we iterate over all the possible prefixes, since all the major browsers are currently prefixing this property and changing its name to AnimationName instead.\nOnce this code is finished running, the value of animation will be false if CSS animation support isn't available, or it will be true. If it is true then both the animation property name and the keyframe prefix will be the right ones. So if you use a new Firefox, the property will be MozAnimation and the keyframe prefix -moz- and with Chrome it'll be WebkitAnimation and -webkit-. Notice browsers don't make it easy with the switching between camelCase and hyphen-ation.\nAnimating using the correct syntax for different browsers\nNow that you know if CSS animation is supported or not, we can animate.\n\r\n          if( animation === false ) {\n\n  \/\/ animate in JavaScript fallback\n\n} else {\n  elm.style[ animationstring ] = 'rotate 1s linear infinite';\n\n  var keyframes = '@' + keyframeprefix + 'keyframes rotate { '+\n                    'from {' + keyframeprefix + 'transform:rotate( 0deg ) }'+\n                    'to {' + keyframeprefix + 'transform:rotate( 360deg ) }'+\n                  '}';\n\n  if( document.styleSheets &amp;&amp; document.styleSheets.length ) {\n\n      document.styleSheets[0].insertRule( keyframes, 0 );\n\n  } else {\n\n    var s = document.createElement( 'style' );\n    s.innerHTML = keyframes;\n    document.getElementsByTagName( 'head' )[ 0 ].appendChild( s );\n\n  }\n  \n}\r\n        \nThis code looks at the value of animation; if it's false, we know we need to use our JavaScript fallback code to perform our animation. Otherwise, we can use JavaScript to create the desired CSS animation effects.\nSetting the animation property is easy; simply update its value in the style collection. However, adding keyframes is trickier, since they're not defined using traditional CSS syntax (which makes them more flexible, but harder to define from script).\nTo define our keyframes using JavaScript, we need to write them out as a CSS string. All we do is set up a keyframes variable is set up, prefixing each attribute as it's constructed. This variable, once constructed, contains the complete description of all the keyframes needed by our animation sequence.\nThe next task is to actually add the keyframes to the page's CSS. The first thing to do is look to see if there's already a style sheet on the document; if so, we simply insert the keyframe description into that stylesheet; this is done in lines 13-15.\nIf there isn't already a style sheet, a new &lt;style&gt;\n element is created, and its content is set to the value of keyframes. Then the new &lt;style&gt;\n element is inserted into the document's &lt;head&gt;\n, thereby adding the new style sheet to the document.\n\nView on jsFiddle\n\nSee also\n CSS animations animation\n, animation-delay\n, animation-direction\n, animation-duration\n, animation-fill-mode\n, animation-iteration-count\n, animation-name\n, animation-play-state\n, animation-timing-function\n, @keyframes\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Using_CSS_multi-column_layouts","title":"Using CSS multi-column layouts","description":"Using columns\nColumn count and width\nTwo CSS properties control whether and how many columns will appear: column-count\n and column-width\n.\nThe column-count property sets the number of columns to a particular number. E.g.,\n\r\n          &lt;div style=&quot;column-count:2&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nwill display the content in two columns (if you're using a multi-column compliant browser):\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nThe column-width property sets the minimum desired column width. If column-count is not also set, then the browser will automatically make as many columns as fit in the available width.\n\r\n          &lt;div style=&quot;column-width:20em;&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nbecomes:\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nThe exact details are described in the CSS3 specification.\nIn a multi-column block, content is automatically flowed from one column into the next as needed. All HTML, CSS and DOM functionality is supported within columns, as are editing and printing.\nThe columns shorthand\nMost of the time, the Web designer use one of the two CSS properties: column-count\n or column-width\n. As values for these properties does not overlap, it is often convenient to use the shorthand columns\n. E.g.\nThe CSS declaration column-width:12em can be replaced by:\n\r\n          &lt;div style=&quot;columns:12em&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nThe CSS declaration column-count:4 can be replaced by:\n\r\n          &lt;div style=&quot;columns:4&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nThe two CSS declarations column-width:8em and column-count:12 can be replaced by:\n\r\n          &lt;div style=&quot;columns:12 8em&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborumHeight Balancing\nThe CSS3 Column specification requires that the column heights must be balanced: that is, the browser automatically sets the maximum column height so that the heights of the content in each column are approximately equal. Firefox does this.\nHowever, in some situations it is also useful to set the maximum height of the columns explicitly, and then lay out content starting at the first column and creating as many columns as necessary, possibly overflowing to the right. Therefore, if the height is constrained, by setting the CSS height\n or max-height\n properties on a multi-column block, each column is allowed to grow to that height and no further before adding new column. This mode is also much more efficient for layout.Column Gaps\nThere is a gap between columns. The recommended default is 1em. This size can be changed by applying the column-gap\n property to the multi-column block:\n\r\n          &lt;div style=&quot;column-width:20em; column-gap:2em;&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborumColumn count and width\nTwo CSS properties control whether and how many columns will appear: column-count\n and column-width\n.\nThe column-count property sets the number of columns to a particular number. E.g.,\n\r\n          &lt;div style=&quot;column-count:2&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nwill display the content in two columns (if you're using a multi-column compliant browser):\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nThe column-width property sets the minimum desired column width. If column-count is not also set, then the browser will automatically make as many columns as fit in the available width.\n\r\n          &lt;div style=&quot;column-width:20em;&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit,\nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nbecomes:\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nThe exact details are described in the CSS3 specification.\nIn a multi-column block, content is automatically flowed from one column into the next as needed. All HTML, CSS and DOM functionality is supported within columns, as are editing and printing.\nThe columns shorthand\nMost of the time, the Web designer use one of the two CSS properties: column-count\n or column-width\n. As values for these properties does not overlap, it is often convenient to use the shorthand columns\n. E.g.\nThe CSS declaration column-width:12em can be replaced by:\n\r\n          &lt;div style=&quot;columns:12em&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nThe CSS declaration column-count:4 can be replaced by:\n\r\n          &lt;div style=&quot;columns:4&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum\nThe two CSS declarations column-width:8em and column-count:12 can be replaced by:\n\r\n          &lt;div style=&quot;columns:12 8em&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborumHeight Balancing\nThe CSS3 Column specification requires that the column heights must be balanced: that is, the browser automatically sets the maximum column height so that the heights of the content in each column are approximately equal. Firefox does this.\nHowever, in some situations it is also useful to set the maximum height of the columns explicitly, and then lay out content starting at the first column and creating as many columns as necessary, possibly overflowing to the right. Therefore, if the height is constrained, by setting the CSS height\n or max-height\n properties on a multi-column block, each column is allowed to grow to that height and no further before adding new column. This mode is also much more efficient for layout.Column Gaps\nThere is a gap between columns. The recommended default is 1em. This size can be changed by applying the column-gap\n property to the multi-column block:\n\r\n          &lt;div style=&quot;column-width:20em; column-gap:2em;&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, \nsed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, \nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. \nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat \nnulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa \nqui officia deserunt mollit anim id est laborum&lt;\/div&gt;\r\n        \nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborumGraceful Degradation\nThe column properties will just be ignored by non-columns-supporting browsers. Therefore it's relatively easy to create a layout that will display in a single column in those browsers and use multiple columns in supporting browsers.\nNote that not all browsers supports these properties unprefixed. To make use of this feature in most today's browsers, each property must be written thrice: once with the \n-moz prefix, once with the \n-webkit prefix and once without prefix.Conclusion\nCSS3 columns are a layout primitive that will help Web developers make the best use of screen real estate. Imaginative developers may find many uses for them, especially with the automatic height balancing feature.See also\n CSS Reference The column-related CSS properties: column-width\n, column-count\n, column-gap\n, column-rule\n, column-rule-width\n, column-rule-style\n, column-rule-color\n, column-span\n, column-fill\n, columns\n http:\/\/weblogs.mozillazine.org\/roc\/a...18_for_we.html\n\n&nbsp;\nHTML5 DocumentationHTMLAudio\/Video Canvas WebGL SVG MathML WebForms AppCache Microformats SemanticTagsJavascriptStorage IndexDB WebSockets WebWorkers Events Drag\/Drop ProtocolHandler Geolocation FocusCSSNewSelectors Typography Visual Effects\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-appearance","title":"-moz-appearance","description":"Summary\nThe -moz-appearance CSS property is used in Gecko (Firefox) to display an element using a platform-native styling based on the operating system's theme.\nThis property is frequently used in XUL stylesheets to design custom widgets with platform-appropriate styling. It is also used in the XBL implementations of the widgets that ship with the Mozilla platform.\n Initial value\n: none\n Applies to: all elements Inherited\n: no Media: visual\n   Computed value\n: as specified\n\nSyntax\n\n-moz-appearance:  &lt;appearance&gt;\nValues\n&lt;appearance&gt; is one of the following:\n none No special styling is applied. (Default) button The element is drawn like a button. checkbox The element is drawn like a checkbox, including only the actual &quot;checkbox&quot; portion. checkbox-container The element is drawn like a container for a checkbox, which may include a prelighting background effect under certain platforms. Normally a would contain a label and a checkbox. checkbox-small \n\nObsolete since Gecko 1.9.1 dialog The element is styled like a dialog box, which includes background color and other properties. listbox menuitem The element is styled as menu item, item is highlighted when hovered. menulist menulist-button The element is styled as a button that would indicate a menulist can be opened. menulist-textfield The element is styled as the text field for a menulist. (Not implemented for the Windows platform) menupopup progressbar The element is styled like a progress bar. radio The element is drawn like a radio button, including only the actual &quot;radio button&quot; portion. radio-container The element is drawn like a container for a radio button, which may include a prelighting background effect under certain platforms. Normally would contain a label and a radio button. radio-small \n\nObsolete since Gecko 1.9.1 resizer scrollbar scrollbarbutton-down scrollbarbutton-left scrollbarbutton-right scrollbarbutton-up scrollbartrack-horizontal scrollbartrack-vertical separator statusbar tab tab-left-edge \n\nObsolete tabpanels textfield textfield-multiline toolbar toolbarbutton toolbox -moz-mac-unified-toolbar \nNew in Firefox 3.5\n Mac OS&nbsp;X only. This causes the toolbar and title bar to render using the unified toolbar style common to Mac OS&nbsp;X 10.4 and later applications. -moz-win-borderless-glass \nNew in Firefox 4.0\n Used for Windows Vista and later. This style applies the Aero Glass effect -- but without a border -- to the element. -moz-win-browsertabbar-toolbox \nNew in Firefox 3\n Windows Vista and later. This toolbox style is meant to be used for the tab bar in a browser. -moz-win-communications-toolbox \nNew in Firefox 3\n Windows Vista and later. This toolbox style is meant to be used in communications and productivity applications. Corresponding foreground color is -moz-win-communicationstext. -moz-win-glass \nNew in Firefox 3.5\n Windows Vista and later. This style applies the Aero Glass effect to the element. -moz-win-media-toolbox \nNew in Firefox 3\n Windows Vista and later. This toolbox style is meant to be used in applications that manage media objects. Corresponding foreground color is -moz-win-mediatext. tooltip treeheadercell treeheadersortarrow treeitem treetwisty treetwistyopen treeview window\nExamples\n\n.exampleone {\n\t-moz-appearance: toolbarbutton;\n}\n\nBrowser compatibility\n   Browser Lowest version Support of   Internet Explorer --- ---   Firefox (Gecko) 1.0 (1.0) -moz-appearance   Opera (Presto) --- ---   Safari | Chrome | WebKit 3.0 | 1.0 | 522 -webkit-appearance  \n\nSpecifications\n CSS 3 Basic User Interface #appearance&nbsp; Candidate Recommendation 2004-05-11, outdated CSS 3 Basic User Interface #appearance&nbsp; Editor's draft (work in progress)\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-background-inline-policy","title":"-moz-background-inline-policy","description":"Summary\nIn Gecko-based applications like Firefox, the -moz-background-inline-policy CSS property specifies how the background image of an inline element is determined when the content of the inline element wraps onto multiple lines. The choice of position has significant effects on repetition.\n Initial value\n: continuous Applies to: inline elements Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n\n-moz-background-inline-policy:  bounding-box | continuous | each-box\n\nValues\n bounding-box&nbsp; The background image is positioned (and repeated) in the smallest rectangle that contains all of the inline boxes for the element. It is then clipped to be visible only within those boxes, according to the -moz-background-clip\n property. continuous The background image is positioned (and repeated) as if the inline box were not broken across lines, and then this long rectangle is sliced into pieces for each line. each-box The background image is positioned (and repeated) separately for each box of the inline element. This means that an image with background-repeat\n: no-repeat may be repeated multiple times.\n\nExamples\n Example showing the values of -moz-background-inline-policy hixie.ch\/tests\/adhoc\/css\/background\/inline\/policy\/\nNotes\n-moz-background-inline-policy is supported since Gecko 1.3 (Firefox 1.0).\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-binding","title":"-moz-binding","description":"Summary\nThe -moz-binding CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.\n Initial value\n: none\n Applies to: all elements (not generated content or pseudo-elements) Inherited\n: no Media: visual\n  Computed value\n: as specified\n\nSyntax\n&nbsp;-moz-binding:&nbsp; &lt;uri&gt;\n| none\nValues\n &lt;uri&gt; The URI for the XBL binding (including the fragment identifier). none No XBL binding is applied to the element.\n\nExamples\n\n.exampleone {\n    -moz-binding: url(&quot;http:\/\/www.example.org\/xbl\/htmlBindings.xml#checkbox&quot;);\n}See also\n XBL Reference: Binding Attachment and Detachment XUL Tutorial: Introduction to XBL\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-border-bottom-colors","title":"-moz-border-bottom-colors","description":"Summary\nIn Mozilla applications like Firefox, -moz-border-bottom-colors sets a list of colors for the bottom border.\nSee the -moz-border-top-colors\n property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-border-left-colors","title":"-moz-border-left-colors","description":"Summary\nIn Mozilla applications like Firefox, the -moz-border-left-colors sets a list of colors for the left border.\nSee the -moz-border-top-colors\n property for more information.\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-border-right-colors","title":"-moz-border-right-colors","description":"Summary\nIn Mozilla applications like Firefox, -moz-border-right-colors sets a list of colors for the right border.\nSee the -moz-border-top-colors\n property for more information.\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-border-top-colors","title":"-moz-border-top-colors","description":"Summary\nIn Mozilla applications like Firefox, the -moz-border-top-colors\n CSS property sets a list of colors for the top border.\nWhen an element has a border that is larger than a single CSS pixel, each line of pixels uses the next color specified in this property, from the outside in. This eliminates the need for nested boxes. If the border is wider than the number of specified colors, the remaining part of the border is the innermost color specified.\n Initial value: none Applies to: all elements Inherited: no\n\nIt does not apply\n if border-style\n is dashed or dotted. to tables with border-collapse: collapse.\n\nSyntax\n-moz-border-top-colors:  [&lt;color&gt;]* &lt;color&gt; | none\n\nValues\nAccepts a white-space separated list of color values.\n&lt;color&gt;Specifies the color of a line of pixels in the bottom border. transparent is valid. See &lt;color&gt;\n values for possible units.noneDefault, no colors are drawn or border-color\n is used, if specified.\nRelated properties\n -moz-border-right-colors\n sets colors for the right border -moz-border-bottom-colors\n sets colors for the bottom border -moz-border-left-colors\n sets colors for the left border\n\nExamples\n\n\/*  Other browsers use a &quot;inset gold 10px&quot; border  *\/\n\nborder: inset gold 10px;  color:gold;  background:gray;  padding:1em;\n-moz-border-top-colors:    #e00 #c30 #c50 #c60 #c70 #c80 #c90 #ca0 #cb0 #cc0;\n-moz-border-right-colors:   red #f60 #f80 #f90 #fa0 #fb0 #fc0 #fd0 #fe0 #ff0;\n-moz-border-bottom-colors:  red #f60 #f80 #f90 #fa0 #fb0 #fc0 #fd0 #fe0 #ff0;\n-moz-border-left-colors:   #e00 #c30 #c50 #c60 #c70 #c80 #c90 #ca0 #cb0 #cc0;\n\n\n\/*  Other browsers use a &quot;solid 1.5em&quot; border  *\/\n\nborder: solid 1.5em;  -moz-border-radius:1.5em;  border-radius:1.5em;\n-moz-border-top-colors:    maroon maroon khaki maroon khaki maroon maroon transparent;\n-moz-border-right-colors:  maroon maroon khaki maroon khaki maroon maroon magenta;\n-moz-border-bottom-colors: maroon maroon khaki maroon khaki maroon maroon transparent;\n-moz-border-left-colors:   maroon maroon khaki maroon khaki maroon maroon transparent;\nSpecifications\nNon-standard     \nBrowser compatibility\nSupported since Gecko 1.0 (Firefox 1.0), no support in other major browsers.\nSee also\nborder-color\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-box-align","title":"box-align","description":"Summary\nThe CSS box-align property specifies how an element aligns its contents across (perpendicular to) the direction of its layout. The effect of this is only visible if there is extra space in the box.\nThe direction of layout depends on the element's orientation: horizontal or vertical.\n Initial value\n: stretch\n Applies to: elements with a CSS display\n value of box\n or inline-box\n Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nbox-align:         start | center | end | baseline | stretch     \/* As specified *\/\n-moz-box-align:    start | center | end | baseline | stretch     \/* Mozilla *\/\n-webkit-box-align: start | center | end | baseline | stretch     \/* WebKit *\/\n\nValues\n start The box aligns contents at the start, leaving any extra space at the end. center The box aligns contents in the center, dividing any extra space equally between the start and the end. end The box aligns contents at the end, leaving any extra space at the start. baseline The box aligns the baselines of the contents (lining up the text). This only applies if the box's orientation is horizontal. stretch The box stretches the contents so that there is no extra space in the box.\n\nExamples\n\r\n          &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;CSS box-align example&lt;\/title&gt;\n    &lt;style&gt;\n      div.example {\n        display: box;                   \/* As specified *\/\n        display: -moz-box;              \/* Mozilla *\/\n        display: -webkit-box;           \/* WebKit *\/\n        \n        \/* Make this box taller than the children, \n           so there is room for the box-pack *\/\n        height: 400px;           \n        \n        \/* Make this box wider than the children\n           so there is room for the box-align *\/\n        width: 300px;\n\n        \/* Children should be oriented vertically *\/\n        box-orient: vertical;           \/* As specified *\/\n        -moz-box-orient: vertical;      \/* Mozilla *\/\n        -webkit-box-orient: vertical;   \/* WebKit *\/\n\n        \/* Align children to the horizontal center of this box *\/\n        box-align: center;              \/* As specified *\/\n        -moz-box-align: center;         \/* Mozilla *\/\n        -webkit-box-align: center;      \/* WebKit *\/\n        \n        \/* Pack children to the bottom of this box *\/\n        box-pack: end;                  \/* As specified *\/\n        -moz-box-pack: end;             \/* Mozilla *\/\n        -webkit-box-pack: end;          \/* WebKit *\/\n      }\n      div.example &gt; p {            \n        \/* Make children narrower than their parent, \n           so there is room for the box-align *\/ \n        width: 200px;\n      }\n    &lt;\/style&gt;\n  &lt;\/head&gt;\n  &lt;body&gt;\n    &lt;div class=&quot;example&quot;&gt;\n      &lt;p&gt;I will be second from the bottom of div.example, centered horizontally.&lt;\/p&gt;\n      &lt;p&gt;I will be on the bottom of div.example, centered horizontally.&lt;\/p&gt;\n    &lt;\/div&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nNotes\nThe edge of the box designated the start for alignment purposes depends on the box's orientation:\n   Horizontal top   Vertical left  \n\nThe edge opposite to the start is designated the end.\nIf the alignment is set using the element's align attribute, then the style is ignored.\nSpecifications\nFlexible Box Layout Module (W3C Working Draft)\nNote:&nbsp;The current state of this specification does not reflect Mozilla's or WebKit's implementation.\n\nOld Flexible Box Layout Module\nNote:&nbsp;WebKit and Mozilla's implementations reflect this version of the specification\n\nSee also\nbox-orient\n, box-direction\n, box-pack\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-box-direction","title":"box-direction","description":"Summary\nThe CSS box-direction property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n Initial value\n: normal Applies to: elements with a CSS display\n value of box\n or inline-box\n Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nbox-direction:         normal | reverse | inherit      \/* As specified *\/\n-moz-box-direction:    normal | reverse | inherit      \/* Mozilla *\/\n-webkit-box-direction: normal | reverse | inherit      \/* WebKit *\/\n\nValues\n normal The box lays out its contents from the start (the left or top edge). reverse The box lays out its contents from the end (the right or bottom edge).\n\nExamples\n\r\n          .example {\n  \/* bottom-to-top layout *\/\n  box-direction: reverse;           \/* As specified *\/\n  -moz-box-direction: reverse;      \/* Mozilla *\/\n  -webkit-box-direction: reverse;   \/* WebKit *\/\n}\r\n        \nNotes\nThe edge of the box designated the start for layout purposes depends on the box's orientation:\n   Horizontal left   Vertical top  \n\nThe edge opposite to the start is designated the end.\nIf the direction is set using the element's dir attribute, then the style is ignored.\nSpecifications\nFlexible Box Layout Module (W3C Working Draft)\nNote:&nbsp;The current state of this specification does not reflect Mozilla's or WebKit's implementation.\n\nOld Flexible Box Layout Module\nNote:&nbsp;WebKit and Mozilla's implementations reflect this version of the specification\n\nSee also\nbox-orient\n, box-pack\n, box-align\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-box-flex","title":"box-flex","description":"Summary\nThe CSS box-flex property specifies how a box grows to fill the box that contains it, in the direction of the containing box's layout.\n Initial value\n: 0 Applies to: elements that are direct children of an element with a CSS display\n value of box\n or inline-box\n Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\nbox-flex: number           \/* As specified *\/\n-moz-box-flex: number      \/* Mozilla *\/\n-webkit-box-flex: number   \/* WebKit *\/\n\nValues\n 0 The box does not grow. &gt; 0 The box grows to fill a proportion of the available space.\n\nExamples\n\r\n          &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n  &lt;\/head&gt;\n  &lt;body&gt;\n    &lt;style&gt;\n      div.example {\n        display: box;\n        display: -moz-box;\n        display: -webkit-box;                \n      }\n      div.example &gt; p:nth-child(1) {\n        box-flex: 1;            \/* As specified *\/\n        -moz-box-flex: 1;       \/* Mozilla *\/\n        -webkit-box-flex: 1;    \/* WebKit *\/\n      }\n      div.example &gt; p:nth-child(2) {\n        box-flex: 0;            \/* As specified *\/\n        -moz-box-flex: 0;       \/* Mozilla *\/\n        -webkit-box-flex: 0;    \/* WebKit *\/\n      }\n    &lt;\/style&gt;\n    &lt;div class=&quot;example&quot;&gt;\n      &lt;p&gt;I will expand to fill extra space&lt;\/p&gt;\n      &lt;p&gt;I will not expand&lt;\/p&gt;\n    &lt;\/div&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nNotes\nThe containing box allocates the available extra space in proportion to the flex value of each of the content elements.\nContent elements that have zero flex do not grow.\nIf only one content element has nonzero flex, then it grows to fill the available space.\nContent elements that have the same flex grow by the same absolute amounts.\nIf the flex value is set using the element's flex attribute, then the style is ignored.\nTo make XUL elements in a containing box the same size, set the containing box's equalsize attribute to the value always. This attribute does not have a corresponding CSS property.\nA trick to make all content elements in a containing box the same size, is to give them all a fixed size (e.g. height: 0), and the same box-flex value greater than zero (e.g.&nbsp;box-flex: 1).\nSpecifications\nFlexible Box Layout Module (W3C Working Draft)\nNote:&nbsp;The current state of this specification does not reflect Mozilla's or WebKit's implementation.\n\nOld Flexible Box Layout Module\nNote:&nbsp;WebKit and Mozilla's implementations reflect this version of the specification\n\nSee also\n-moz-box-orient\n, box-pack\n, -moz-box-direction\n\n&nbsp;\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-box-ordinal-group","title":"-moz-box-ordinal-group","description":"Summary\nIndicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.\nValues\nValues must be integers greater than zero. The default value for this property is 1.\nExamples\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n  #Flexbox {\n    display: -ms-box;\n    display: -moz-box;\n    display: -webkit-box;\n  }\n \n  #text1 {\n    background: red;\n    -ms-box-ordinal-group: 4;\n    -moz-box-ordinal-group: 4;\n    -webkit-box-ordinal-group: 4;\n  }\n \n  #text2 {\n    background: green;\n    -ms-box-ordinal-group: 3;\n    -moz-box-ordinal-group: 3;\n    -webkit-box-ordinal-group: 3;\n  }\n \n  #text3 {\n    background: blue;\n    -ms-box-ordinal-group: 2;\n    -moz-box-ordinal-group: 2;\n    -webkit-box-ordinal-group: 2;\n  }\n \n  #text4 {\n    background: orange;\n  }\n&lt;\/style&gt;\n\n&lt;div id=&quot;Flexbox&quot;&gt;    \n  &lt;div id=&quot;text1&quot;&gt;text 1&lt;\/div&gt;    \n  &lt;div id=&quot;text2&quot;&gt;text 2&lt;\/div&gt;    \n  &lt;div id=&quot;text3&quot;&gt;text 3&lt;\/div&gt;    \n  &lt;div id=&quot;text4&quot;&gt;text 4&lt;\/div&gt;\n&lt;\/div&gt;\r\n        \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-box-orient","title":"box-orient","description":"Summary\nThe CSS box-orient property specifies whether an element lays out its contents horizontally or vertically.\nFor example, XUL box\n and hbox\n elements lay out their contents horizontally by default, but XUL vbox\n elements lay out their contents vertically by default.\nHTML DOM elements lay out their contents along the inline-axis by default. This CSS property will only apply to HTML elements with a CSS display\n value of box\n or inline-box\n.\n Initial value\n: horizontal\n (XUL) Initial value\n: inline-axis\n (HTML) Applies to: elements with a CSS display\n value of box\n or inline-box\n Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nbox-orient:         horizontal | vertical | inline-axis | block-axis | inherit      \/* As specified *\/\n-moz-box-orient:    horizontal | vertical | inline-axis | block-axis | inherit      \/* Mozilla *\/\n-webkit-box-orient: horizontal | vertical | inline-axis | block-axis | inherit      \/* WebKit *\/\n\nValues\n horizontal The box lays out its contents horizontally. vertical The box lays out its contents vertically. inline-axis (HTML) The box displays its children along the inline axis. block-axis (HTML) The box displays its children along the block axis.\n\nThe inline and block axes are the writing-mode dependent keywords which, in English, map to horizontal and vertical respectively.\nExamples\n\r\n          &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;CSS box-orient example&lt;\/title&gt;\n    &lt;style&gt;\n      div.example {\n        display: box;                     \/* As specified *\/\n        display: -moz-box;                \/* Mozilla *\/\n        display: -webkit-box;             \/* WebKit *\/\n\n        \/* Children should be oriented vertically *\/\n        box-orient: horizontal;           \/* As specified *\/\n        -moz-box-orient: horizontal;      \/* Mozilla *\/\n        -webkit-box-orient: horizontal;   \/* WebKit *\/\n      }\n    &lt;\/style&gt;\n  &lt;\/head&gt;\n  &lt;body&gt;\n    &lt;div class=&quot;example&quot;&gt;\n      &lt;p&gt;I will be to the left of my sibling.&lt;\/p&gt;\n      &lt;p&gt;I will be to the right of my sibling.&lt;\/p&gt;\n    &lt;\/div&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nNotes\nFor XUL elements, if the orientation is set using the element's orient\n attribute, then the style is ignored.\nSpecifications\nFlexible Box Layout Module (W3C Working Draft)\nNote:&nbsp;The current state of this specification does not reflect Mozilla's or WebKit's implementation.\n\nOld Flexible Box Layout Module\nNote:&nbsp;WebKit and Mozilla's implementations reflect this version of the specification\n\nSee also\nbox-direction\n, box-pack\n, box-align\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-box-pack","title":"box-pack","description":"Summary\nThe CSS box-pack property specifies how a box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\nThe direction of layout depends on the element's orientation: horizontal or vertical.\n Initial value\n: start\n Applies to: elements with a CSS display\n value of box\n or inline-box\n Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\nbox-pack:         start | center | end | justify     \/* As specified *\/\n-moz-box-pack:    start | center | end | justify     \/* Mozilla *\/\n-webkit-box-pack: start | center | end | justify     \/* WebKit *\/\n\nValues\n start The box packs contents at the start, leaving any extra space at the end. center The box packs contents in the center, dividing any extra space equally between the start and the end. end The box packs contents at the end, leaving any extra space at the start. justify The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start.\n\nExamples\n\r\n          &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;CSS box-pack example&lt;\/title&gt;\n    &lt;style&gt;\n      div.example {\n        display: box;                   \/* As specified *\/\n        display: -moz-box;              \/* Mozilla *\/\n        display: -webkit-box;           \/* WebKit *\/\n\n        \/* Make this box taller than the children, \n           so there is room for the box-pack *\/\n        height: 400px;           \n        \n        \/* Children should be oriented vertically *\/\n        box-orient: vertical;           \/* As specified *\/\n        -moz-box-orient: vertical;      \/* Mozilla *\/\n        -webkit-box-orient: vertical;   \/* WebKit *\/\n\n        \/* Align children to the horizontal center of this box *\/\n        box-align: center;              \/* As specified *\/\n        -moz-box-align: center;         \/* Mozilla *\/\n        -webkit-box-align: center;      \/* WebKit *\/\n\n        \/* Pack children to the bottom of this box *\/\n        box-pack: end;                  \/* As specified *\/\n        -moz-box-pack: end;             \/* Mozilla *\/\n        -webkit-box-pack: end;          \/* WebKit *\/\n      }\n      div.example &gt; p {            \n        \/* Make children narrower than their parent, \n           so there is room for the box-align *\/ \n        width: 200px;\n      }\n    &lt;\/style&gt;\n  &lt;\/head&gt;\n  &lt;body&gt;\n    &lt;div class=&quot;example&quot;&gt;\n      &lt;p&gt;I will be second from the bottom of div.example, centered horizontally.&lt;\/p&gt;\n      &lt;p&gt;I will be on the bottom of div.example, centered horizontally.&lt;\/p&gt;\n    &lt;\/div&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nNotes\nThe edge of the box designated the start for packing purposes depends on the box's orientation and direction:\n   &nbsp; Normal Reverse   Horizontal left right   Vertical top bottom  \n\nThe edge opposite to the start is designated the end.\nIf the packing is set using the element's pack attribute, then the style is ignored.\nSpecifications\nFlexible Box Layout Module (W3C Working Draft)\nNote:&nbsp;The current state of this specification does not reflect Mozilla's or WebKit's implementation.\n\nOld Flexible Box Layout Module\nNote:&nbsp;WebKit and Mozilla's implementations reflect this version of the specification\n\nSee also\nbox-orient\n, box-direction\n, box-align\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-filter","title":"-moz-filter","description":"Summary\n Initial value\n: none Applies to: graphics and container elements Inherited\n:&nbsp;no Percentages: n\/a Media: visual\n  Computed value\n:\n\nSyntax\n\nfilter: url(svg-url#element-id) \n\nExamples\n\n.target { filter: url(#c1); }\n\n.anothertarget { filter: url(resources.svg#c1); }\n\nSpecifications\n Filter Effects 1.0 Working Draft\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support ? 3.5 (1.9.1) --[*] ? ?   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ?  ?    \n\n[*] From Internet Explorer 5.5 to Internet Explorer 7.0 included, that browser implemented a non-standard filter property. The syntax was completely different from this one and is not documented here.\nSee also\n Applying SVG effects to HTML content The mask\n property SVG\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-float-edge","title":"-moz-float-edge","description":" Related bugs \n\n\nbug 432891\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-font-feature-settings","title":"-moz-font-feature-settings","description":"Summary\nThe -moz-font-feature-settings CSS property allows control over advanced typographic features in OpenType fonts.\n Initial value\n: normal\n Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\n-moz-font-feature-settings : normal | &lt;string&gt;\nwhere &lt;string&gt; is defined as quoted list of OpenType feature tag-value pairs\nValues\n normal Text is laid out using default settings. &lt;string&gt; When rendering text, the list of OpenType feature tags is passed to the text layout engine to enable or disable font features.&nbsp; For example, &quot;tagx=1&quot; implies that the OpenType feature 'tagx' is enabled.&nbsp; Using a value of 0 disables a given feature.&nbsp; For non-boolean OpenType features (e.g. stylistic alternates), the value implies a particular glyph to be selected.\n\nExamples\n\n\/* use small-cap alternate glyphs *\/\n.smallcaps { -moz-font-feature-settings: &quot;smcp=1&quot;; }\n\n\/* convert both upper and lowercase to small caps (affects punctuation also) *\/\n.allsmallcaps { -moz-font-feature-settings: &quot;c2sc=1, smcp=1&quot;; }\n\n\/* enable historical forms *\/\n.hist { -moz-font-feature-settings: &quot;hist=1&quot;; }\n\n\/* disable common ligatures, usually on by default *\/\n.noligs { -moz-font-feature-settings: &quot;liga=0&quot;; }\n\n\/* enable tabular (monospaced) figures *\/\ntd.tabular { -moz-font-feature-settings: &quot;tnum=1&quot;; }\n\n\/* enable automatic fractions *\/\n.fractions { -moz-font-feature-settings: &quot;frac=1&quot;; }\n\n\/* use the second available swash character *\/\n.swash { -moz-font-feature-settings: &quot;swsh=2&quot;; }\n\n\/* enable stylistic set 7 *\/\n.fancystyle {\n  font-family: Gabriola; \/* available on Windows 7 *\/\n  -moz-font-feature-settings: &quot;ss07=1&quot;;\n}\nNotes\nThis syntax for this property is still under development and will likely change as the CSS3 Fonts specification evolves. Authors should not rely on the current syntax being supported in future versions of Firefox.\nBrowser compatibility\nSupported in Gecko 2.0 (Firefox 4.0), no support in other major browsers.\nSpecifications\n CSS3 Fonts Editor's Draft OpenType Feature Tags list OpenType Font Feature support in Firefox 4 blog article\nSee Also\n FontFont OpenType User Guide\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-force-broken-image-icon","title":"-moz-force-broken-image-icon","description":"Summary\n-moz-force-broken-image-icon is an extended CSS property. The value 1 forces a broken image icon even if the image has an  alt attribute. When the value 0 is used the image will act as usual and only display the alt attribute.\nNote: Even if the value is set to 1 the alt attribute will still be displayed. More information is available below.\n Initial value\n: 0 Applies to: images Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\nSyntax\n\n-moz-force-broken-image-icon: &lt;integer&gt;;\n\nValues\n &lt;integer&gt;\n  \n\nExamples\n\nView Live Examples (not available, please check later)\n\n\nimg {\n&nbsp;&nbsp;&nbsp;&nbsp;-moz-force-broken-image-icon: 1;\n&nbsp;&nbsp;&nbsp; height:100px;\n&nbsp;&nbsp;&nbsp;&nbsp;width:100px;\n}\n\nNote: Unless the image has a specified height and width the broken image icon will not be displayed but the alt attribute will also be hidden if -moz-force-broken-image-icon is set to 1.\nNotes\n This property will only work in Gecko-based browsers. The use of this property is not recommended. A proper alt attribute should be used instead.\n\nSee also\n\n\nbug 58646\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-image-region","title":"-moz-image-region","description":"Summary\nFor certain XUL elements and pseudo-elements that use an image from the list-style-image\n property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.\nThe syntax is similar to the clip\n property. All four values are relative to the upper left corner of the image.\n Initial value\n: auto\n Applies to: XUL image\n elements and :-moz-tree-image\n, :-moz-tree-twisty\n, and :-moz-tree-checkbox\n pseudo-elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: For rect() values, a rect consisting of four computed lengths; otherwise as specified.\n\nSyntax\n-moz-image-region: rect(top, right, bottom, left);\n\nExamples\n#example-button {\n  \/* display only the 4x4 area from the top left of this image *\/\n  list-style-image: url(&quot;chrome:\/\/example\/skin\/example.png&quot;);\n  -moz-image-region: rect(0px, 4px, 4px, 0px);\n}\n#example-button:hover {\n  \/* use the 4x4 area to the right of the first for the hovered button *\/\n  -moz-image-region: rect(0px, 8px, 4px, 4px);\n}\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-margin-end","title":"-moz-margin-end","description":"Summary\nIn left to right (LTR) situations, the -moz-margin-end CSS property specifies the right margin and is synonymous with margin-right\n. In RTL cases it sets the left margin (same as margin-left\n).\nIn Right to Left (RTL) situations -moz-margin-end flips the elements margin without having to specify absolute left or right.\n Initial value\n: 0 Applies to: all elements except those with table display types other than table-caption, table, and inline-table Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: The percentage as specified or the absolute length\n\nSyntax\n\n-moz-margin-end:  \n&lt;length&gt;\n| &lt;percentage&gt;\n| inherit\n| auto\n\n\nValues\n &lt;length&gt;  Specifies a fixed width.  &lt;percentage&gt;  A percentage with respect to the width of the containing block. \n\nExamples\n\n  .content {-moz-margin-end: 5%}\n\n  .sidebox {-moz-margin-end: 10px}\n\nSpecifications\nNot (yet) candidate for specifications.\n CSS 3 box\n\nBrowser compatibility\n   Browser Lowest Version Support of   Internet Explorer --- ---   Firefox (Gecko) 1.0 (1.7) -moz-margin-end   Opera --- ---   Safari (WebKit) --- ---  \n\nSee also\n\n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-margin-start","title":"-moz-margin-start","description":"Summary\nIn left to right (LTR) situations the -moz-margin-start CSS property specifies the left margin and is synonymous with margin-left\n. In RTL cases it sets the right margin (same as margin-right\n).\nIn Right to Left (RTL) situations -moz-margin-start flips the elements margin without having to specify absolute left or right.\n Initial value\n: 0 Applies to: all elements except those with table display types other than table-caption, table, and inline-table Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\n-moz-margin-start:  \n&lt;length&gt;\n| &lt;percentage&gt;\n| inherit\n| auto\n\n\nValues\n &lt;length&gt;  Specifies a fixed width.  &lt;percentage&gt;  a percentage with respect to the width of the containing block. \n\nExamples\n-moz-margin-start:33%; -webkit-margin-start:33%;\ndirection:rtl; -moz-margin-start:33%; -webkit-margin-start:33%;\nSpecifications\nNot (yet) candidate for specifications.\n CSS 3 Box model #margins Working draft\n\nBrowser compatibility\n   Browser Lowest Version Support of   Internet Explorer --- ---   Firefox (Gecko) 1.0 (1.7) -moz-margin-start   Opera --- ---   Safari (WebKit) 2.0 (412) -khtml-margin-start   3.0 (522) -khtml-margin-start | -webkit-margin-start  \n\nSee also\n\n\nmargin\n, margin-top\n, margin-right\n, margin-bottom\n, margin-left\n, -moz-margin-start\n, -moz-margin-end\n, border\n, padding\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-orient","title":"-moz-orient","description":"Summary\nSpecifies the orientation of the element to which it's applied.\n Initial value\n: horizontal Applies to: &lt;progress&gt;\n Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\norient:  horizontal | vertical\n\nValues\n horizontal The element is rendered horizontally. vertical The element is rendered vertically.\nExamples\nThis example displays two progress bars; one horizontal and one vertical.\n\r\n          &lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;orient example&lt;\/title&gt;\n  &lt;style type=&quot;text\/css&quot;&gt;\n    .vert {\n      -moz-orient: vertical;\n      width: 16px;\n      height: 150px;\n    }\n  &lt;\/style&gt;\n&lt;\/head&gt;\n&lt;body&gt;\n  &lt;p&gt;The following progress meter is horizontal (the default):&lt;\/p&gt;\n  &lt;progress max=&quot;100&quot; value=&quot;75&quot;&gt;&lt;\/progress&gt;\n  &lt;p&gt;The following progress meter is vertical:&lt;\/p&gt;\n  &lt;progress class=&quot;vert&quot; max=&quot;100&quot; value=&quot;75&quot;&gt;&lt;\/progress&gt;\n&lt;\/body&gt;\n&lt;\/html&gt;\r\n        \n\nView the live example\n\nSpecifications\n Not part of any specification; currently, this is a Mozilla-specific extension (that is, -moz-orient).\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support -- 6.0 (6.0)\n -- -- --  \n\n\n\n   Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support -- 6.0 (6.0)\n -- -- --  \n\n\nGecko notes\nIn Gecko 6.0 (Firefox 6.0 \/ Thunderbird 6.0 \/ SeaMonkey 2.3)\n, there's a bug that causes vertical &lt;progress&gt;\n elements to render with the dimensions of a horizontal bar. This is fixed in Gecko 7.0 (Firefox 7.0 \/ Thunderbird 7.0 \/ SeaMonkey 2.4)\n.\nGecko notes\nIn Gecko 6.0 (Firefox 6.0 \/ Thunderbird 6.0 \/ SeaMonkey 2.3)\n, there's a bug that causes vertical &lt;progress&gt;\n elements to render with the dimensions of a horizontal bar. This is fixed in Gecko 7.0 (Firefox 7.0 \/ Thunderbird 7.0 \/ SeaMonkey 2.4)\n.\nSee also\n box-orient\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-outline-radius","title":"-moz-outline-radius","description":"Summary\nIn Mozilla applications like Firefox, the -moz-outline-radius CSS property can be used to give outlines rounded corners. An outline\n is a line that is drawn around elements, outside the border edge, to make the element stand out.\n-moz-outline-radius is a convenient shortcut to set the four properties -moz-outline-radius-topleft\n, -moz-outline-radius-topright\n, -moz-outline-radius-bottomright\n and -moz-outline-radius-bottomleft\n.\n Initial value\n: 0 Applies to: all elements Inherited\n: no Percentages: yes Media: visual\n  Computed value\n: ?\n\nSyntax\n\n-moz-outline-radius:&nbsp;&nbsp; &lt;outline-radius&gt;{1,4} [ \/ &lt;outline-radius&gt;{1,4}]? | inherit\nValues\nElliptical outlines and &lt;percentage&gt; values follow the syntax described in border-radius\n.\nOne, two, three or four &lt;outline-radius&gt; values, represents one of:\n &lt;length&gt; See \n&lt;length&gt;\n for possible values &lt;percentage&gt; A &lt;percentage&gt;\n; see border-radius\n for details\n\n One single value applies to all 4 corners  Two values apply to 1. topLeft and bottomRight and 2. to the topRight and bottomLeft corner Three values apply to 1. topLeft, 2. topRight and bottomLeft and 3. to the bottomRight corner Four values apply to 1. topLeft, 2. topRight, 3. bottomRight and 4. to the bottomLeft corner\n\nExamples\n\n outline: dotted red;\n\n -moz-outline-radius:  12% 1em 25px;\n   \/* is equivalent to: *\/\n -moz-outline-radius-topleft:     12%;\n -moz-outline-radius-topright:    1em;\n -moz-outline-radius-bottomright: 35px;\n -moz-outline-radius-bottomleft:  1em;\n\nNotes\n dotted or dashed radiused corners are rendered as solid, \n\nbug 382721\n Future versions of Gecko\/Firefox may drop this property completely. See \n\nbug 593717\n (remove -moz-outline-radius and make outlines follow border-radius)\n\nSpecifications\nThis property it is not defined in any CSS standard.\nBrowser compatibility\nSupport since Firefox 1.5 (Gecko 1.8). There is no correlative property in other major Browsers.\nSee also\n\n\noutline\n, outline-width\n, outline-style\n, outline-color\n, outline-offset\n, -moz-outline-radius\n, -moz-outline-radius-topleft\n, -moz-outline-radius-topright\n, -moz-outline-radius-bottomright\n, -moz-outline-radius-bottomleft\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-outline-radius-bottomleft","title":"-moz-outline-radius-bottomleft","description":" Summary \nIn Mozilla applications, -moz-outline-radius-bottomleft sets the rounding of the bottom-left corner of the outline.\nSee the -moz-outline-radius property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-outline-radius-bottomright","title":"-moz-outline-radius-bottomright","description":" Summary \nIn Mozilla applications, -moz-outline-radius-bottomright sets the rounding of the bottom-right corner of the outline.\nSee the -moz-outline-radius property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-outline-radius-topleft","title":"-moz-outline-radius-topleft","description":" Summary \nIn Mozilla applications, -moz-outline-radius-topleft sets the rounding of the top-left corner of the outline.\nSee the -moz-outline-radius property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-outline-radius-topright","title":"-moz-outline-radius-topright","description":" Summary \nIn Mozilla applications, -moz-outline-radius-topright sets the rounding of the top-right corner of the outline.\nSee the -moz-outline-radius property for more information.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-padding-end","title":"-moz-padding-end","description":"Summary\n-moz-padding-end specifies the logical end padding for an element. The computed value of the element's direction property then determines how the padding is translated to a physical padding. If the computed direction is left-to-right (ltr) then -moz-padding-end sets the right padding; otherwise it sets the left padding.\nSee also -moz-padding-start\n\n Initial value\n: 0 Applies to: all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\n-moz-padding-end: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n | auto\n;\n\n-moz-padding-end: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n | auto\n;\nValues\n \n&lt;length&gt;\n Specifies a fixed width. &lt;percentage&gt;\n a percentage with respect to the width of the containing block.\n\nExamples\n\nView Live Examples\n\n  .content {\n    -moz-padding-end: 5%;\n  }\n\n  .sidebox {\n    -moz-padding-end: 10px;\n  } \n\nNotes\nSpecifications\nNot yet candidate for Specifications\nCSS 3&nbsp;Writing Modes\nBrowser Compatibility\n   Browser Lowest version   Internet Explorer --   Firefox (Gecko) &nbsp;Firefox 3 (1.9) (-moz-padding-start)   Opera --    Safari | Chrome | WebKit   3 | 2 |&nbsp;528.17 (-webkit-padding-start)   \n\nSee also\n\n\npadding\n, padding-top\n, padding-right\n, padding-bottom\n, padding-left\n, -moz-padding-start\n, -moz-padding-end\n, border\n, margin\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-padding-start","title":"-moz-padding-start","description":"Summary\n-moz-padding-start specifies the logical start padding for an element. The computed value of the element's direction property then determines how the padding is translated to a physical padding. If the computed direction is left-to-right (&quot;ltr&quot;) then -moz-padding-start sets the left padding; otherwise it sets the right padding.\nSee also -moz-padding-end\n\n Initial value\n: 0 Applies to: all elements except table-row-group, table-header-group, table-footer-group, table-row, table-column-group and table-column Inherited\n: no Percentages: refer to width\n of closest block-level ancestor Media: visual\n  Computed value\n: the percentage as specified or the absolute length\n\nSyntax\n\n-moz-padding-start: \n&lt;length&gt;\n | &lt;percentage&gt;\n | inherit\n | auto\n;\n\nValues\n \n&lt;length&gt;\n Specifies a fixed width. &lt;percentage&gt;\n A percentage with respect to the width of the containing block.\n\nExamples\n\nView Live Examples\n\n  .content {\n    -moz-padding-start: 5%;\n  }\n\n  .sidebox {\n    -moz-padding-start: 10px;\n  } \n\nNotes\nSpecifications\nNot yet candidate for Specifications\nCSS 3&nbsp;Writing Modes\nBrowser Compatibility\n   Browser Lowest version   Internet Explorer --   Firefox (Gecko) &nbsp;Firefox 3 (1.9) (-moz-padding-start)   Opera --    Safari | Chrome | WebKit   3 | 2 |&nbsp;528.17 (-webkit-padding-start)   \n\nSee also\n\n\npadding\n, padding-top\n, padding-right\n, padding-bottom\n, padding-left\n, -moz-padding-start\n, -moz-padding-end\n, border\n, margin\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-stack-sizing","title":"-moz-stack-sizing","description":"Summary\n-moz-stack-sizing is an extended CSS property. Normally, a stack\n will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.\nIf you wish to prevent the stack from resizing automatically to accommodate its children, you can set -moz-stack-sizing to ignore on the child element. The property is set not on the stack itself, but on the stack's children. This lets you ignore certain children, but not others.\n Initial value\n: stretch-to-fit Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\n-moz-stack-sizing: ignore | stretch-to-fit\n\nValues\n stretch-to-fit The child will influence the stack's size. ignore The stack won't consider this child when calculating the its size.\n\nExamples\n\nView Live Examples (not available, please check later)\n\n\n.mainsheet{\n\t-moz-stack-sizing: ignore;\n}\n\nNotes\nIn previous versions of Gecko it was possible to work around the problem by setting very large negative bottom and right margins on the stack element and equally large positive bottom and right margins on the children whose size you didn't want to ignore. (The problem does not affect children moved above or to the left of the stack.)\nBugzilla\n\n\nbug 346189\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-text-blink","title":"-moz-text-blink","description":"Summary\nThe -moz-text-blink non-standard Mozilla CSS extension specifies the blink mode.\n Initial value\n: none Applies to: all elements Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n: as specified\n\nSyntax\n\n-moz-text-blink: none | blink\nValues\n none Produces no blinking. blink Text blinks. Note that not blinking the text is one technique to satisfy checkpoint 3.3 of WAI-UAAG.\n\nExamples\n\n.example { \n    -moz-text-blink: blink;\n}\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 6.0 (6.0)\n -- -- -- --  \n\n\n\n   Feature Firefox Mobile (Gecko) Android IE Phone Opera Mobile Safari Mobile   Basic support ? -- -- -- --  \n\n\nSpecifications\n Old CSS 3 Text specification #text-blink\n\nSee also\n\n text-align\n, text-indent\n text-decoration\n, text-decoration-color\n, text-decoration-line\n,text-decoration-style\n letter-spacing\n, word-spacing\n,white-space\n text-transform\n, text-rendering\n, text-shadow\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-user-input","title":"-moz-user-input","description":"Summary\nIn Mozilla applications, -moz-user-input determines if an element will accept user input.\n Initial value\n: none\n Applies to: all elements Inherited\n: yes Percentages: n\/a Media: visual\n  Computed value\n: as specified \n\n-moz-user-input was one of the proposals leading to the proposed CSS 3 user-input\n property, which has not yet reached Candidate Recommendation (call for implementations).\nFor elements that normally take user input, such as a textarea, the initial value of -moz-user-input is enabled.\nSyntax\n\n-moz-user-input: none | enabled | disabled | inherit\n\nValues\n none The element does not respond to user input, and it does not become :active\n. enabled The element accepts user input. For textboxes, this is the default behavior. disabled The element does not accept user input. However, this is not the same as setting disabled\n to true, in that the element is drawn normally.\n\nRelated properties\n -moz-user-focus controls what happens when an element is given focus. -moz-user-modify controls if a user can read or write in an element. -moz-user-select controls how an element is selected.\n\nExamples\n\ninput.example {\n  \/* the user will be able to select the text, but not change it. *\/\n  -moz-user-input: disabled;\n}\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-user-modify","title":"-moz-user-modify","description":"Summary\nThe -moz-user-modify property determines whether or not the content of an element can be edited by a user. This property is related to the contentEditable attribute.\n Initial value\n: read-only Applies to: all elements Inherited\n: yes Percentages: n\/a Media: interactive Computed value\n: as specified\n\nSyntax\n\n-moz-user-modify: read-only | read-write | write-only\nValues\n read-only Default value. Contents are read-only. read-write The user is able to read and write contents. write-only The user is able to edit the content, but not to read it.\n\nExample\n\n.readwrite {\n  -moz-user-modify: read-write;\n  -webkit-user-modify: read-write;\n}\n\n&lt;div class=&quot;readwrite&quot;&gt;The user is able to change this text.&lt;\/div&gt;\n\nBrowser compatibility\n   Browser Version Support of   Internet Explorer --- ---   Firefox (Gecko) 1.0 (1.0) -moz-user-modify   Opera --- ---   Safari (WebKit) 3.0 (522) -webkit-user-modify [*]  \n\n[*] Also supported: -webkit-user-modify: read-write-plaintext-only (Richtext will be lost). \nThis property was called -khtml-user-modify in Safari 2.0.\nSpecification\n CSS 3 User Interface #user-modify (Working Draft February 2000, now superseded by CSS 3 Basic User Interface)\n\nSee also\n -moz-user-focus -moz-user-input -moz-user-select\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-user-select","title":"user-select","description":"Examples\n\r\n          &lt;style&gt;\n  .unselectable {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n  }\n&lt;\/style&gt;\n&lt;body&gt;\n  &lt;p class=&quot;unselectable&quot;&gt;The user is not able to select this text in Firefox, Chrome, Safari, and IE.&lt;\/p&gt;\n&lt;\/body&gt;\r\n        \nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 1 (Supported) 10 - (Supported)   Element \n-webkit \n-moz \n-ms &nbsp; \n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee also\n ::-moz-selection,&nbsp;::selection\n Safari -webkit-user-select reference documentation IE 10 Blog post\n\nSee also\n ::-moz-selection,&nbsp;::selection\n Safari -webkit-user-select reference documentation IE 10 Blog post\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-window-shadow","title":"-moz-window-shadow","description":"Summary\n-moz-window-shadow specifies whether a window will have a shadow. Currently it only works on Mac OS X.\n Initial value\n: default\n Applies to: all elements that create native windows, e.g. window, panel Inherited\n: no Percentages: n\/a Media: visual\n  Computed value\n:\n\nFirefox 3 added support for transparent windows on Mac OS X. However, for these windows shadows were turned off and there was no way of turning them on.\nIn Firefox 3.5 we changed the default; all windows now have a shadow. We introduced the -moz-window-shadow CSS property to provide a way to turn off unwanted shadows.\nSyntax\n\n-moz-window-shadow: default | menu | tooltip | sheet | none\n\nValues\n default The window will have a shadow with the default window shadow style. menu \nRequires Gecko 2.0\n The window will have the shadow style that's appropriate for menus. tooltip \nRequires Gecko 2.0\n The window will have the shadow style that's appropriate for tooltips. sheet \nRequires Gecko 2.0\n The window will have the shadow style that's appropriate for sheet windows. none The window won't have a shadow.\n\nExamples\n\n.KUI-panel {\n  -moz-window-shadow: none;\n}\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-linear-gradient","title":"linear-gradient","description":"Syntax\nlinear-gradient( [ [ &lt;angle&gt; | to &lt;side-or-corner&gt; ,]? &lt;color-stop&gt; [, &lt;color-stop&gt;]+ )\n\nVendor prefixes: See the compatibility table below for detail on the vendor prefixes you'll need to use for gradients.\nWhere:\n &lt;color-stop&gt;  &lt;color&gt;\n [ &lt;percentage&gt;\n | \n&lt;length&gt;\n ] \n\nValues\n &lt;side-or-corner&gt; Represents the position of the starting-point of the gradient line. It consists of two keywords: the first one indicates the horizontal side, left or right, and the second one the vertical side, top or bottom. The order is not relevant and each of the keyword is optional. The values to top, to bottom, to left and to right are translated into the angles 0deg, 180deg, 270deg, 90deg respectively. The others are translated into an angle that let the starting-point to be in the same quadrant than the described corner and so that the line defined by the starting-point and the corner is perpendicular to the gradient line. That way, the color described by the &lt;color-stop&gt; will exactly apply to the corner point. This is sometimes called the &quot;magic corner&quot; property. The end-point of the gradient line is the symmetrical point of the starting-point on the other direction of the center box. &lt;angle&gt; An angle of direction for the gradient. See &lt;angle&gt;\n. &lt;color-stop&gt; This value is comprised of a &lt;color&gt;\n value, followed by an optional stop position (either a percentage between 0% and 100% or a \n&lt;length&gt;\n along the gradient axis). Rendering of color-stops in CSS gradients follows the same rules as color-stops in SVG gradients.\n\nExamples\nPositions can be specified along the gradient axis with a color for each of them, called &quot;color-stops&quot;, and the areas between every color-stop smoothly transition between each other. Any one color in the gradient forms a straight line that is perpendicular to the gradient axis. In the below image, the gradient's axis starts from the top-left corner of the div, and is directed at a 45 degree angle. Two color-stops are specified, red and blue.\n\nExample: Multiple color stops\nIf the first color-stop does not have a &lt;length&gt; or &lt;percentage&gt;, it defaults to 0%. If the last color-stop does not have a &lt;length&gt; or &lt;percentage&gt;, it defaults to 100%. If a color-stop doesn't have a specified position and it isn't the first or last stop, then it is assigned the position that is half way between the previous stop and next stop.\nColor-stops must be specified in order. After assigning default values to the first and last stops if necessary, if a color-stop has a specified position that is less than the specified position of any color-stop before it in the list, its position is changed to be equal to the largest specified position of any color-stop before it.\nA rainbow made from a gradient\nbackground-image: linear-gradient(to right, red, orange, yellow, green, blue, indigo, violet);\n\nExamples: Repeating\nThe linear-gradient does not allow repeating gradients. By default, the gradient will stretch to fill the element it is defined on. For this functionality, see repeating-linear-gradient\n.\nExample: Using transparency\nLinear with transparency\nbackground-image: linear-gradient(top left, red, rgba(255,0,0,0));\nGradient backgrounds are not affected by background-size\n if all points and lengths are specified using fixed units (as opposed to percentages or keywords, which are relative to the value of background-size).\nExample: Multiple color stops\nIf the first color-stop does not have a &lt;length&gt; or &lt;percentage&gt;, it defaults to 0%. If the last color-stop does not have a &lt;length&gt; or &lt;percentage&gt;, it defaults to 100%. If a color-stop doesn't have a specified position and it isn't the first or last stop, then it is assigned the position that is half way between the previous stop and next stop.\nColor-stops must be specified in order. After assigning default values to the first and last stops if necessary, if a color-stop has a specified position that is less than the specified position of any color-stop before it in the list, its position is changed to be equal to the largest specified position of any color-stop before it.\nA rainbow made from a gradient\nbackground-image: linear-gradient(to right, red, orange, yellow, green, blue, indigo, violet);\n\nExamples: Repeating\nThe linear-gradient does not allow repeating gradients. By default, the gradient will stretch to fill the element it is defined on. For this functionality, see repeating-linear-gradient\n.\nExample: Using transparency\nLinear with transparency\nbackground-image: linear-gradient(top left, red, rgba(255,0,0,0));\nGradient backgrounds are not affected by background-size\n if all points and lengths are specified using fixed units (as opposed to percentages or keywords, which are relative to the value of background-size).\nNotes\nIf you set the background-image\n property of the &lt;body&gt;\n tag to a linear-gradient, the gradient won't fill the browser screen unless you also set the min-height\n property of the document root (e.g. the &lt;html&gt;\n tag) to 100%.\nSpecifications\n   Specification Status Comment     CSS Image Value and Replaced Content Module Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 3.6 (1.9.2)\n\n-moz \n\nbug 479220\n [3] 10.0 (534.16)\n-webkit [2][3] 10.0 \n-ms[1] 11.10\n-o [3] 5.1\n-webkit[2][3]   Legacy webkit syntaxNon-standard      -- 3\n-webkit [2] -- -- 4.0\n-webkit[2]   Legacy from syntax (without to) Non-standard      3.6 (1.9.2)\n\n-moz [4] 10.0 (534.16)\n-webkit [2] 10.0 \n-ms [2] 11.10\n-o 5.1\n-webkit[2]   to syntax  10.0 (10)\n\n-moz \n\nbug 685400\n [4]  -- -- -- --  \n\n[1] Internet Explorer 5.5 through 8.0 supports proprietary filter: progid:DXImageTransform.Microsoft.Gradient() filter.\n[2] WebKit since 528 supports the legacy -webkit-gradient(linear,&hellip;) function. As of WebKit 534.16, it also supports the standard gradient syntax. Unlike in Gecko, in legacy WebKit you cannot specify both a position and angle in -webkit-linear-gradient(). You can achieve the same effect by offsetting the color stops.\n[3] Gecko, Opera &amp; Webkit considers &lt;angle&gt;\n to start to the right, instead of the top. I.e. it considered an angle of 0deg as a direction indicator pointing to the right. This is different from the latest specification where an angle of 0deg as a direction indicator points to the top. [3] [4]\n[4] Firefox 3.6 implemented, prefixed, an early syntax where the starting corner or side was indicated without the to keyword, and effectively considered as a from position. The to syntax has been added in Firefox 10, without removing the deprecated syntax and translation between the two is trivial:\n-moz-linear-gradient(to top left, blue, red);\n\nis the same as:\n\n-moz-linear-gradient(bottom right, blue, red);\n\nThe legacy syntax, without to, is planned to go away when the prefix will be removed.\nCross-browser gradients\nConsidering all prefixes above, here is a gradient from pink to green, top to bottom. (Code taken from css3please.com)\n.grad { \n\n  background-color: #F07575; \/* fallback color if gradients are not supported *\/\n\n  background-image: -webkit-gradient(linear, left top, left bottom, from(hsl(0, 80%, 70%)), to(#BADA55)); \n  background-image: -webkit-linear-gradient(top, hsl(0, 80%, 70%), #BADA55); \n  background-image:    -moz-linear-gradient(top, hsl(0, 80%, 70%), #BADA55); \n  background-image:     -ms-linear-gradient(top, hsl(0, 80%, 70%), #BADA55); \n  background-image:      -o-linear-gradient(top, hsl(0, 80%, 70%), #BADA55); \n  background-image:         linear-gradient(to bottom, hsl(0, 80%, 70%), #BADA55); \/* current standard, but unimplemented and subject to change *\/\n\n}\n\nSee also\n Using CSS gradients, radial-gradient()\n, repeating-linear-gradient()\n, repeating-radial-gradient()\n; Some properties where it can be used: background-image\n, background\n; The now obsolete WebKit's original proposal; CSS Gradients Patterns Gallery, by Lea Verou; CSS3 Gradients Library, by Estelle Weyl.\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-element","title":"element","description":"Syntax\nelement( id )\n\nwhere:\n id The ID of an element to use as the background, specified using the HTML attribute #id on the element.\n\nExamples\nThese examples can be viewed live in builds of Firefox that support -moz-element().\nA somewhat realistic example\nThis example uses a hidden &lt;div&gt;\n as a background. The background element uses a gradient, but also includes text that is rendered as part of the background.\n\r\n          &lt;div style=&quot;width:400px; height:400px; background:-moz-element(#myBackground1) no-repeat;&quot;&gt;\n    &lt;p&gt;This box uses the element with the #myBackground1 ID as its background!&lt;\/p&gt;\n  &lt;\/div&gt;\n\n  &lt;div style=&quot;overflow:hidden; height:0;&quot;&gt;\n    &lt;div id=&quot;myBackground1&quot; style=&quot;width:1024px; height:1024px; background-image: -moz-linear-gradient(left, red, orange, yellow, white);&quot;&gt;\n    &lt;p style=&quot;-moz-transform-origin:0 0; -moz-transform: rotate(45deg); color:white;&quot;&gt;This text is part of the background. Cool, huh?&lt;\/p&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\r\n        \nThe &lt;div&gt;\n element with the ID&nbsp;&quot;myBackground1&quot; is used as the background for the content including the paragraph &quot;This box uses the element with the #myBackground1&nbsp;ID as its background!&quot;.\n\nA somewhat more bizarre example\nThis example uses a hidden &lt;button&gt;\n element in a repeating pattern as its background. This demonstrates that you can use arbitrary elements as background, but doesn't necessarily demonstrate good design practices.\n\r\n          &lt;div style=&quot;width:400px; height:100px; background:-moz-element(#myBackground2);&quot;&gt;\n  &lt;\/div&gt;\n\n  &lt;div style=&quot;overflow:hidden; height:0;&quot;&gt;\n    &lt;button id=&quot;myBackground2&quot; type=&quot;button&quot;&gt;Evil button!&lt;\/button&gt;\n  &lt;\/div&gt;\r\n        \n\nA somewhat realistic example\nThis example uses a hidden &lt;div&gt;\n as a background. The background element uses a gradient, but also includes text that is rendered as part of the background.\n\r\n          &lt;div style=&quot;width:400px; height:400px; background:-moz-element(#myBackground1) no-repeat;&quot;&gt;\n    &lt;p&gt;This box uses the element with the #myBackground1 ID as its background!&lt;\/p&gt;\n  &lt;\/div&gt;\n\n  &lt;div style=&quot;overflow:hidden; height:0;&quot;&gt;\n    &lt;div id=&quot;myBackground1&quot; style=&quot;width:1024px; height:1024px; background-image: -moz-linear-gradient(left, red, orange, yellow, white);&quot;&gt;\n    &lt;p style=&quot;-moz-transform-origin:0 0; -moz-transform: rotate(45deg); color:white;&quot;&gt;This text is part of the background. Cool, huh?&lt;\/p&gt;\n    &lt;\/div&gt;\n  &lt;\/div&gt;\r\n        \nThe &lt;div&gt;\n element with the ID&nbsp;&quot;myBackground1&quot; is used as the background for the content including the paragraph &quot;This box uses the element with the #myBackground1&nbsp;ID as its background!&quot;.\n\nA somewhat more bizarre example\nThis example uses a hidden &lt;button&gt;\n element in a repeating pattern as its background. This demonstrates that you can use arbitrary elements as background, but doesn't necessarily demonstrate good design practices.\n\r\n          &lt;div style=&quot;width:400px; height:100px; background:-moz-element(#myBackground2);&quot;&gt;\n  &lt;\/div&gt;\n\n  &lt;div style=&quot;overflow:hidden; height:0;&quot;&gt;\n    &lt;button id=&quot;myBackground2&quot; type=&quot;button&quot;&gt;Evil button!&lt;\/button&gt;\n  &lt;\/div&gt;\r\n        \n\nSpecifications\n   Specification Status Comment     CSS Image Values and Replaced Content Level 3 Unknown\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 4.0 (2.0) [1] [*] \n-moz -- -- -- -- [2]   \n\n    Feature Firefox Mobile (Gecko) Android IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support 4.0 (2.0) [3] [*] \n-moz -- -- -- --   \n\n[*] Usage limited to the background\n&nbsp;and background-image\n CSS properties.\nSee also\n document.mozSetImageElement()\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-radial-gradient","title":"radial-gradient","description":"Syntax\nradial-gradient( [&lt;position&gt; || &lt;angle&gt;,]? [&lt;shape&gt; ||&nbsp;&lt;size&gt;,]? &lt;stop&gt;, &lt;stop&gt;[, &lt;stop&gt;]* )\n\nValues\n &lt;position&gt; A position, interpreted in the same way as background-position\n or transform-origin\n. If omitted, the default is center. &lt;angle&gt; An angle establishing the gradient line, which extends from the starting point at this angle; this is 0deg by default. &lt;shape&gt; The gradient's shape. This is one of circle (meaning that the gradient's shape is a circle with constant radius) or ellipse (meaning that the shape is an axis-aligned ellipse). The default value is ellipse. &lt;size&gt; The size of the gradient. This is one of the Size constants listed below. &lt;stop&gt; This value is comprised of a &lt;color&gt;\n value, followed by an optional stop position (either a percentage between 0% and 100% or a \n&lt;length&gt;\n along the gradient axis). Rendering of color-stops in CSS gradients follows the same rules as color-stops in SVG gradients.\n\nSize constants\n   Constant Description   closest-side  The gradient's shape meets the side of the box closest to its center (for circles) or meets both the vertical and horizontal sides closest to the center (for ellipses).   closest-corner The gradient's shape is sized so it exactly meets the closest corner of the box from its center.   farthest-side Similar to closest-side, except the shape is sized to meet the side of the box farthest from its center (or vertical and horizontal sides).   farthest-corner  The gradient's shape is sized so it exactly meets the farthest corner of the box from its center.   contain  A synonym for closest-side.   cover  A synonym for farthest-corner.  \n\nUsage\nRadial gradients also run along an axis. At each end point of the axis, a radius is specified. This can be imagined as creating two &quot;circles&quot;, where for each circle the center is specified by the point and the radius is specified by the radius length. The gradient runs outwards from the circumference of the inner circle to the circumference of the outer circle.\nbackground-image:    -moz-radial-gradient(center 45deg, circle closest-side, orange 0%, red 100%);\nbackground-image: -webkit-radial-gradient(center 45deg, circle closest-side, orange 0%, red 100%);\nbackground-image: -ms-radial-gradient(center 45deg, circle closest-side, orange 0%, red 100%);\nbackground-image: -o-radial-gradient(center 45deg, circle closest-side, orange 0%, red 100%);\n\nExamples\nFor a more general introduction to how CSS gradients in Gecko\/Firefox work, see -moz-linear-gradient\n.\nbackground:    -moz-radial-gradient(45px 45px 45deg, circle cover,\n\t\t\t\t aqua 0%, rgba(0, 0, 255, 0) 100%, blue 95%);\nbackground: -webkit-radial-gradient(45px 45px 45deg, circle cover,\n&nbsp;&nbsp;&nbsp;&nbsp; aqua 0%, rgba(0, 0, 255, 0) 100%, blue 95%);\nbackground: -ms-radial-gradient(45px 45px 45deg, circle cover,\n&nbsp;&nbsp;&nbsp;&nbsp; aqua 0%, rgba(0, 0, 255, 0) 100%, blue 95%);\nbackground: -o-radial-gradient(45px 45px 45deg, circle cover,\n&nbsp;&nbsp;&nbsp;&nbsp; aqua 0%, rgba(0, 0, 255, 0) 100%, blue 95%);\n\nbackground-image: -webkit-radial-gradient(45px 45px, ellipse farthest-corner,\n\t\t\t\t aqua 0%, rgba(0, 0, 255, 0) 100%, blue 95%);\nbackground-image: -moz-radial-gradient(45px 45px, ellipse farthest-corner,\n\t\t\t\t aqua 0%, rgba(0, 0, 255, 0) 100%, blue 95%);\nbackground-image:&nbsp;&nbsp;&nbsp; -ms-radial-gradient(45px 45px, ellipse farthest-corner,\n\t\t\t\t aqua 0%, rgba(0, 0, 255, 0) 100%, blue 95%);\nbackground-image:&nbsp;&nbsp;&nbsp; -o-radial-gradient(45px 45px, ellipse farthest-corner,\n\t\t\t\t aqua 0%, rgba(0, 0, 255, 0) 100%, blue 95%);\n\nRadial\nbackground: -webkit-radial-gradient(45px 45px, cover, rgb(255, 0, 0) 0%, rgb(0, 0, 255) 100%);\nbackground:    -moz-radial-gradient(45px 45px, cover, rgb(255, 0, 0) 0%, rgb(0, 0, 255) 100%);\nbackground:    -ms-radial-gradient(45px 45px, cover, rgb(255, 0, 0) 0%, rgb(0, 0, 255) 100%);\nbackground:    -o-radial-gradient(45px 45px, cover, rgb(255, 0, 0) 0%, rgb(0, 0, 255) 100%);\n\nBrowser compatibility\n   Browser Lowest version Support of   Internet Explorer  5.5 (including 8.0)   filter: progid:DXImageTransform.Microsoft.Gradient() MSDN library, gradient filter     10   -ms-radial-gradient()    Firefox (Gecko) 3.6 (1.9.2) -moz-radial-gradient()   Opera 12 [1] -o-radial-gradient()   Safari \/ WebKit \/ Chrome 4.0 \/ 528 \/ 3 -webkit-gradient(radial,&hellip;) Safari Reference Library, gradients   &nbsp; 6 \/ r75891 \/ 10 -webkit-radial-gradient() Safari: CSS3 Gradients Note: unlike Gecko, WebKit supports explicitly sized gradients. See \n\nbug 627885\n  \n\nNote that the Mozilla syntax proposal for CSS gradients differs significantly from WebKit's original proposal:\n Gecko (Firefox) uses separate kinds of property values to distinguish radial and linear gradients, whereas WebKit previously lumped them into a single kind of property value and needs a leading parameter to identify the type of gradient. The actual syntax for how a radial gradient is specified is significantly different. Webkit, Mozilla, Opera and Microsoft now implement the previous version of the W3C standard syntax. The syntax has been changed as of October 2011. The new proposed syntax is not supported in any browser.\n\nSee also\n Using gradients -moz-linear-gradient\n background-image\n background\n WebKit's original proposal: http:\/\/webkit.org\/blog\/175\/introducing-css-gradients\/ WebKit's new implementation:&nbsp;http:\/\/webkit.org\/blog\/1424\/css3-gradients\/ Mozilla Bug: \n\nbug 479220\n W3C&nbsp;Proposal for Radial Gradients: http:\/\/dev.w3.org\/csswg\/css3-images\/#radial-gradients W3C Proposal for Background&nbsp;Position:&nbsp;http:\/\/www.w3.org\/TR\/css3-background\/#the-background-position\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-image-rect","title":"-moz-image-rect","description":"Summary\nThis value for CSS&nbsp;background-image\n lets you use a portion of a larger image as a background. This allows you to, for example, use different parts of one larger image as backgrounds in different parts of your content.\nThis works very similarly to the -moz-image-region\n property, which is used with the list-style-image\n property to use parts of an image as the bullets in lists. However, this can be used for any CSS&nbsp;background.\nThe syntax for the rectangle is similar to the rect() function generating a &lt;shape&gt;\n CSS type. All four values are relative to the upper left corner of the image.Syntax\n\n-moz-image-rect(&lt;uri&gt;\n, top, right, bottom, left);\nValues\n &lt;uri&gt;\n The URI&nbsp;of the image from which to take the sub-image. top The top edge, specified as a \n&lt;length&gt;\n, of the sub-image within the specified image. right The right edge, specified as a \n&lt;length&gt;\n, of the sub-image within the specified image. bottom The bottom edge, specified as a \n&lt;length&gt;\n, of the sub-image within the specified image. left The left edge, specified as a \n&lt;length&gt;\n, of the sub-image within the specified image.\n\nValues\n &lt;uri&gt;\n The URI&nbsp;of the image from which to take the sub-image. top The top edge, specified as a \n&lt;length&gt;\n, of the sub-image within the specified image. right The right edge, specified as a \n&lt;length&gt;\n, of the sub-image within the specified image. bottom The bottom edge, specified as a \n&lt;length&gt;\n, of the sub-image within the specified image. left The left edge, specified as a \n&lt;length&gt;\n, of the sub-image within the specified image.\n\nExample\nThis example loads an image and uses it in four segments to draw the Firefox logo in four &lt;div&gt;\n&nbsp;blocks. Clicking on their container causes the four segments to rotate around by swapping the background-image\n property values among the four &lt;div&gt;\n&nbsp;blocks.\nCSS\nThe CSS&nbsp;defines one container style, then the styles for the four boxes that comprise the complete image.\nThe container looks like this:\n\r\n          #container {\n  width:400px;\n  height:400px;\n  top:100px;\n  left:100px;\n  position:absolute;\n  font-size:16px;\n  text-shadow:white 0px 0px 6px;\n  text-align:center;\n}\r\n        \nThen the four boxes defining the segments of the image are defined. Let's look at them one at a time.\n\r\n          #box1 {\n  background-image: -moz-image-rect(url(firefox.jpg), 0%, 50%, 50%, 0%);\n  width:200px;\n  height:200px;\n  position:absolute;\n}\r\n        \nThis is the top-left corner of the image. It defines a rectangle containing the top-left quarter of the image in the file firefox.jpg.\n\r\n          #box2 {\n  background-image: -moz-image-rect(url(firefox.jpg), 0%, 100%, 50%, 50%);\n  width:200px;\n  height:200px;\n  position:absolute;\n}\r\n        \nThis defines the top-right corner of the image.\nThe other corners follow a similar pattern:\n\r\n          #box3 {\n  background-image: -moz-image-rect(url(firefox.jpg), 50%, 50%, 100%, 0%);\n  width:200px;\n  height:200px;\n  position:absolute;\n}\n#box4 {\n  background-image: -moz-image-rect(url(firefox.jpg), 50%, 100%, 100%, 50%);\n  width:200px;\n  height:200px;\n  position:absolute;\n}\r\n        \nHTML\nThe HTML&nbsp;is quite simple:\n\r\n          &lt;div id=&quot;container&quot; onclick=&quot;rotate()&quot;&gt;\n  &lt;div id=&quot;box1&quot; style=&quot;left:0px;top:0px;&quot;&gt;Top left&lt;\/div&gt;\n  &lt;div id=&quot;box2&quot; style=&quot;left:200px;top:0px;&quot;&gt;Top right&lt;\/div&gt;\n  &lt;div id=&quot;box3&quot; style=&quot;left:0px;top:200px;&quot;&gt;Bottom left&lt;\/div&gt;\n  &lt;div id=&quot;box4&quot; style=&quot;left:200px;top:200px;&quot;&gt;Bottom right&lt;\/div&gt;\n&lt;\/div&gt;\r\n        \nThis places the four segments of our image in a two-by-two box grid. These four segments are all contained within a larger &lt;div&gt;\n&nbsp;block whose primary purpose is to receive click events and dispatch them to our JavaScript code.\nThe JavaScript code\nThis code handles the click event when the container receives a mouse click.\n\r\n          function rotate() {\n  var prevStyle = window.getComputedStyle(document.getElementById(&quot;box4&quot;), null).getPropertyValue(&quot;background-image&quot;);\n  \n  \/\/ Now that we've saved the last one, start rotating\n  \n  for (var i=1; i&lt;=4; i++) {\n    var curId = &quot;box&quot; + i;\n    \n    \/\/ Shift the background iamges\n    \n    var curStyle = window.getComputedStyle(document.getElementById(curId), null).getPropertyValue(&quot;background-image&quot;);\n    document.getElementById(curId).style.backgroundImage = prevStyle;\n    prevStyle = curStyle;\n  }    \n}\r\n        \nThis uses window.getComputedStyle()\n to fetch the style of each element, shifting it to the following element. Notice that before it begins doing so it saves a copy of the last box's style since it will be overwritten by the third element's style. By simply copying the values of the background-image\n property from one element to the next with each mouse click, we achieve the desired effect.\nWhat it looks like\nHere's what the display looks like when first loaded:\n\nAfter clicking it once:\n\nAfter the second click:\n\nAnd after the third click:\n\nAnother click rotates it back around to what it originally looked like.\n\nView the live example\n\nCSS\nThe CSS&nbsp;defines one container style, then the styles for the four boxes that comprise the complete image.\nThe container looks like this:\n\r\n          #container {\n  width:400px;\n  height:400px;\n  top:100px;\n  left:100px;\n  position:absolute;\n  font-size:16px;\n  text-shadow:white 0px 0px 6px;\n  text-align:center;\n}\r\n        \nThen the four boxes defining the segments of the image are defined. Let's look at them one at a time.\n\r\n          #box1 {\n  background-image: -moz-image-rect(url(firefox.jpg), 0%, 50%, 50%, 0%);\n  width:200px;\n  height:200px;\n  position:absolute;\n}\r\n        \nThis is the top-left corner of the image. It defines a rectangle containing the top-left quarter of the image in the file firefox.jpg.\n\r\n          #box2 {\n  background-image: -moz-image-rect(url(firefox.jpg), 0%, 100%, 50%, 50%);\n  width:200px;\n  height:200px;\n  position:absolute;\n}\r\n        \nThis defines the top-right corner of the image.\nThe other corners follow a similar pattern:\n\r\n          #box3 {\n  background-image: -moz-image-rect(url(firefox.jpg), 50%, 50%, 100%, 0%);\n  width:200px;\n  height:200px;\n  position:absolute;\n}\n#box4 {\n  background-image: -moz-image-rect(url(firefox.jpg), 50%, 100%, 100%, 50%);\n  width:200px;\n  height:200px;\n  position:absolute;\n}\r\n        \nHTML\nThe HTML&nbsp;is quite simple:\n\r\n          &lt;div id=&quot;container&quot; onclick=&quot;rotate()&quot;&gt;\n  &lt;div id=&quot;box1&quot; style=&quot;left:0px;top:0px;&quot;&gt;Top left&lt;\/div&gt;\n  &lt;div id=&quot;box2&quot; style=&quot;left:200px;top:0px;&quot;&gt;Top right&lt;\/div&gt;\n  &lt;div id=&quot;box3&quot; style=&quot;left:0px;top:200px;&quot;&gt;Bottom left&lt;\/div&gt;\n  &lt;div id=&quot;box4&quot; style=&quot;left:200px;top:200px;&quot;&gt;Bottom right&lt;\/div&gt;\n&lt;\/div&gt;\r\n        \nThis places the four segments of our image in a two-by-two box grid. These four segments are all contained within a larger &lt;div&gt;\n&nbsp;block whose primary purpose is to receive click events and dispatch them to our JavaScript code.\nThe JavaScript code\nThis code handles the click event when the container receives a mouse click.\n\r\n          function rotate() {\n  var prevStyle = window.getComputedStyle(document.getElementById(&quot;box4&quot;), null).getPropertyValue(&quot;background-image&quot;);\n  \n  \/\/ Now that we've saved the last one, start rotating\n  \n  for (var i=1; i&lt;=4; i++) {\n    var curId = &quot;box&quot; + i;\n    \n    \/\/ Shift the background iamges\n    \n    var curStyle = window.getComputedStyle(document.getElementById(curId), null).getPropertyValue(&quot;background-image&quot;);\n    document.getElementById(curId).style.backgroundImage = prevStyle;\n    prevStyle = curStyle;\n  }    \n}\r\n        \nThis uses window.getComputedStyle()\n to fetch the style of each element, shifting it to the following element. Notice that before it begins doing so it saves a copy of the last box's style since it will be overwritten by the third element's style. By simply copying the values of the background-image\n property from one element to the next with each mouse click, we achieve the desired effect.\nWhat it looks like\nHere's what the display looks like when first loaded:\n\nAfter clicking it once:\n\nAfter the second click:\n\nAnd after the third click:\n\nAnother click rotates it back around to what it originally looked like.\n\nView the live example\n\nBugs\n \n\nWebKit bug 32177\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/-moz-calc","title":"calc","description":"Summary\nThe calc() CSS function can be used anywhere a \n&lt;length&gt;\n is required. With calc(), you can perform calculations to determine the size and shape of objects.\nSyntax\n &lt;a_css_property&gt;: -vendor-calc(expression)\n\nValues\n expression A&nbsp;mathematical expression, the result of which is used as the \n&lt;length&gt;\n.\n\nExpressions\nThe expression can be any simple expression combining the following operators:\n + Addition - Subtraction * Multiplication \/ Division. You can't divide by a length; instead, this is used to, for example, say that you want your resulting length to be a given fraction of an existing length. mod \nUnimplemented\n Modulo; this returns the remainder left over after dividing two values.\n\nThe operands in the expression may be any length syntax value. You can use different units for each value in your expression, if you wish. You may also use parentheses to establish computation order when needed.\nNote: Division by zero results in an error being generated by the HTML&nbsp;parser.\nNote: operators should always be surrounded by whitespaces. The operand of calc(50 -8px) for instance will be parsed as a percentage followed by a negative length, an invalid expression, while the operand of calc(50% - 8px) is a percentage followed by a minus sign and a length.\n\n\nExamples\nPositioning an object on screen with a margin\ncalc() makes it easy to position an object with a set margin. In this example, the CSS creates a banner that stretches across the window, with a 40-pixel gap between both sides of the banner and the edges of the window:\n\r\n          .banner {\n  position:absolute;\n  left: 40px;\n  width: -moz-calc(100% - 80px);\n  width: -webkit-calc(100% - 80px);\n  width: calc(100% - 80px);\n  border: solid black 1px;\n  box-shadow: 1px 2px;\n  background-color: yellow;\n  padding: 6px;\n  text-align: center;\n}\r\n        \n\nView the live example\n\nAutomatically sizing form fields to fit their container\nAnother use case for calc() is to help ensure that form fields fit in the available space, without extruding past the edge of their container, while maintaining an appropriate margin.\nLet's look at some CSS:\n\r\n          input {\n  padding: 2px;\n  display: block;\n  width: -moz-calc(100% - 1em);\n  width: -webkit-calc(100% - 1em);\n  width: calc(100% - 1em);\n}\n\n#formbox {\n  width: -moz-calc(100%\/6);\n  width: -webkit-calc(100%\/6);\n  width: calc(100%\/6);\n  border: 1px solid black;\n  padding: 4px;\n}\r\n        \nHere, the form itself is established to use 1\/6 of the available window width. Then, to ensure that input fields retain an appropriate size, we use calc() again to establish that they should be the width of their container minus 1em. Then, the following HTML&nbsp;makes use of this CSS:\n\r\n          &lt;form&gt;\n  &lt;div id=&quot;formbox&quot;&gt;\n  &lt;label&gt;Type something:&lt;\/label&gt;\n  &lt;input type=&quot;text&quot;&gt;\n  &lt;\/div&gt;\n&lt;\/form&gt;\r\n        \n\nView the live example\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support - (crbug.com\/69487) 4.0 (2)\n 9 - - (\n\nWebKit bug 16662)   Method  -webkit-calc() \n-webkit  -moz-calc() \n-moz calc() -  -webkit-calc \n-webkit    \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?   \n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n &nbsp;  \n\nPositioning an object on screen with a margin\ncalc() makes it easy to position an object with a set margin. In this example, the CSS creates a banner that stretches across the window, with a 40-pixel gap between both sides of the banner and the edges of the window:\n\r\n          .banner {\n  position:absolute;\n  left: 40px;\n  width: -moz-calc(100% - 80px);\n  width: -webkit-calc(100% - 80px);\n  width: calc(100% - 80px);\n  border: solid black 1px;\n  box-shadow: 1px 2px;\n  background-color: yellow;\n  padding: 6px;\n  text-align: center;\n}\r\n        \n\nView the live example\n\nAutomatically sizing form fields to fit their container\nAnother use case for calc() is to help ensure that form fields fit in the available space, without extruding past the edge of their container, while maintaining an appropriate margin.\nLet's look at some CSS:\n\r\n          input {\n  padding: 2px;\n  display: block;\n  width: -moz-calc(100% - 1em);\n  width: -webkit-calc(100% - 1em);\n  width: calc(100% - 1em);\n}\n\n#formbox {\n  width: -moz-calc(100%\/6);\n  width: -webkit-calc(100%\/6);\n  width: calc(100%\/6);\n  border: 1px solid black;\n  padding: 4px;\n}\r\n        \nHere, the form itself is established to use 1\/6 of the available window width. Then, to ensure that input fields retain an appropriate size, we use calc() again to establish that they should be the width of their container minus 1em. Then, the following HTML&nbsp;makes use of this CSS:\n\r\n          &lt;form&gt;\n  &lt;div id=&quot;formbox&quot;&gt;\n  &lt;label&gt;Type something:&lt;\/label&gt;\n  &lt;input type=&quot;text&quot;&gt;\n  &lt;\/div&gt;\n&lt;\/form&gt;\r\n        \n\nView the live example\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support - (crbug.com\/69487) 4.0 (2)\n 9 - - (\n\nWebKit bug 16662)   Method  -webkit-calc() \n-webkit  -moz-calc() \n-moz calc() -  -webkit-calc \n-webkit    \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?   \n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support - (crbug.com\/69487) 4.0 (2)\n 9 - - (\n\nWebKit bug 16662)   Method  -webkit-calc() \n-webkit  -moz-calc() \n-moz calc() -  -webkit-calc \n-webkit    \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? (Supported) ? ? ?   \n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n &nbsp;  \n\nSpecifications\n   Specification Status Comment     CSS Values and Units Level 3 Working Draft\n &nbsp;  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-any","title":":any","description":"Summary\nThe :any() pseudo-class lets you quickly construct sets of similar selectors by establishing groups from which any of the included items will match. This is an alternative to having to repeat the entire selector for the one item that varies.\nNote : This pseudo-class is in progress to be standardized in CSS Selectors Level 4 under the name :matches(). It is likely that the syntax and name of :-vendor-any() will be changed to reflect it in the near future.\nSyntax\n:-moz-any( selector[, selector]* )\n:-webkit-any( selector[, selector]* )\nValues\n selector A selector. This may be a simple selector or a multiple selector comprised of CSS 3 simple selectors.\n\nNote: The selectors may not contain combinators or pseudo-elements.\nValues\n selector A selector. This may be a simple selector or a multiple selector comprised of CSS 3 simple selectors.\n\nNote: The selectors may not contain combinators or pseudo-elements.\nExamples\nFor example, the following CSS:\n\r\n          \/* 3 deep (or more) unordered lists use a square *\/\nol ol ul,     ol ul ul,     ol menu ul,     ol dir ul,\nol ol menu,   ol ul menu,   ol menu menu,   ol dir menu,\nol ol dir,    ol ul dir,    ol menu dir,    ol dir dir,\nul ol ul,     ul ul ul,     ul menu ul,     ul dir ul,\nul ol menu,   ul ul menu,   ul menu menu,   ul dir menu,\nul ol dir,    ul ul dir,    ul menu dir,    ul dir dir,\nmenu ol ul,   menu ul ul,   menu menu ul,   menu dir ul,\nmenu ol menu, menu ul menu, menu menu menu, menu dir menu,\nmenu ol dir,  menu ul dir,  menu menu dir,  menu dir dir,\ndir ol ul,    dir ul ul,    dir menu ul,    dir dir ul,\ndir ol menu,  dir ul menu,  dir menu menu,  dir dir menu,\ndir ol dir,   dir ul dir,   dir menu dir,   dir dir dir {\n  list-style-type: square;\n}\r\n        \nCan be replaced with:\n\r\n          \/* 3 deep (or more) unordered lists use a square *\/\n:-moz-any(ol, ul, menu, dir) :-moz-any(ol, ul, menu, dir) ul,\n:-moz-any(ol, ul, menu, dir) :-moz-any(ol, ul, menu, dir) menu,\n:-moz-any(ol, ul, menu, dir) :-moz-any(ol, ul, menu, dir) dir {\n  list-style-type: square;\n}\r\n        \nNotes\nThis is particularly useful when dealing with HTML5 sections and headings. Since &lt;section&gt;\n, &lt;article&gt;\n, &lt;aside&gt;\n, and &lt;nav&gt;\n&nbsp;can be nested, without :any(), styling these to match one another can be tricky.\nFor example, without :any(), styling all the &lt;h1&gt;\n elements at different depths could be very complicated:\n\r\n          \/* Level 0 *\/\nh1 {\n  font-size: 30px;\n}\n\/* Level 1 *\/\nsection h1, article h1, aside h1, nav h1 {\n  font-size: 25px;\n}\n\/* Level 2 *\/\nsection section h1, section article h1, section aside h1, section nav h1,\narticle section h1, article article h1, article aside h1, article nav h1,\naside section h1, aside article h1, aside aside h1, aside nav h1,\nnav section h1, nav article h1, nav aside h1, nav nav h1, {\n  font-size: 20px;\n}\n\/* Level 3 *\/\n\/* ... don't even think about it*\/\r\n        \nUsing :-any(), though, it's much easier:\n\r\n          \/* Level 0 *\/\nh1 {\n  font-size: 30px;\n}\n\/* Level 1 *\/\n:-moz-any(section, article, aside, nav) h1 {\n  font-size: 25px;\n}\n\/* Level 2 *\/\n:-moz-any(section, article, aside, nav)\n:-moz-any(section, article, aside, nav) h1 {\n  font-size: 20px;\n}\n\/* Level 3 *\/\n:-moz-any(section, article, aside, nav)\n:-moz-any(section, article, aside, nav)\n:-moz-any(section, article, aside, nav) h1 {\n  font-size: 15px;\n}\r\n        \nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 4.0 (2)\n\n-moz 12.0 (534.30)\n-webkit &nbsp; &nbsp; \nNightly build \n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-broken","title":":-moz-broken","description":"Summary\n:-moz-broken matches elements representing broken image links.\nThis selector is intended for use mainly by theme developers.\nBugzilla\n\n\nbug 11011\n\nSee also\n -moz-alt-content\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-drag-over","title":":-moz-drag-over","description":"Summary\nThe :-moz-drag-over pseudo-class is used to edit an element when a drag-over event is called on it. Syntax \nelement:-moz-drag-over { style properties }\n\n Examples \n\ntd:-moz-drag-over { color:red; }\n\n...where...\n\n\n&lt;table border=&quot;1&quot;&gt;\n  &lt;tr&gt;\n    &lt;td width=&quot;100px&quot; height=&quot;100px&quot;&gt;Drag Over&lt;\/td&gt;\n  &lt;\/tr&gt;\n&lt;\/table&gt;\n\n...result...\n...\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-first-node","title":":-moz-first-node","description":"Summary\nThe :-moz-first-node pseudo-class represents any element that is the first child node of some other element. It differs from :first-child\n because it does not match a first child element with (non-whitespace) text before it. Syntax \nspan:-moz-first-node { style properties }\n\n\n\n Examples \n\nspan:-moz-first-node\n{\n    background-color: lime;\n}\n\n...where...\n\n\n&lt;div&gt;\n  &lt;span&gt;:-moz-first-node&lt;\/span&gt;\n  &lt;span&gt;:-moz-last-node&lt;\/span&gt;\n&lt;\/div&gt;\n\n Notes \nAny white space at the start of an element is ignored for the determination of :-moz-first-node.\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-focusring","title":":-moz-focusring","description":"Summary\n:-moz-focusring is specified on an element if and only if it's currently focused and should have a focus ring drawn about it. The precise behavior may vary from platform to platform, depending on that platform's particular focus best practices.\nNote: Keep in mind that not all focused elements will have this pseudo-selector specified; it's only applied when the element is both focused and should render a focus indicator.\nSyntax\n\n:-moz-focusring\nExample\nTo specify the appearance of an element when it's focused, you can use this pseudo-selector like this:\n\r\n          mybutton:-moz-focusring {\n  outline: 2px dotted;\n}\r\n        \nSee also\n \n\nbug 418521\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-full-screen","title":":-moz-full-screen","description":"Summary\nThe :-moz-full-screen CSS pseudo-class applies to any element that's currently being displayed in full-screen mode. See Using full-screen mode for details.\nExamples\nNeeds example.\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support (Supported)\n-webkit 9.0 (9.0)\n\n-moz ? ? (Supported)\n-webkit   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? 9.0 (9.0)\n ? ? ?   \n\nSpecification\nThough not yet part of any formal specification, the Mozilla proposal has been discussed at the WhatWG and other vendors started to implement it, with their own prefix.See also\n Using full-screen mode element.mozRequestFullScreen()\n document.mozCancelFullScreen()\n document.mozFullScreen\n document.mozFullScreenElement\n document.mozFullScreenEnabled\n \n\nmozallowfullscreen\n :-moz-full-screen-ancestor\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-handler-blocked","title":":-moz-handler-blocked","description":"Summary\n:-moz-handler-blocked matches elements that cannot be displayed because their handlers have been blocked.\nThis is primarily useful for theme developers.\nSee also\n :-moz-handler-crashed\n :-moz-handler-disabled\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-handler-crashed","title":":-moz-handler-crashed","description":"Summary\n:-moz-handler-crashed matches elements that cannot be displayed because the plugin responsible for drawing them has crashed.\nThis is primarily useful for theme developers.\nSee also\n :-moz-handler-blocked\n :-moz-handler-disabled\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-handler-disabled","title":":-moz-handler-disabled","description":"Summary\n:-moz-handler-disabled matches elements that cannot be displayed because their handlers have been disabled by the user.\nThis is primarily useful for theme developers.\nSee also\n :-moz-handler-blocked\n :-moz-handler-crashed\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-last-node","title":":-moz-last-node","description":"Summary\nThe :-moz-last-node pseudo-class matches an element that is the last child node of some other element. It differs from :last-child\n because it does not match a last child element with (non-whitespace) text after it. Syntax \nspan:-moz-last-node { style properties }\n\n Examples \n\nspan:-moz-last-node\n{\n    background-color: lime;\n}\n\n...where...\n\n\n&lt;div&gt;\n  &lt;span&gt;:-moz-first-node&lt;\/span&gt;\n  &lt;span&gt;:-moz-last-node&lt;\/span&gt;\n&lt;\/div&gt;\n\n Notes \nAny white space at the end of an element is ignored for the determination of :-moz-last-node.\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-list-bullet","title":"::-moz-list-bullet","description":"Summary\nThe ::-moz-list-bullet pseudo-class is used to edit the bullet of a list element.\nSyntax\nli::-moz-list-bullet { style properties }\n\nExamples\n.liste li::-moz-list-bullet{ font-size:36px }\n\n...where...\n&lt;ul&gt;\n&lt;li&gt;Number 1&lt;\/li&gt;\n&lt;li&gt;Number 2&lt;\/li&gt;\n&lt;li&gt;Number 3&lt;\/li&gt;\n&lt;\/ul&gt;\n&lt;ul class=&quot;liste&quot;&gt;\n&lt;li&gt;Number 1&lt;\/li&gt;\n&lt;li&gt;Number 2&lt;\/li&gt;\n&lt;li&gt;Number 3&lt;\/li&gt;\n&lt;\/ul&gt;\n\n...result...\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-list-number","title":":-moz-list-number","description":"Summary\nThe ::-moz-list-number pseudo-class lets you customize the appearance of numbers on list items (&lt;li&gt;\n) occurring in ordered lists (&lt;ol&gt;\n).\nSyntax\n\nli::-moz-list-number { style properties }\n\nExamples\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n    li::-moz-list-number {\n      font-style: italic;\n      font-weight: bold;\n    }\n  &lt;\/style&gt;\n\n  &lt;ol&gt;\n    &lt;li&gt;First item&lt;\/li&gt;\n    &lt;li&gt;Second item&lt;\/li&gt;\n    &lt;li&gt;Third item&lt;\/li&gt;\n  &lt;\/ol&gt;\r\n        \nGives the following result:\n\n\nView the live example\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-loading","title":":-moz-loading","description":"Summary\n:-moz-loading matches elements none of which can be displayed because they have not started loading, such as images that haven't started to arrive yet.&nbsp; Note that images that are in the process of loading are not matched by this pseudo-class.\nThis is primarily useful for theme developers."},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-locale-dir(ltr)","title":":-moz-locale-dir(ltr)","description":"Summary\n:-moz-locale-dir(ltr) matches an element if the user interface is being displayed left-to-right. This is determined by the preference intl.uidirection.locale (where locale is the current locale) being set to &quot;ltr&quot;.\nThis allows extensions (and themes) to easily adapt their user interface based on the user's locale's needs. This can vary from window to window, and even from tab to tab. This also allows extensions to work even if they don't support the user's default locale, since they can support both left-to-right and right-to-left layouts without worrying about the locale specifics.\nThis selector does not work properly from HTML; it always matches, no matter whether the UI&nbsp;locale is left-to-right or right-to-left.\nSee also\n :-moz-locale-dir(rtl)\n\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-locale-dir(rtl)","title":":-moz-locale-dir(rtl)","description":"Summary\n:-moz-locale-dir(rtl) matches an element if the user interface is being displayed right-to-left. This is determined by the preference intl.uidirection.locale (where locale is the current locale) being set to &quot;rtl&quot;.\nThis allows extensions (and themes) to easily adapt their user interface based on the user's locale's needs. This can vary from window to window, and even from tab to tab. This also allows extensions to work even if they don't support the user's default locale, since they can support both left-to-right and right-to-left layouts without worrying about the locale specifics.\nThis selector does not work properly from HTML; it never matches, no matter whether the UI&nbsp;locale is left-to-right or right-to-left.\nSee also\n :-moz-locale-dir(ltr)\n Making sure your theme works with RTL&nbsp;locales\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-lwtheme","title":":-moz-lwtheme","description":"Summary\nThe :-moz-lwtheme pseudo-class matches in chrome documents when the root element's lightweightthemes\n attribute is true and a theme is selected.See also\n :-moz-lwtheme-darktext\n :-moz-lwtheme-brighttext\n Lightweight themes\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-lwtheme-brighttext","title":":-moz-lwtheme-brighttext","description":"Summary\nThe :-moz-lwtheme-brighttext pseudo-class matches in chrome documents when :-moz-lwtheme\n&nbsp;is true and a lightweight theme with a bright text color is selected.See also\n :-moz-lwtheme\n :-moz-lwtheme-darktext\n Lightweight themes\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-lwtheme-darktext","title":":-moz-lwtheme-darktext","description":"Summary\nThe :-moz-lwtheme-darktext pseudo-class matches in chrome documents when :-moz-lwtheme\n&nbsp;is true and a lightweight theme with a dark text color is selected.See also\n :-moz-lwtheme\n :-moz-lwtheme-brighttext\n Lightweight themes\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-only-whitespace","title":":-moz-only-whitespace","description":" Summary \nThe :-moz-only-whitespace pseudo-class matches an element that has no child nodes at all or empty text nodes or text nodes that have only white-space in them. Only when there are element nodes or text nodes with one or more characters inside the element, the element doesn't match this pseudo-class anymore.\n\n Syntax \nspan:-moz-only-whitespace { style properties }\n\n Examples \n\nspan:-moz-only-whitespace::before\n{\n    background-color: lime;\n}\n\n...where...\n\n\n  &lt;span&gt; &lt;\/span&gt;\n\n Notes \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-placeholder","title":":-moz-placeholder","description":"Summary\nThe :-moz-placeholder pseudo-class represents any form element displaying placeholder text. This allows web developers and theme designers to customize the appearance of placeholder text, which is a light grey color by default. This may not work well if you've changed the background color of your form fields to be a similar color, for example, so you can use this pseudo-class to change the placeholder text color.Example\nThis example styles the placeholder text by making it green.\n\r\n          &lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Placeholder demo&lt;\/title&gt;\n  &lt;style type=&quot;text\/css&quot;&gt;\n    input:-moz-placeholder {\n      color: green;\n    }\n  &lt;\/style&gt;\n&lt;\/head&gt;\n&lt;body&gt;\n  &lt;input id=&quot;test&quot; placeholder=&quot;Placeholder text!&quot;&gt;\n&lt;\/body&gt;\n&lt;\/html&gt;\r\n        \nView this example live.\nBugzilla\n\n\nbug 457801\n\nNotes\nNote: This was previously incorrectly documented as having been created for Gecko 1.9 (Firefox 3)\n, for an entirely different purpose.\n\nSee also\n Forms in HTML5 &lt;input&gt;\n &lt;textarea&gt;\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-suppressed","title":":-moz-suppressed","description":"Summary\n:-moz-suppressed matches elements representing images that were not loaded because loading images from that site has been blocked.\nThis selector is intended for use mainly by theme developers."},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(mac-graphite-theme)","title":":-moz-system-metric(mac-graphite-theme)","description":"Summary\n:-moz-system-metric(mac-graphite-theme) will match an element if the user has chosen the &quot;Graphite&quot; appearance in the &quot;Appearance&quot; prefpane of the Mac OS X System Preferences.\nThis selector is intended for use mainly by theme developers.\nExamples\nDemo\nBugzilla\n\n\nbug 448767\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(images-in-menus)","title":":-moz-system-metric(images-in-menus)","description":" Summary \n:-moz-system-metric(images-in-menus) will match an element if the computer's user interface supports images in menus.\nThis selector is intended for use mainly by theme developers.\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-submit-invalid","title":":-moz-submit-invalid","description":"Summary\nThe :-moz-submit-invalid CSS pseudo-class represents any submit button on forms whose contents aren't valid based on their validation constraints.\nBy default, no style is applied. You can use this style to customize the appearance of the submit button when there are invalid form fields.Browser compatibility\n   Browser Lowest version   Internet Explorer ---   Firefox (Gecko) 4.0&nbsp;(2.0)   Opera ?   Safari (WebKit) ?  \n\nSee also\n :valid\n :invalid\n :required\n :optional\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(scrollbar-end-backward)","title":":-moz-system-metric(scrollbar-end-backward)","description":" Summary \n:-moz-system-metric(scrollbar-end-backward) will match an element if the computer's user interface includes a backward arrow button at the end of scrollbars.\nThis selector is intended for use mainly by theme developers.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(scrollbar-end-forward)","title":":-moz-system-metric(scrollbar-end-forward)","description":" Summary \n:-moz-system-metric(scrollbar-end-forward) will match an element if the computer's user interface includes a forward arrow button at the end of scrollbars.\nThis selector is intended for use mainly by theme developers.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(scrollbar-start-forward)","title":":-moz-system-metric(scrollbar-start-forward)","description":" Summary \n:-moz-system-metric(scrollbar-start-foreward) will match an element if the computer's user interface includes a forward arrow button at the start of scrollbars.\nThis selector is intended for use mainly by theme developers.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(scrollbar-start-backward)","title":":-moz-system-metric(scrollbar-start-backward)","description":"Summary\n:-moz-system-metric(scrollbar-start-backward) will match an element if the computer's user interface includes a backward arrow button at the start of scrollbars.\nThis selector is intended for use mainly by theme developers."},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(scrollbar-thumb-proportional)","title":":-moz-system-metric(scrollbar-thumb-proportional)","description":" Summary \n:-moz-system-metric(scrollbar-thumb-proportional) will match an element if the computer's user interface uses proportional scrollbar thumbs; that is, the draggable thumb on the scrollbar resizes to indicate the relative size of the visible area of the document.\nThis selector is intended for use mainly by theme developers.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(touch-enabled)","title":":-moz-system-metric(touch-enabled)","description":"Summary\n:-moz-system-metric(touch-enabled) will match an element if the device on which the content is being rendered offers a supported touch-screen interface.\nNote: This is not intended for use in web content. Use the -moz-touch-enabled media query instead."},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-system-metric(windows-default-theme)","title":":-moz-system-metric(windows-default-theme)","description":" Summary \n:-moz-system-metric(windows-default-theme) will match an element if the user is currently using one of the following themes in Windows: Luna, Royale, Zune, or Aero (i.e., Vista Basic, Vista Standard, or Aero Glass). This will exclude Windows Classic themes as well as third-party themes.\nThis selector is intended for use mainly by theme developers.\n\n Examples \nDemo\n\n Bugzilla \n\n\nbug 426660\n\n\n\nbug 429176\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-cell-text(hover)","title":":-moz-tree-cell-text(hover)","description":"Summary\n:-moz-tree-cell-text(hover) will match an element if the mouse cursor is presently hovering over text in a tree cell.\nThis selector is intended for use mainly by theme developers.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-cell-text","title":":-moz-tree-cell-text","description":"Associated Elements\n treecell\n\nStyle Properties\n font visibility color text-decoration\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-cell","title":":-moz-tree-cell","description":"Associated Elements\n treecell\n\nStyle Properties\n background border margin outline padding visibility\n\nSee also\n Styling a Tree\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-column","title":":-moz-tree-column","description":"Associated Elements\n treecol\n\nStyle Properties\n margin visibility text style\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-drop-feedback","title":":-moz-tree-drop-feedback","description":"Associated Elements\n treerow\n\nStyle Properties\n margin visibility\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-image","title":":-moz-tree-image","description":"Associated Elements\n treeitem treecell\n\nStyle Properties\n margin list style position\n\nExamples\nBookmark icons in the Places window - Mozillazine Forum\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-indentation","title":":-moz-tree-indentation","description":"Associated Elements\n treeitem\n\nStyle Properties\n position\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-progressmeter","title":":-moz-tree-progressmeter","description":"Associated Elements\n treecell\n\nStyle Properties\n margin color\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-line","title":":-moz-tree-line","description":"Associated Elements\n treeitem\n\nStyle Properties\n border visibility\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-row","title":":-moz-tree-row","description":"Summary\n-moz-tree-row is used to select rows and apply style to tree rows.\nAssociated Elements\n treerow\n\nAssociated Elements\n treerow\n\nSyntax\n\ntreechildren::-moz-tree-row { style properties }\n\nStyle Properties\n background border margin outline padding display -moz-appearance\n\nStyle Properties\n background border margin outline padding display -moz-appearance\n\nExamples\n\ntreechildren::-moz-tree-row( foo bar )\n{\n    margin: 2%;\n}\n\n...where...\n\n  &lt;treerow properties=&quot;foo&quot;&gt;...&lt;\/treerow&gt;\n\nNotes\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-row(hover)","title":":-moz-tree-row(hover)","description":" Summary \n:-moz-tree-row(hover) will match an element if the mouse cursor is presently hovering over a tree row.\nThis selector is intended for use mainly by theme developers.\n\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-twisty","title":":-moz-tree-twisty","description":"Associated Elements\n treecell\n\nStyle Properties\n border margin padding display list style position -moz-appearance\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-tree-separator","title":":-moz-tree-separator","description":"Associated Elements\n treeseparator\n\nStyle Properties\n border display -moz-appearance\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-ui-valid","title":":-moz-ui-valid","description":"Summary\nThe :-moz-ui-valid CSS pseudo-class represents any validated form element whose value validates correctly based on its validation constraints.\nThis pseudo-class is applied according to the following rules:\n If the control does not have focus, and the value is valid, apply this pseudo-class. If the control has focus, and the value was valid (including empty) when it gained focus, apply this pseudo-class. If the control has focus, and the value was invalid when it gained focus, re-validate on every keystroke. If the element is required, the preceding rules apply only if the user has changed the value or attempted to submit the form.\n\nThe result is that if the control was valid when the user started interacting with it, the validity styling is changed only when the user shifts focus to another control. However, if the user is trying to correct a previously-flagged value, the control shows immediately when the value becomes valid. Required items are flagged as invalid only if the user changes them or attempts to submit an unchanged invalid value.Browser compatibility\n   Browser Lowest version   Internet Explorer ---   Firefox (Gecko) 4.0&nbsp;(2.0)   Opera ?   Safari (WebKit) ?  \n\nSee also\n :valid\n :invalid\n :required\n :optional\n :-moz-ui-invalid\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-ui-invalid","title":":-moz-ui-invalid","description":"Summary\nThe :-moz-ui-invalid CSS pseudo-class represents any validated form element whose value isn't valid based on their validation constraints, in certain circumstances. This pseudo-class is applied according to the following rules:\n If the control does not have focus, and the value is invalid, apply this pseudo-class. If the control has focus, and the value was valid (including empty) when it gained focus, do not apply the pseudo-class. If the control has focus, and the value was invalid when it gained focus, re-validate on every keystroke. If the element is required, the preceding rules apply only if the user has changed the value or attempted to submit the form.\n\nThe result is that if the control was valid when the user started interacting with it, the validity styling is changed only when the user shifts focus to another control. However, if the user is trying to correct a previously-flagged value, the control shows immediately when the value becomes valid. Required items have the pseudo-class applied only if the user changes them or attempts to submit an unchanged valid value.\nBy default, Gecko applies a style that creates a red &quot;glow&quot; (using the box-shadow\n property) around items with that have this pseudo-class applied. See the :invalid\n pseudo-class for an example that shows how to override the default style.Browser compatibility\n   Browser Lowest version   Internet Explorer ---   Firefox (Gecko) 4.0&nbsp;(2.0)   Opera ?   Safari (WebKit) ?  \n\nSee also\n :valid\n :invalid\n :required\n :optional\n :-moz-ui-valid\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-user-disabled","title":":-moz-user-disabled","description":"Summary\n:-moz-user-disabled matches elements representing images that were not loaded because images have been entirely disabled by the user's preferences.\nThis selector is intended for use mainly by theme developers."},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/%3A-moz-window-inactive","title":":-moz-window-inactive","description":"Summary\nThe :-moz-window-inactive pseudo-class matches any element while it's in an inactive window.\nNote: Prior to the addition of this attribute, giving different styles to background windows was achieved by setting an attribute (active=&quot;true&quot;) on the top level XUL chrome window. This attribute is no longer used.\n:-moz-window-inactive works in content HTML documents, too.\nExample\nThis example alters the appearance of a box's background depending on whether its window is active or not.\n\r\n          &lt;style type=&quot;text\/css&quot;&gt;\n    #mybox {\n      background: -moz-linear-gradient(top, blue, cyan);\n    }\n    #mybox:-moz-window-inactive {\n      background: cyan;\n    }\n  &lt;\/style&gt;\n\n  &lt;div id=&quot;mybox&quot; style=&quot;width:200px; height:200px;&quot;&gt;\n    &lt;p&gt;This is a box!&lt;\/p&gt;\n  &lt;\/div&gt;\r\n        \nYou can view this as a live sample here.\nThis was implemented in bug 508482."},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/@-moz-document","title":"@-moz-document","description":"Summary\nThe @-moz-document rule is a Gecko-specific at-rule that restricts the style rules contained within it based on the URL of the document. It is designed primarily for user style sheets. A @-moz-document rule can specify one or more matching functions. If any of the functions apply to a URL, the rule will take effect on that URL.\nThe functions available are:\n url(), which matches an exact URL url-prefix(), which matches if the document URL starts with the value provided domain(), which matches if the document URL is on the domain provided (or a subdomain of it) regexp(), which matches if the document URL is matched by the regular expression provided. The expression must match the entire URL.\n\n \nGecko 6.0 note(Firefox 6.0 \/ Thunderbird 6.0 \/ SeaMonkey 2.3)\n\n Support for the regexp()function was added in Gecko 6.0 (Firefox 6.0 \/ Thunderbird 6.0 \/ SeaMonkey 2.3)\n.\n\nSyntax\nThe values provided to the url(), url-prefix(), and domain() functions can optionally be enclosed by single or double quotes. The values provided to the regexp() function must be enclosed in quotes.\nEscaped values provided to the regexp() function must additionally escaped from the CSS. For example, a . (period) matches any character in regular expressions. To match a literal period, you would first need to escape it using regular expression rules (to \\.), then escape that string using CSS rules (to \\\\.).\nExamples\nYou can put this into your userContent.css file:\n\r\n          @-moz-document url(http:\/\/www.w3.org\/),\n               url-prefix(http:\/\/www.w3.org\/Style\/),\n               domain(mozilla.org),\n               regexp(&quot;^https:.*&quot;)\n{\n  \/* CSS rules here apply to:\n     + The page &quot;http:\/\/www.w3.org\/&quot;.\n     + Any page whose URL begins with &quot;http:\/\/www.w3.org\/Style\/&quot;\n     + Any page whose URL's host is &quot;mozilla.org&quot; or ends with\n       &quot;.mozilla.org&quot;\n     + Any page whose URL starts with &quot;https:&quot; *\/\n\n  \/* make the above-mentioned pages really ugly *\/\n  body { color: purple; background: yellow; }\n}\r\n        \nSpecifications\n Per-site user style sheet rules. Not part of any W3C specification. CSS Conditional Rules Module Level 3\n\nBrowser compatibility\nAvailable since Mozilla 1.8 \/ Firefox 1.5.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Multiple_backgrounds","title":"Multiple backgrounds","description":"Example\nIn this example, three backgrounds are stacked: the Firefox logo, a linear gradient, and an image with flowers:\n\r\n          .multi_bg_example {\n  background: url(http:\/\/demos.hacks.mozilla.org\/openweb\/resources\/images\/logos\/firefox-48.png),\n        -moz-linear-gradient(left, rgba(255, 255, 255, 0),  rgba(255, 255, 255, 1)),\n        url(http:\/\/demos.hacks.mozilla.org\/openweb\/resources\/images\/patterns\/flowers-pattern.jpg);\n  background-repeat: no-repeat, no-repeat, repeat;\n  background-position: bottom right, left, right;\n}\r\n        \n   Screen Shot Live Demonstration    &nbsp;  \n\nAs you can see here, the Firefox logo (listed first)&nbsp;is on top, followed by the gradient, which is layered atop the flowered background. Each subsequent sub-property (background-repeat\n and background-position\n) applies to the corresponding backgrounds. So the first listed value for background-repeat\n applies to the first (frontmost) background, and so forth.See also\n background\n, background-attachment\n, background-clip\n, background-color\n, background-image\n, background-origin\n, background-position\n, background-repeat\n, background-size\n Using gradients\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Scaling_of_SVG_backgrounds","title":"Scaling of SVG backgrounds","description":"The algorithm, in summary\nThe algorithm can for the most part be summarized by these four rules. There are some edge cases that aren't covered by these rules, but this covers the majority of cases.\n If background-size\n specifies a fixed dimension (that is, percentages and relative units are fixed by their context), that dimension wins. If the image has an intrinsic ratio (that is, its width:height ratio is constant, such as 16:9, 4:3, 2.39:1, 1:1, and so forth), the rendered size preserves that ratio. If the image specifies a size, and the size isn't modified by constrain or cover, that specified size wins. If none of the above cases are met, the image is rendered at the same size as the background area.\n\nIt's worth noting that the sizing algorithm only cares about the image's dimensions and proportions, or lack thereof. An SVG image with fixed dimensions will be treated just like a raster image of the same size.\nSource image examples\nBefore diving in to look at the results of using different kinds of source images and seeing how they look when used with background-size\n, it would be helpful to look at a few example source images that have different dimensions and sizing settings.\nIn each case, we show what the source image looks like rendered in a 150x150 box, and provide a link to the SVG source.\nDimensionless and proportionless\nThis image is both dimensionless and proportionless. It doesn't care what size it is, nor does it care about remaining at a particular aspect ratio. This would make a good gradient desktop background that would work regardless of your screen size and its aspect ratio.\n\nSVG source\nOne specified dimension and proportionless\nThis image specifies a width of 100 pixels but no height or intrinsic ratio. This is, basically, a thin strip of wallpaper that could be stretched across the entire height of a block.\n\nSVG source\nOne specified dimension with intrinsic ratio\nThis image specifies a 100 pixel height but no width. It also specifies an intrinsic aspect ratio of 3:4. This ensures that its width:height ratio is always 3:4, unless it's deliberately scaled to a disproportionate size (that is, by explicitly specifying both width and height that aren't of that ratio).\nThis is very much like specifying a specific width and height, since once you have one dimension and a ratio, the other dimension is implied, but it's still a useful example.\n\nSVG source\nNo width or height with intrinsic ratio\nThis image doesn't specify either a width or a height; instead, it specifies an intrinsic ratio of 1:1. Think of this like a program icon. It's always square, and is usable at any size, such as 32x32, 128x128, or 512x512, for example.\n\nSVG source\nDimensionless and proportionless\nThis image is both dimensionless and proportionless. It doesn't care what size it is, nor does it care about remaining at a particular aspect ratio. This would make a good gradient desktop background that would work regardless of your screen size and its aspect ratio.\n\nSVG source\nOne specified dimension and proportionless\nThis image specifies a width of 100 pixels but no height or intrinsic ratio. This is, basically, a thin strip of wallpaper that could be stretched across the entire height of a block.\n\nSVG source\nOne specified dimension with intrinsic ratio\nThis image specifies a 100 pixel height but no width. It also specifies an intrinsic aspect ratio of 3:4. This ensures that its width:height ratio is always 3:4, unless it's deliberately scaled to a disproportionate size (that is, by explicitly specifying both width and height that aren't of that ratio).\nThis is very much like specifying a specific width and height, since once you have one dimension and a ratio, the other dimension is implied, but it's still a useful example.\n\nSVG source\nNo width or height with intrinsic ratio\nThis image doesn't specify either a width or a height; instead, it specifies an intrinsic ratio of 1:1. Think of this like a program icon. It's always square, and is usable at any size, such as 32x32, 128x128, or 512x512, for example.\n\nSVG source\nScaling examples\nNow let's see some examples of what happens as we apply different scaling to these images. In each of the examples below, the enclosing rectangles are 300 pixels wide and 300 pixels tall. In addition, the backgrounds have background-repeat\n set to no-repeat for clarity.\nNote: The screenshots below show the expected rendering. Not all browsers currently render these correctly.\nSpecifying fixed lengths for both dimensions\nIf you use background-size\n to specify fixed lengths for both dimensions, those lengths are always used, per rule 1 above. In other words, the image will always get stretched to the dimensions you specify, regardless of whether or not the source image has specified its dimensions and\/or aspect ratio.\nSource: No dimensions or intrinsic ratio\nGiven this CSS:\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: 125px 175px;\n\nThe rendered output would look like this:\n\nSource: One specified dimension, no intrinsic ratio\nGiven this CSS:\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: 250px 150px;\n\nThe rendered output would look like this:\n\nSource: One specified dimension with intrinsic ratio\nGiven this CSS:\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: 275px 125px;\n\nThe rendered output would look like this:\n\nSource: No specified width or height with intrinsic ratio\nGiven this CSS:\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: 250px 100px;\n\nThe rendered output would look like this:\n\nUsing contain or cover\nSpecifying cover for background-size\n makes the picture as small as possible while still covering the entire background area. contain, on the other hand, makes the image as large as possible while not being clipped by the background area.\nFor an image with an intrinsic ratio, exactly one size matches the cover\/fit criteria alone. But if there is no intrinsic ratio specified, cover\/fit isn't sufficient, so the large\/small constraints choose the resulting size.\nSource: No dimensions or intrinsic ratio\nIf an image doesn't specify either dimensions or an intrinsic ratio, neither rule 2 nor rule 3 apply, so rule 4 takes over: the background image is rendered covering the entire background area. This satisfies the largest-or-smallest constraint.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nSource: One specified dimension, no intrinsic ratio\nSimilarly, if the image has one dimension specified but no intrinsic ratio, rule 4 applies, and the image is scaled to cover the entire background area.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nSource: One specified dimension with intrinsic ratio\nThings change when you specify an intrinsic ratio. In this case, rule 1 isn't relevant, so rule 2 is applied: we try to preserve any intrinsic ratio (while respecting contain or cover). For example, preserving a 3:4 intrinsic aspect ratio for a 300x200 box with contain means drawing a 150x200 background.\ncontain case\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nNotice how the entire image is rendered, fitting as best as possible into the box without clipping any of it away.\ncover case\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: cover;\n\nThe rendered output looks like this:\n\nHere, the 3:4 ratio is preserved while still stretching the image to fill the entire box. That causes the bottom of the image to be clipped away.\nSource: No dimensions with intrinsic ratio\nWhen using an image with no intrinsic dimensions but an intrinsic ratio, things work similarly.\ncontain case\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nNotice that the image is sized to fit the smallest dimension while preserving the 1:1 aspect ratio.\ncover case\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: cover;\n\nThe rendered output looks like this:\n\nHere, the image is sized so that it fills the largest dimension. The 1:1 aspect ratio has been preserved, although with this source image, that can be difficult to see.\nAutomatic sizing using &quot;auto&quot; for both dimensions\nIf background-size\n is set to auto or auto auto, rule 2 says that rendering must preserve any intrinsic ratio that's provided.\nSource: No dimensions or intrinsic ratio\nWhen no intrinsic ratio or dimensions are specified by the source image, rule 4 takes effect, and the image is rendered to fill the background area.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nSource: One dimension and no intrinsic ratio\nIf no intrinsic ratio is specified, but at least one dimension is specified, rule 3 takes effect, and we render the image obeying those dimensions.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nNote here that the width, which is specified in the source SVG at 100 pixels, is obeyed, while the height fills the background area since it's not specified (either explicitly or by an intrinsic ratio).\nSource: One dimension and an intrinsic ratio\nIf we have an intrinsic ratio with a fixed dimension, that fixes both dimensions in place. Knowing one dimension and a ratio is, as has been mentioned already, the same as specifying both dimensions explicitly.\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nSince this image has an explicit 100 pixel height, the 3:4 ratio explicitly sets its width at 75 pixels, so that's how it's rendered in the auto case.\nSource: No fixed dimensions with intrinsic ratio\nWhen an intrinsic ratio is specified, but no dimensions, rule 4 is applied -- except that rule 2 also applies. The image is therefore rendered just like for the contain case.\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nUsing &quot;auto&quot; and one specific length\nGiven rule 1, specified dimensions are always used, so we need to use our rules only to determine the second dimension.\nSource: No dimensions or intrinsic ratio\nIf the image has no dimensions or intrinsic ratio, rule 4 applies, and we use the background area's dimension to determine the value for the auto dimension.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: auto 150px;\n\n\nHere, the width is determined using the background area's width per rule 4, while the height is the 140px specified in the CSS.\nSource: One specified dimension with no intrinsic ratio\nIf the image has one specified dimension but no intrinsic ratio, that specified dimension is used per rule 3 if that dimension is set to auto in the CSS.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: 200px auto;\n\n\nHere, the 200px specified in the CSS overrides the 100px width specified in the SVG, per rule 1. Since there's no intrinsic ratio or height provided, auto selects the height of the background area as the height for the rendered image.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: auto 125px;\n\n\nIn this case, the width is specified as auto in the CSS, so the 100px width specified in the SVG is selected, per rule 3. The height is set at 125px in the CSS, so that is selected per rule 1.\nSource: One specified dimension with intrinsic ratio\nWhen a dimension is specified, rule 1 applies that dimension from the SVG to the rendered background unless specifically overridden by the CSS. When an intrinsic ratio is also specified, that's used to determine the other dimension.\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: 150px auto;\n\n\nIn this case, we've overridden the height of the image in the CSS to be 150px, so rule 1 is applied. The intrinsic 3:4 aspect ratio then determines the width for the auto case.\nSource: No specified dimensions with intrinsic ratio\nIf no dimensions are specified in the SVG, the specified dimension in the CSS is applied, then the intrinsic ratio is used to select the other dimension, per rule 2.\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: 150px auto;\n\n\nThe width is set by the CSS to 150px. The auto value for the height is computed using that width and the 1:1 aspect ratio to be 150px as well, resulting in the image above.\nSpecifying fixed lengths for both dimensions\nIf you use background-size\n to specify fixed lengths for both dimensions, those lengths are always used, per rule 1 above. In other words, the image will always get stretched to the dimensions you specify, regardless of whether or not the source image has specified its dimensions and\/or aspect ratio.\nSource: No dimensions or intrinsic ratio\nGiven this CSS:\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: 125px 175px;\n\nThe rendered output would look like this:\n\nSource: One specified dimension, no intrinsic ratio\nGiven this CSS:\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: 250px 150px;\n\nThe rendered output would look like this:\n\nSource: One specified dimension with intrinsic ratio\nGiven this CSS:\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: 275px 125px;\n\nThe rendered output would look like this:\n\nSource: No specified width or height with intrinsic ratio\nGiven this CSS:\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: 250px 100px;\n\nThe rendered output would look like this:\n\nSource: No dimensions or intrinsic ratio\nGiven this CSS:\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: 125px 175px;\n\nThe rendered output would look like this:\n\nSource: One specified dimension, no intrinsic ratio\nGiven this CSS:\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: 250px 150px;\n\nThe rendered output would look like this:\n\nSource: One specified dimension with intrinsic ratio\nGiven this CSS:\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: 275px 125px;\n\nThe rendered output would look like this:\n\nSource: No specified width or height with intrinsic ratio\nGiven this CSS:\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: 250px 100px;\n\nThe rendered output would look like this:\n\nUsing contain or cover\nSpecifying cover for background-size\n makes the picture as small as possible while still covering the entire background area. contain, on the other hand, makes the image as large as possible while not being clipped by the background area.\nFor an image with an intrinsic ratio, exactly one size matches the cover\/fit criteria alone. But if there is no intrinsic ratio specified, cover\/fit isn't sufficient, so the large\/small constraints choose the resulting size.\nSource: No dimensions or intrinsic ratio\nIf an image doesn't specify either dimensions or an intrinsic ratio, neither rule 2 nor rule 3 apply, so rule 4 takes over: the background image is rendered covering the entire background area. This satisfies the largest-or-smallest constraint.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nSource: One specified dimension, no intrinsic ratio\nSimilarly, if the image has one dimension specified but no intrinsic ratio, rule 4 applies, and the image is scaled to cover the entire background area.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nSource: One specified dimension with intrinsic ratio\nThings change when you specify an intrinsic ratio. In this case, rule 1 isn't relevant, so rule 2 is applied: we try to preserve any intrinsic ratio (while respecting contain or cover). For example, preserving a 3:4 intrinsic aspect ratio for a 300x200 box with contain means drawing a 150x200 background.\ncontain case\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nNotice how the entire image is rendered, fitting as best as possible into the box without clipping any of it away.\ncover case\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: cover;\n\nThe rendered output looks like this:\n\nHere, the 3:4 ratio is preserved while still stretching the image to fill the entire box. That causes the bottom of the image to be clipped away.\nSource: No dimensions with intrinsic ratio\nWhen using an image with no intrinsic dimensions but an intrinsic ratio, things work similarly.\ncontain case\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nNotice that the image is sized to fit the smallest dimension while preserving the 1:1 aspect ratio.\ncover case\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: cover;\n\nThe rendered output looks like this:\n\nHere, the image is sized so that it fills the largest dimension. The 1:1 aspect ratio has been preserved, although with this source image, that can be difficult to see.\nSource: No dimensions or intrinsic ratio\nIf an image doesn't specify either dimensions or an intrinsic ratio, neither rule 2 nor rule 3 apply, so rule 4 takes over: the background image is rendered covering the entire background area. This satisfies the largest-or-smallest constraint.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nSource: One specified dimension, no intrinsic ratio\nSimilarly, if the image has one dimension specified but no intrinsic ratio, rule 4 applies, and the image is scaled to cover the entire background area.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nSource: One specified dimension with intrinsic ratio\nThings change when you specify an intrinsic ratio. In this case, rule 1 isn't relevant, so rule 2 is applied: we try to preserve any intrinsic ratio (while respecting contain or cover). For example, preserving a 3:4 intrinsic aspect ratio for a 300x200 box with contain means drawing a 150x200 background.\ncontain case\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nNotice how the entire image is rendered, fitting as best as possible into the box without clipping any of it away.\ncover case\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: cover;\n\nThe rendered output looks like this:\n\nHere, the 3:4 ratio is preserved while still stretching the image to fill the entire box. That causes the bottom of the image to be clipped away.\ncontain case\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nNotice how the entire image is rendered, fitting as best as possible into the box without clipping any of it away.\ncover case\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: cover;\n\nThe rendered output looks like this:\n\nHere, the 3:4 ratio is preserved while still stretching the image to fill the entire box. That causes the bottom of the image to be clipped away.\nSource: No dimensions with intrinsic ratio\nWhen using an image with no intrinsic dimensions but an intrinsic ratio, things work similarly.\ncontain case\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nNotice that the image is sized to fit the smallest dimension while preserving the 1:1 aspect ratio.\ncover case\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: cover;\n\nThe rendered output looks like this:\n\nHere, the image is sized so that it fills the largest dimension. The 1:1 aspect ratio has been preserved, although with this source image, that can be difficult to see.\ncontain case\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: contain;\n\nThe rendered output looks like this:\n\nNotice that the image is sized to fit the smallest dimension while preserving the 1:1 aspect ratio.\ncover case\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: cover;\n\nThe rendered output looks like this:\n\nHere, the image is sized so that it fills the largest dimension. The 1:1 aspect ratio has been preserved, although with this source image, that can be difficult to see.\nAutomatic sizing using &quot;auto&quot; for both dimensions\nIf background-size\n is set to auto or auto auto, rule 2 says that rendering must preserve any intrinsic ratio that's provided.\nSource: No dimensions or intrinsic ratio\nWhen no intrinsic ratio or dimensions are specified by the source image, rule 4 takes effect, and the image is rendered to fill the background area.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nSource: One dimension and no intrinsic ratio\nIf no intrinsic ratio is specified, but at least one dimension is specified, rule 3 takes effect, and we render the image obeying those dimensions.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nNote here that the width, which is specified in the source SVG at 100 pixels, is obeyed, while the height fills the background area since it's not specified (either explicitly or by an intrinsic ratio).\nSource: One dimension and an intrinsic ratio\nIf we have an intrinsic ratio with a fixed dimension, that fixes both dimensions in place. Knowing one dimension and a ratio is, as has been mentioned already, the same as specifying both dimensions explicitly.\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nSince this image has an explicit 100 pixel height, the 3:4 ratio explicitly sets its width at 75 pixels, so that's how it's rendered in the auto case.\nSource: No fixed dimensions with intrinsic ratio\nWhen an intrinsic ratio is specified, but no dimensions, rule 4 is applied -- except that rule 2 also applies. The image is therefore rendered just like for the contain case.\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nSource: No dimensions or intrinsic ratio\nWhen no intrinsic ratio or dimensions are specified by the source image, rule 4 takes effect, and the image is rendered to fill the background area.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nSource: One dimension and no intrinsic ratio\nIf no intrinsic ratio is specified, but at least one dimension is specified, rule 3 takes effect, and we render the image obeying those dimensions.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nNote here that the width, which is specified in the source SVG at 100 pixels, is obeyed, while the height fills the background area since it's not specified (either explicitly or by an intrinsic ratio).\nSource: One dimension and an intrinsic ratio\nIf we have an intrinsic ratio with a fixed dimension, that fixes both dimensions in place. Knowing one dimension and a ratio is, as has been mentioned already, the same as specifying both dimensions explicitly.\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nSince this image has an explicit 100 pixel height, the 3:4 ratio explicitly sets its width at 75 pixels, so that's how it's rendered in the auto case.\nSource: No fixed dimensions with intrinsic ratio\nWhen an intrinsic ratio is specified, but no dimensions, rule 4 is applied -- except that rule 2 also applies. The image is therefore rendered just like for the contain case.\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: auto auto;\n\nThe rendered output looks like this:\n\nUsing &quot;auto&quot; and one specific length\nGiven rule 1, specified dimensions are always used, so we need to use our rules only to determine the second dimension.\nSource: No dimensions or intrinsic ratio\nIf the image has no dimensions or intrinsic ratio, rule 4 applies, and we use the background area's dimension to determine the value for the auto dimension.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: auto 150px;\n\n\nHere, the width is determined using the background area's width per rule 4, while the height is the 140px specified in the CSS.\nSource: One specified dimension with no intrinsic ratio\nIf the image has one specified dimension but no intrinsic ratio, that specified dimension is used per rule 3 if that dimension is set to auto in the CSS.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: 200px auto;\n\n\nHere, the 200px specified in the CSS overrides the 100px width specified in the SVG, per rule 1. Since there's no intrinsic ratio or height provided, auto selects the height of the background area as the height for the rendered image.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: auto 125px;\n\n\nIn this case, the width is specified as auto in the CSS, so the 100px width specified in the SVG is selected, per rule 3. The height is set at 125px in the CSS, so that is selected per rule 1.\nSource: One specified dimension with intrinsic ratio\nWhen a dimension is specified, rule 1 applies that dimension from the SVG to the rendered background unless specifically overridden by the CSS. When an intrinsic ratio is also specified, that's used to determine the other dimension.\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: 150px auto;\n\n\nIn this case, we've overridden the height of the image in the CSS to be 150px, so rule 1 is applied. The intrinsic 3:4 aspect ratio then determines the width for the auto case.\nSource: No specified dimensions with intrinsic ratio\nIf no dimensions are specified in the SVG, the specified dimension in the CSS is applied, then the intrinsic ratio is used to select the other dimension, per rule 2.\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: 150px auto;\n\n\nThe width is set by the CSS to 150px. The auto value for the height is computed using that width and the 1:1 aspect ratio to be 150px as well, resulting in the image above.\nSource: No dimensions or intrinsic ratio\nIf the image has no dimensions or intrinsic ratio, rule 4 applies, and we use the background area's dimension to determine the value for the auto dimension.\nbackground: url(no-dimensions-or-ratio.svg);\nbackground-size: auto 150px;\n\n\nHere, the width is determined using the background area's width per rule 4, while the height is the 140px specified in the CSS.\nSource: One specified dimension with no intrinsic ratio\nIf the image has one specified dimension but no intrinsic ratio, that specified dimension is used per rule 3 if that dimension is set to auto in the CSS.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: 200px auto;\n\n\nHere, the 200px specified in the CSS overrides the 100px width specified in the SVG, per rule 1. Since there's no intrinsic ratio or height provided, auto selects the height of the background area as the height for the rendered image.\nbackground: url(100px-wide-no-height-or-ratio.svg);\nbackground-size: auto 125px;\n\n\nIn this case, the width is specified as auto in the CSS, so the 100px width specified in the SVG is selected, per rule 3. The height is set at 125px in the CSS, so that is selected per rule 1.\nSource: One specified dimension with intrinsic ratio\nWhen a dimension is specified, rule 1 applies that dimension from the SVG to the rendered background unless specifically overridden by the CSS. When an intrinsic ratio is also specified, that's used to determine the other dimension.\nbackground: url(100px-height-3x4-ratio.svg);\nbackground-size: 150px auto;\n\n\nIn this case, we've overridden the height of the image in the CSS to be 150px, so rule 1 is applied. The intrinsic 3:4 aspect ratio then determines the width for the auto case.\nSource: No specified dimensions with intrinsic ratio\nIf no dimensions are specified in the SVG, the specified dimension in the CSS is applied, then the intrinsic ratio is used to select the other dimension, per rule 2.\nbackground: url(no-dimensions-1x1-ratio.svg);\nbackground-size: 150px auto;\n\n\nThe width is set by the CSS to 150px. The auto value for the height is computed using that width and the 1:1 aspect ratio to be 150px as well, resulting in the image above.\nSee also\n background-size\n Blog post: Properly resizing vector image backgrounds\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Using_URL_values_for_the_cursor_property","title":"Using URL values for the cursor property","description":"Syntax\nThe basic (CSS 2.1) syntax for this property is:\n\ncursor:  [&lt;url&gt;,]* keyword\nThis means that zero or more URLs may be specified (comma-separated), which must be followed by one of the keywords defined in the CSS specification, such as auto or pointer.\nFor example, the following value would be allowed:\n\ncursor:  url(foo.cur), url(http:\/\/www.example.com\/bar.gif), auto;\nThis will first try loading foo.cur. If that file does not exist or is not valid for some other reason, bar.gif is tried, and if that can't be used either, auto will be used.\nSupport for the CSS 3 syntax for cursor values got added in Gecko 1.8 (Firefox 1.5):\n\ncursor:  [&lt;uri&gt; [&lt;x&gt; &lt;y&gt;]?,]* keyword\nIt allows specifying the coordinates of the cursor's hotspot, which will be clamped to the boundaries of the cursor image. If none are specified, the coordinates of the hotspot are read from the file itself (for CUR and XBM files) or are set to the top left corner of the image. An example of the CSS3 syntax is:\n\n.foo  {\n    cursor:  auto;\n    cursor:  url(cursor1.png) 4 12;\n}\n\n.bar  {\n    cursor:  pointer;\n    cursor:  url(cursor2.png) 2 2;\n} \n\n\/* fallsback onto 'auto' and 'pointer' in IE, but must be set seperately *\/\n\nThe first number is the x-coordinate, and the second number is the y-coordinate. The example will set the hotspot to be the pixel at (4,12) from the top left (0,0).\nLimitations\nAll image formats supported by Gecko can be used. This means that you can use PNG, GIF, JPG, BMP, CUR etc. images. ANI is not supported. An animated GIF will not create an animated cursor.\n \nGecko 2.0 note(Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n\n Starting with Gecko 2.0 (Firefox 4 \/ Thunderbird 3.3 \/ SeaMonkey 2.1)\n, Gecko also supports the SVG&nbsp;image format for cursors. However, the SVG image must contain a length-valued (not percentage-valued) height and width on its root SVG node.\n\nIn Gecko (Firefox) the limit of the cursor size is 128&times;128px. Larger cursor images are ignored. However, you should limit yourself to the size 32&times;32 for maximum compatibility with operating systems and platforms.\n(Due to a bug in Gecko 1.9.2-1.9.2.6, Firefox 3.6-3.6.6 on Windows limits to 32x32px. This is fixed in later versions)\nTranslucent cursors are not supported on Windows releases earlier than XP. This is a limitation of the operating system. Transparency works on all platforms.\nURL values as cursors are supported in Windows, OS\/2, and Linux (when using GTK+ 2.4 or better) releases of Mozilla.&nbsp; Mac OS&nbsp; support was added with Gecko 2 (Firefox 4) .\nCompatibility with other browsers\nMicrosoft Internet Explorer 6.0 also supports URI values for the cursor property. However:\n IE only supports CUR and ANI as formats. IE doesn't support the CSS 3 syntax with x- and y-coordinates. The cursor image, and the rest of the property, are ignored.\n\n   Browser Lowest version formats (e.g.) x-y-coordinates   Internet Explorer 6.0 .cur | .ani ---   Firefox (Gecko), Windows and Linux 1.5 (1.8) .cur | .png | .gif | .jpg 1.5 (1.8)   Firefox (Gecko) 4.0 (2.0) .cur | .png | .gif | .jpg | .svg  (Gecko 2.0)   Opera --- --- ---   Safari (Webkit) 3.0 (522-523) .cur | .png | .gif | .jpg 3.0 (522-523)   Since OS X 10.5 supports Safari (Mac) .cur files  \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/bleed","title":"bleed","description":"Summary\nThis property specifies the extent of the page bleed area outside the page box. This property only has effect if crop marks are enabled.\n Initial value\n: 6pt Applies to: page context Inherited\n: no Percentages: refer to width of page box Media: visual\n  Computed value\n: as specified value\n\nSyntax\n\nbleed : &lt;length&gt;\n\nValues\n \n&lt;length&gt;\n  The amount of page bleed outside the page box.\n\nExamples\n\n\n\n&nbsp;\nSpecifications\n CSS Generated Content for Paged Media Module\n\nBrowser compatibility\n   Browser Lowest version   Internet Explorer &nbsp;   Firefox (Gecko) &nbsp;   Opera &nbsp;   Safari (WebKit) &nbsp;  \n\nSee also\n marks\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/repeating-linear-gradient","title":"repeating-linear-gradient","description":"Syntax\nrepeating-linear-gradient( [ [ &lt;angle&gt; | to &lt;side-or-corner&gt; ,]? &lt;color-stop&gt; [, &lt;color-stop&gt;]+ )\n\nVendor prefixes: See the compatibility table below for detail on the vendor prefixes you'll need to use for gradients.\nWhere:\n &lt;color-stop&gt;  &lt;color&gt;\n [ &lt;percentage&gt;\n | \n&lt;length&gt;\n ] \n\nValues\n &lt;side-or-corner&gt; Represents the position of the starting-point of the gradient line. It consists of two keywords: the first one indicates the horizontal side, left or right, and the second one the vertical side, top or bottom. The order is not relevant and each of the keyword is optional. The values to top, to bottom, to left and to right are translated into the angles 0deg, 180deg, 270deg, 90deg respectively. The others are translated into an angle that let the starting-point to be in the same quadrant than the described corner and so that the line defined by the starting-point and the corner is perpendicular to the gradient line. That way, the color described by the &lt;color-stop&gt; will exactly apply to the corner point. This is sometimes called the &quot;magic corner&quot; property. The end-point of the gradient line is the symmetrical point of the starting-point on the other direction of the center box. &lt;angle&gt; An angle of direction for the gradient. See &lt;angle&gt;\n. &lt;color-stop&gt; This value is comprised of a &lt;color&gt;\n value, followed by an optional stop position (either a percentage between 0% and 100% or a \n&lt;length&gt;\n along the gradient axis). Rendering of color-stops in CSS gradients follows the same rules as color-stops in SVG gradients.\n\nExample\nbackground: repeating-linear-gradient(to bottom right, red, red 5px, white 5px, white 10px);\n\nSpecifications\n   Specification Status Comment     CSS Image Value and Replaced Content Module Level 3 Working Draft\n &nbsp;  \n\nBrowser compatibility\n   Feature Firefox (Gecko) Chrome Internet Explorer Opera Safari   Basic support 3.6 (1.9.2)\n\n-moz \n\nbug 479220\n [3] 10.0 (534.16)\n-webkit [3] 10.0 \n-ms[1] 11.10\n-o [3] 5.1\n-webkit[3]   Legacy from syntax (without to) Non-standard      3.6 (1.9.2)\n\n-moz [2] 10.0 (534.16)\n-webkit 10.0 \n-ms [1] 11.10\n-o 5.1\n-webkit   to syntax  10.0 (10)\n\n-moz \n\nbug 685400\n [2]  -- -- -- --  \n\n[1] Internet Explorer 5.5 through 8.0 supports proprietary filter: progid:DXImageTransform.Microsoft.Gradient() filter.\n[2] Firefox 3.6 implemented, prefixed, an early syntax where the starting corner or side was indicated without the to keyword, and effectively considered as a from position. The to syntax has been added in Firefox 10, without removing the deprecated syntax and translation between the two is trivial:\n-moz-repeating-linear-gradient(to top left, blue, red);\n\nis the same as:\n\n-moz-repating-linear-gradient(bottom right, blue, red);\n\nThe legacy syntax, without to, is planned to go away when the prefix will be removed.\n&nbsp;\n[3] Gecko, Opera &amp; Webkit considers &lt;angle&gt;\n to start to the right, instead of the top. I.e. it considered an angle of 0deg as a direction indicator pointing to the right. This is different from the latest specification where an angle of 0deg as a direction indicator points to the top. [2] [3]\nSee also\n Using CSS gradients, radial-gradient()\n, repeating-linear-gradient()\n, repeating-radial-gradient()\n; Some properties where it can be used: background-image\n, background\n; The now obsolete WebKit's original proposal.\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/repeating-radial-gradient","title":"repeating-radial-gradient","description":"Syntax\n-moz-repeating-radial-gradient( [&lt;position&gt; || &lt;angle&gt;,]? [&lt;shape&gt; ||&nbsp;&lt;size&gt;,]? &lt;stop&gt;, &lt;stop&gt;[, &lt;stop&gt;]* )\n\nValues\n &lt;position&gt; A position, interpreted in the same way as background-position\n or -moz-transform-origin\n. If omitted, the default is center. &lt;angle&gt; An angle establishing the gradient line, which extends from the starting point at this angle; this is 0deg by default. &lt;shape&gt; The gradient's shape. This is one of circle (meaning that the gradient's shape is a circle with constant radius) or ellipse (meaning that the shape is an axis-aligned ellipse). The default value is ellipse. &lt;size&gt; The size of the gradient. This is one of the Size constants listed below. &lt;stop&gt; This value is comprised of a &lt;color&gt;\n value, followed by an optional stop position (either a percentage between 0% and 100% or a \n&lt;length&gt;\n along the gradient axis). Rendering of color-stops in CSS gradients follows the same rules as color-stops in SVG gradients.\n\nSize constants\n   Constant Description   closest-side  The gradient's shape meets the side of the box closest to its center (for circles) or meets both the vertical and horizontal sides closest to the center (for ellipses).   closest-corner The gradient's shape is sized so it exactly meets the closest corner of the box from its center.   farthest-side Similar to closest-side, except the shape is sized to meet the side of the box farthest from its center (or vertical and horizontal sides).   farthest-corner  The gradient's shape is sized so it exactly meets the farthest corner of the box from its center.   contain  A synonym for closest-side.   cover  A synonym for farthest-corner.  \n\nUsage\nRadial gradients also run along an axis. At each end point of the axis, a radius is specified. This can be imagined as creating two &quot;circles&quot;, where for each circle the center is specified by the point and the radius is specified by the radius length. The gradient runs outwards from the circumference of the inner circle to the circumference of the outer circle.\nbackground: -moz-repeating-radial-gradient(black, black 5px, white 5px, white 10px);\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari (WebKit)   Basic support 10 -webkit-repeating-radial-gradient() 3.6 (1.9.2) -moz-repeating-radial-gradient() 5.5 (including 8.0) filter: progid:DXImageTransform.Microsoft.Gradient()  12 [1] -o-repeating-radial-gradient()  Nightly build (534.16) -webkit-repeating-radial-gradient()   \n\n    Feature Android Firefox Mobile (Gecko) IE&nbsp;Phone Opera Mobile Safari Mobile   Basic support ? ? ? ? ?   \n\nSee also\n Using gradients repeating-linear-gradient\n -moz-radial-gradient\n background-image\n background\n WebKit's original proposal: http:\/\/webkit.org\/blog\/175\/introducing-css-gradients\/ Bug: \n\nbug 479220\n W3C&nbsp;Proposal for Radial Gradients: http:\/\/dev.w3.org\/csswg\/css3-images\/#radial-gradients W3C Proposal for Background&nbsp;Position:&nbsp;http:\/\/www.w3.org\/TR\/css3-background\/#the-background-position MSDN library, gradient filter (reference doc) Safari: CSS3 Gradients (blog post)\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/General_sibling_selectors","title":"General sibling selectors","description":"Summary\nThe ~ combinator separates two selectors and matches the second element only if it is preceded by the first, and both share a common parent.\nSyntax\nelement ~ element { style properties }\n\nExamples\n\r\n          p ~ span {\n  color: red;\n}\r\n        \n...where...\n\r\n          &lt;p&gt;Here is a paragraph.&lt;\/p&gt;\n&lt;code&gt;Here is some code.&lt;\/code&gt;\n&lt;span&gt;And here is a span.&lt;\/span&gt;\r\n        \n... should look like ...\nHere is a paragraph\nHere is some code.And here is a span.\nSpecifications\n CSS 3 Selectors\n\nSee Also\nAdjacent sibling selectors\n\nNotes\n&nbsp;"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Privacy_and_the_%3Avisited_selector","title":"Privacy and the :visited selector","description":"Little white lies\nThe first change is that Gecko will lie to web applications under certain circumstances. In particular, getComputedStyle() and similar functions such as element.querySelector()\n always return values indicating that a user has never visited any of the links on a page.\nAlso, if you use a sibling connector such as :visited +&nbsp;span, the &lt;span&gt;\n will be styled as if the link were unvisited.\nAnd, in a rare scenario, if you're using nested link elements and the element being matched is different from the link whose presence in history is being tested, the element is drawn as if the link were unvisited as well.\nLimits to visited link styles\nYou will still be able to visually style visited links, but there are now limits on what styles you can use. Only the following properties can be applied to visited links:\n color\n background-color\n border-color\n (and its sub-properties) outline-color\n The color parts of the fill and stroke properties\n\nIn addition, even for the properties you can set for visited links, you won't be able to change the transparency between unvisited and visited links, as you otherwise would be able to using rgba() or hsla()&nbsp;color values or the transparent keyword.\nImpact on web developers\nOverall, this shouldn't affect web developers too significantly. There are, however, a few special cases that may require changes to sites:\n Using background images to style links and indicate whether or not they've been visited will no longer work, since only colors can be used to style visited links. CSS&nbsp;transitions won't be supported for visited links. Fortunately, CSS transitions are very new, and there are few sites using them at this point, so this isn't likely to impact many people at this point.\n\nSee also\n privacy-related changes coming to CSS :visited on Mozilla Hacks Plugging the CSS&nbsp;History Leak on the Mozilla Security Blog Preventing attacks on a user's history through CSS :visited selectors \n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Media","title":"Media","description":"Information: Media\nThe purpose of CSS is to specify how documents are presented to the user. Presentation can take more than one form.\nFor example, you are probably reading this page on a display device. But you might also want to project it on a screen for a large audience, or print it. These different media can have different characteristics. CSS provides ways to present a document differently in different media.\nTo specify rules that are specific to a type of media, use @media\n followed by the media type, followed by curly braces that enclose the rules.\n Example    A document on a web site has a navigation area to allow the user to move around the site. In the markup language, the navigation area's parent element has the id nav-area. (In \nHTML5, this can be marked up with the &lt;nav&gt;\n element instead of &lt;div&gt;\n with an id attribute.) When the document is printed the navigation area has no purpose, so the stylesheet removes it completely:  \n@media print {\n  #nav-area {display: none;}\n  }\n    \n\nSome of the common media types are:\n   screen Color computer display   print Paged media   projection Projected display   all All media (the default)  \n\n&nbsp;\n More details    There are other ways to specify the media type of a set of rules. The document's markup language might allow the media type to be specified when the stylesheet is linked to the document. For example, in HTML you can optionally specify the media type with a media attribute in the LINK tag. In CSS you can use @import\n at the start of a stylesheet to import another stylesheet from a URL, optionally specifying the media type. By using these techniques you can separate style rules for different media types into different files. This is sometimes a useful way to structure your stylesheets. For full details of media types, see Media in the CSS Specification. There are more examples of the display\n property in a later page in this tutorial: XML data.   \n\nPrinting\nCSS has some specific support for printing and for paged media in general.\nA @page\n rule can set the page margins. For double-sided printing, you can specify the margins separately for @page:left and @page:right.\nFor print media, you normally use appropriate length units like inches (in) and points (pt = 1\/72 inch), or centimeters (cm) and millimeters (mm). It is equally appropriate to use ems (em) to match the font size, and percentages ().\nYou can control how the content of the document breaks across page boundaries, by using the page-break-before\n, page-break-after\n and page-break-inside\n properties.\n Examples    This rule sets the page margins to one inch on all four sides:  \n@page {margin: 1in;}\n  This rule ensures that every H1 element starts on a new page:  \nh1 {page-break-before: always;}\n    \n\n&nbsp;\n More details    For full details of CSS support for paged media, see Paged media in the CSS Specification. Like other features of CSS, printing depends on your browser and its settings. For example, your Mozilla browser supplies default margins, headers and footers when it prints. When other users print your document, you probably cannot predict the browser and the settings that they will use, so you probably cannot control the results completely.   \n\nUser interfaces\nCSS has some special properties for devices that support a user interface, like computer displays. These make the document's appearance change dynamically as the user works with the interface.\nThere is no special media type for devices with user interfaces.\nThere are five special selectors:\n   Selector Selects   E:hover\n Any E element that has the pointer over it   E:focus\n Any E element that has keyboard focus   E:active\n The E element that is involved in the current user action   E:link\n Any E element that is a hyperlink to a URL that the user has not visited recently   E:visited\n Any E element that is a hyperlink to a URL that the user has visited recently  \n\n\nNote:&nbsp;The information that can be obtained from the :visited selector is restricted in Gecko&nbsp;2.0. See Privacy and the :visited selector for more details.\n\nThe cursor\n property specifies the shape of the pointer: Some of the common shapes are as follows. Place your mouse over the items in this list to see the actual pointer shapes in your browser:\n   Selector Selects   pointer Indicating a link   wait Indicating that the program cannot accept input   progress Indicating that the program is working, but can still accept input   default The default (usually an arrow)  \n\n\nAn outline\n property creates an outline that is often used to indicate keyboard focus. Its values are similar to the border\n property, except that you cannot specify individual sides.\nSome other features of user interfaces are implemented using attributes, in the normal way. For example, an element that is disabled or read-only has the disabled attribute or the readonly attribute. Selectors can specify these attributes like any other attributes, by using square brackets: [disabled] or [readonly].\n Example    These rules specify styles for a button that changes dynamically as the user interacts with it:  \n.green-button {\n  background-color:#cec;\n  color:#black;\n  border:2px outset #cec;\n  }\n\n.green-button[disabled] {\n  background-color:#cdc;\n  color:#777;\n  }\n\n.green-button:active {\n  border-style: inset;\n  }\n  This wiki does not support a user interface on the page, so these buttons do not &quot;click&quot;. Here are some static images to illustrate the idea:        Click&nbsp;Me Click&nbsp;Me Click&nbsp;Me   &nbsp;   disabled normal active        A fully functional button also has a dark outline around the entire button when it is the default, and a dotted outline on the face of the button when it has keyboard focus. It might also have a hover effect when the pointer is over it.   \n\n More details    For more information about user interfaces in CSS, see User interface in the CSS Specification. There is an example of Mozilla's markup language for user interfaces, XUL, in Part II of this tutorial.   \n\nPrinting\nCSS has some specific support for printing and for paged media in general.\nA @page\n rule can set the page margins. For double-sided printing, you can specify the margins separately for @page:left and @page:right.\nFor print media, you normally use appropriate length units like inches (in) and points (pt = 1\/72 inch), or centimeters (cm) and millimeters (mm). It is equally appropriate to use ems (em) to match the font size, and percentages ().\nYou can control how the content of the document breaks across page boundaries, by using the page-break-before\n, page-break-after\n and page-break-inside\n properties.\n Examples    This rule sets the page margins to one inch on all four sides:  \n@page {margin: 1in;}\n  This rule ensures that every H1 element starts on a new page:  \nh1 {page-break-before: always;}\n    \n\n&nbsp;\n More details    For full details of CSS support for paged media, see Paged media in the CSS Specification. Like other features of CSS, printing depends on your browser and its settings. For example, your Mozilla browser supplies default margins, headers and footers when it prints. When other users print your document, you probably cannot predict the browser and the settings that they will use, so you probably cannot control the results completely.   \n\nUser interfaces\nCSS has some special properties for devices that support a user interface, like computer displays. These make the document's appearance change dynamically as the user works with the interface.\nThere is no special media type for devices with user interfaces.\nThere are five special selectors:\n   Selector Selects   E:hover\n Any E element that has the pointer over it   E:focus\n Any E element that has keyboard focus   E:active\n The E element that is involved in the current user action   E:link\n Any E element that is a hyperlink to a URL that the user has not visited recently   E:visited\n Any E element that is a hyperlink to a URL that the user has visited recently  \n\n\nNote:&nbsp;The information that can be obtained from the :visited selector is restricted in Gecko&nbsp;2.0. See Privacy and the :visited selector for more details.\n\nThe cursor\n property specifies the shape of the pointer: Some of the common shapes are as follows. Place your mouse over the items in this list to see the actual pointer shapes in your browser:\n   Selector Selects   pointer Indicating a link   wait Indicating that the program cannot accept input   progress Indicating that the program is working, but can still accept input   default The default (usually an arrow)  \n\n\nAn outline\n property creates an outline that is often used to indicate keyboard focus. Its values are similar to the border\n property, except that you cannot specify individual sides.\nSome other features of user interfaces are implemented using attributes, in the normal way. For example, an element that is disabled or read-only has the disabled attribute or the readonly attribute. Selectors can specify these attributes like any other attributes, by using square brackets: [disabled] or [readonly].\n Example    These rules specify styles for a button that changes dynamically as the user interacts with it:  \n.green-button {\n  background-color:#cec;\n  color:#black;\n  border:2px outset #cec;\n  }\n\n.green-button[disabled] {\n  background-color:#cdc;\n  color:#777;\n  }\n\n.green-button:active {\n  border-style: inset;\n  }\n  This wiki does not support a user interface on the page, so these buttons do not &quot;click&quot;. Here are some static images to illustrate the idea:        Click&nbsp;Me Click&nbsp;Me Click&nbsp;Me   &nbsp;   disabled normal active        A fully functional button also has a dark outline around the entire button when it is the default, and a dotted outline on the face of the button when it has keyboard focus. It might also have a hover effect when the pointer is over it.   \n\n More details    For more information about user interfaces in CSS, see User interface in the CSS Specification. There is an example of Mozilla's markup language for user interfaces, XUL, in Part II of this tutorial.   \n\nAction: Printing a document\n Make a new HTML document, doc4.html. Copy and paste the content from here, making sure that you scroll to get all of it:  \n&lt;!DOCTYPE HTML PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.0\/\/EN&quot;&gt;\n&lt;HTML&gt;\n\n&lt;HEAD&gt;\n&lt;TITLE&gt;Print sample&lt;\/TITLE&gt;\n&lt;LINK rel=&quot;stylesheet&quot; type=&quot;text\/css&quot; href=&quot;style4.css&quot;&gt;&lt;\/strong&gt;\n&lt;\/HEAD&gt;\n\n&lt;BODY&gt;\n&lt;H1&gt;Section A&lt;\/H1&gt;\n&lt;P&gt;This is the first section...&lt;\/P&gt;\n\n&lt;H1&gt;Section B&lt;\/H1&gt;\n&lt;P&gt;This is the second section...&lt;\/P&gt;\n\n&lt;DIV id=&quot;print-head&quot;&gt;\nHeading for paged media\n&lt;\/DIV&gt;\n\n&lt;DIV id=&quot;print-foot&quot;&gt;\nPage:&nbsp;\n&lt;\/DIV&gt;\n\n&lt;\/BODY&gt;\n&lt;\/HTML&gt;\n   Make a new stylesheet, style4.css. Copy and paste the content from here, making sure that you scroll to get all of it:  \n\/*** Print sample ***\/\n\n\/* defaults  for screen *\/\n#print-head,\n#print-foot {\n  display: none;\n  }\n\n\/* print only *\/\n@media print {\n\nh1 {\n  page-break-before: always;\n  padding-top: 2em;\n  }\n\nh1:first-child {\n  page-break-before: avoid;\n  counter-reset: page;\n  }\n\n#print-head {\n  display: block;\n  position: fixed;\n  top: 0pt;\n  left:0pt;\n  right: 0pt;\n\n  font-size: 200%;\n  text-align: center;\n  }\n\n#print-foot {\n  display: block;\n  position: fixed;\n  bottom: 0pt;\n  right: 0pt;\n\n  font-size: 200%;\n  }\n\n#print-foot:after {\n  content: counter(page);\n  counter-increment: page;\n  }\n\n} \/* end print only *\/\n   View this document in your browser; it uses your browser's default style. Print (or print preview) the document; the stylesheet places each section on a separate page, and it adds a header and footer to each page. If your browser supports counters, it adds a page number in the footer.             Heading for paged media Section A This is the first section... Page: 1                   Heading for paged media Section B This is the second section... Page: 2             \n\n Challenges    Move the print-specific style rules to a separate CSS file. Read the @import\n reference page to find details of how to import the new print-specific CSS file into your style4.css stylesheet. Make the headings turn blue when the mouse pointer is over them.   \n\n&nbsp;See solutions to these challenges.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nSo far, all the style rules in this tutorial have been specified in files. The rules and their values are fixed. The next page describes how you can change rules dynamically by using a programming language: JavaScript\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Using_media_queries_from_code","title":"Using media queries from code","description":"Creating a media query list\nBefore you can evaluate the results of a query, you need to create the MediaQueryList\n object representing the media query. To do this, use the window.matchMedia\n&nbsp;method.\nFor example, if you want to set up a query list that determines whether the device is in landscape or portrait orientation, you can do so like this:\nvar mql = window.matchMedia(&quot;(orientation: portrait)&quot;);\n\nChecking the result of a query\nOnce your media query list has been created, you can check the result of the query by looking at the value of its matches property, which reflects the result of the query:\n\r\n          if (mql.matches) {\n  \/* The device is currently in portrait orientation *\/\n} else {\n  \/* The device is currently in landscape orientation *\/\n}\r\n        \nReceiving query notifications\nIf you need to be aware of changes to the evaluated result of the query on an ongoing basis, it's more efficient to register a listener than to poll the query's result. To do this, you can call the addListener()&nbsp;method on the MediaQueryList\n&nbsp;object, specifying an observer that implements the MediaQueryListListener\n&nbsp;interface:\n\r\n          var mql = window.matchMedia(&quot;(orientation: portrait)&quot;);\nmql.addListener(handleOrientationChange);\nhandleOrientationChange(mql);\r\n        \nThis code creates the orientation testing media query list, mql, then adds a listener to it. Note that after adding the listener, we actually invoke the listener directly once. This lets our listener perform initial adjustments based on the current device orientation (otherwise, if our code assumes the device is in portrait mode but it's actually in landscape mode at startup, we could have inconsistencies).\nThe handleOrientationChange()&nbsp;method we implement then would look at the result of the query and handle whatever we need to do on an orientation change:\n\r\n          function handleOrientationChange(mql) {\n  if (mql.matches) {\n    \/* The device is currently in portrait orientation *\/\n  } else {\n    \/* The device is currently in landscape orientation *\/\n  }\n}\r\n        \nEnding query notifications\nWhen you no longer need to receive notifications about changes to the value of your media query, you can simply call removeListener()&nbsp;on the MediaQueryList\n:\nmql.removeListener(handleOrientationChange);\n\nBrowser compatibility\n\n\n\n Desktop Mobile\n\n\n    Feature Chrome Firefox (Gecko) Internet Explorer Opera Safari   Basic support 9 6.0 (6.0)\n ? ? 5.1   \n\n    Feature Android Firefox Mobile (Gecko) IE Mobile Opera Mobile Safari Mobile   Basic support ? ? ? ? 5   \n\nSee also\n Media queries window.matchMedia()\n MediaQueryList\n MediaQueryListListener\n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Why_use_CSS","title":"Why use CSS","description":"Information: Why use CSS?\nCSS helps you to keep the information content of a document separate from the details of how to display it. The details of how to display the document are known as its style. You keep the style separate from the content so that you can:\n Avoid duplication Make maintenance easier Use the same content with different styles for different purposes\n\n Example   Your web site might have thousands of pages that look similar. Using CSS, you store the style information in common files that all the pages share. When a user displays a web page, the user's browser loads the style information along with the content of the page. When a user prints a web page, you provide different style information that makes the printed page easy to read.   \n\nIn general with CSS, you use the markup language to describe the information content of the document, not its style. You use CSS to specify its style, not its content. (Later in this tutorial, you will see some exceptions to this arrangement.)\n More details   A markup language like HTML also provides some ways to specify style. For example, in HTML you can use a &lt;b&gt; tag to make text bold, and you can specify the background color of a page in its &lt;body&gt; tag. When you use CSS, you normally avoid using these features of the markup language so that all your document's style information is in one place.   \n\nAction: Creating a stylesheet\n Create another text file in the same directory as before. This file will be your stylesheet. Name it: style1.css In your CSS file, copy and paste this one line, then save the file:  \nstrong {color: red;}\n  \n\nLinking your document to your stylesheet\n To link your document to your stylesheet, edit your HTML file. Add the line shown here in bold:  \n&lt;!DOCTYPE html PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.01\/\/EN&quot;\n&quot;http:\/\/www.w3.org\/TR\/html4\/strict.dtd&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text\/html; \ncharset=iso-8859-1&quot;&gt;\n  &lt;title&gt;Sample document&lt;\/title&gt;\n  &lt;link rel=&quot;stylesheet&quot; type=&quot;text\/css&quot; href=&quot;style1.css&quot;&gt;\n  &lt;\/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;\n      &lt;strong&gt;C&lt;\/strong&gt;ascading\n      &lt;strong&gt;S&lt;\/strong&gt;tyle\n      &lt;strong&gt;S&lt;\/strong&gt;heets\n    &lt;\/p&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\n   Save the file and refresh your browser's display. The stylesheet makes the initial letters red, like this:    Cascading Style Sheets    \n\n Challenge   In addition to red, CSS allows some other color names. Without looking up a reference, find five more color names that work in your stylesheet.   \n\nSee a solution for the challenge.\nLinking your document to your stylesheet\n To link your document to your stylesheet, edit your HTML file. Add the line shown here in bold:  \n&lt;!DOCTYPE html PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.01\/\/EN&quot;\n&quot;http:\/\/www.w3.org\/TR\/html4\/strict.dtd&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text\/html; \ncharset=iso-8859-1&quot;&gt;\n  &lt;title&gt;Sample document&lt;\/title&gt;\n  &lt;link rel=&quot;stylesheet&quot; type=&quot;text\/css&quot; href=&quot;style1.css&quot;&gt;\n  &lt;\/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;\n      &lt;strong&gt;C&lt;\/strong&gt;ascading\n      &lt;strong&gt;S&lt;\/strong&gt;tyle\n      &lt;strong&gt;S&lt;\/strong&gt;heets\n    &lt;\/p&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\n   Save the file and refresh your browser's display. The stylesheet makes the initial letters red, like this:    Cascading Style Sheets    \n\n Challenge   In addition to red, CSS allows some other color names. Without looking up a reference, find five more color names that work in your stylesheet.   \n\nSee a solution for the challenge.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nNow you have a sample document linked to a separate stylesheet, you are ready to learn more about how your browser combines them when it displays the document: How CSS works\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/What_is_CSS","title":"What is CSS","description":"Information: What is CSS?\nA dialog in a Mozilla application is a document. The user interface controls that you see in a Mozilla dialog are structured using the markup language XUL (XML User-interface Language). Action: Creating a document\n Use your computer to create a new directory and a new text file there. The file will contain your document. Copy and paste the HTML shown below. Save the file using the name doc1.html  \r\n          &lt;!DOCTYPE html PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.01\/\/EN&quot;\n&quot;http:\/\/www.w3.org\/TR\/html4\/strict.dtd&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text\/html;\n  charset=iso-8859-1&quot;&gt;\n  &lt;title&gt;Sample document&lt;\/title&gt;\n  &lt;\/head&gt;\n\n  &lt;body&gt;\n    &lt;p&gt;\n      &lt;strong&gt;C&lt;\/strong&gt;ascading\n      &lt;strong&gt;S&lt;\/strong&gt;tyle\n      &lt;strong&gt;S&lt;\/strong&gt;heets\n    &lt;\/p&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\r\n           In your browser, open a new tab or a new window, and open the file there. You should see the text with the initial letters bold, like this:    Cascading Style Sheets    What you see in your browser might not look exactly the same as this, because of settings in your browser and in this wiki. If there are some differences in the font, spacing and colors that you see, they are not important. \n\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nYour document does not yet use CSS. On the next page you use CSS to specify its style: Why use CSS?\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/How_CSS_works","title":"How CSS works","description":"Information: How CSS works\nWhen a browser displays a document, it must combine the document's content with its style information. It processes the document in two stages:\n The browser converts the markup language and the CSS into a structure called the&nbsp;DOM (Document Object Model). The DOM represents the document in the computer's memory. It combines the document's content with its style. The browser displays the contents of the DOM.\n\nA markup language uses elements to define the document's structure. You mark an element using tags, which are strings beginning with '&lt;' and ending with '&gt;'. An element can have a start tag, which is just the name of the element, inside '&lt; &gt;', and an end tag, which has the element name with a '\/' after the '&lt;'. Depending on the markup language, some elements have only a start tag, or only a tag where the '\/' comes after the name.\nAn element can be a container, with other elements between its start tag and end tag.\nA DOM has a tree-like structure. Each element and run of text in the markup language becomes a node in the tree structure. DOM nodes are not containers. Instead, they can be parents of child nodes.\n Example    In your sample document, the &lt;p&gt; tag and its end tag &lt;\/p&gt; create a container:  \n&lt;p&gt;\n  &lt;strong&gt;C&lt;\/strong&gt;ascading\n  &lt;strong&gt;S&lt;\/strong&gt;tyle\n  &lt;strong&gt;S&lt;\/strong&gt;heets\n&lt;\/p&gt;\n  In the DOM, the corresponding P node is a parent. Its children are the STRONG nodes and the text nodes. The STRONG nodes are themselves parents, with text nodes as their children:   P &#9500;&#9472;STRONG &#9474; &#9492;&#9472;&quot;C&quot; &#9500;&#9472;&quot;ascading&quot; &#9500;&#9472;STRONG &#9474; &#9492;&#9472;&quot;S&quot; &#9500;&#9472;&quot;tyle&quot; &#9500;&#9472;STRONG &#9474; &#9492;&#9472;&quot;S&quot; &#9492;&#9472;&quot;heets&quot;    \n\nUnderstanding the DOM helps you to design, debug and maintain your CSS, because the DOM is where your CSS and the document's content meet up.\nAction: Analyzing a DOM\nUsing DOM&nbsp;Inspector\nTo analyze a DOM, you need special software. Here, you use Mozilla's DOM Inspector (DOMi) add-on to analyze a DOM. You need to install the add-on in order to do this activity.\n Use your Mozilla browser to open your sample HTML document. From your browser's menu bar, choose Tools &gt; DOM Inspector, or perhaps Tools &gt; Web Development &gt; DOM Inspector.  More details    If your Mozilla browser does not have DOMi, you can install it from the Add-ons site and restart the browser. Then return to this tutorial. If you do not want to install DOMi (or you're using a non-Mozilla browser), you can use Web X-Ray Goggles, as described in the next section. Or you can skip this section and go straight to the next page. Skipping this section does not interfere with the rest of the tutorial.      In DOMi, expand your document's nodes by clicking on their arrows. Note:&nbsp; Spacing in your HTML file may cause DOMi to show some empty text nodes, which you can ignore. Part of the result might look like this, depending on which nodes you have expanded:      &#9474; &#9660;&#9588;P &#9474; &#9474; &#9474; &#9660;&#9588;STRONG &#9474; &#9474; &#9492;#text &#9474; &#9500;&#9588;#text &#9474; &#9654;&#9588;STRONG &#9474; &#9474;      When you select any node, you can use DOMi's right-hand pane to find out more about it. For example, when you select a text node, DOMi shows you the text in the right-hand pane. When you select an element node, DOMi analyzes it and provides a huge amount of information in its right-hand pane. Style information is just part of the information it provides. \n\n Challenge    In DOMi, click on a STRONG node. Use DOMi's right-hand pane to find out where the node's color is set to red, and where its appearance is made bolder than normal text.   \n\n&nbsp;See a solution to the challenge.\nUsing Web X-Ray Goggles\nWeb X-Ray Goggles shows less information than DOM&nbsp;Inspector, but is simpler to install and use.\n Go to the home page for Web X-Ray Goggles. Drag the bookmarklet link in that page to your browser toolbar. Open your sample HTML&nbsp;document. Activate Web X-Ray Goggles by clicking the bookmarklet on the toolbar. Move your mouse pointer around over your document to see the elements in the document.\n\nUsing DOM&nbsp;Inspector\nTo analyze a DOM, you need special software. Here, you use Mozilla's DOM Inspector (DOMi) add-on to analyze a DOM. You need to install the add-on in order to do this activity.\n Use your Mozilla browser to open your sample HTML document. From your browser's menu bar, choose Tools &gt; DOM Inspector, or perhaps Tools &gt; Web Development &gt; DOM Inspector.  More details    If your Mozilla browser does not have DOMi, you can install it from the Add-ons site and restart the browser. Then return to this tutorial. If you do not want to install DOMi (or you're using a non-Mozilla browser), you can use Web X-Ray Goggles, as described in the next section. Or you can skip this section and go straight to the next page. Skipping this section does not interfere with the rest of the tutorial.      In DOMi, expand your document's nodes by clicking on their arrows. Note:&nbsp; Spacing in your HTML file may cause DOMi to show some empty text nodes, which you can ignore. Part of the result might look like this, depending on which nodes you have expanded:      &#9474; &#9660;&#9588;P &#9474; &#9474; &#9474; &#9660;&#9588;STRONG &#9474; &#9474; &#9492;#text &#9474; &#9500;&#9588;#text &#9474; &#9654;&#9588;STRONG &#9474; &#9474;      When you select any node, you can use DOMi's right-hand pane to find out more about it. For example, when you select a text node, DOMi shows you the text in the right-hand pane. When you select an element node, DOMi analyzes it and provides a huge amount of information in its right-hand pane. Style information is just part of the information it provides. \n\n Challenge    In DOMi, click on a STRONG node. Use DOMi's right-hand pane to find out where the node's color is set to red, and where its appearance is made bolder than normal text.   \n\n&nbsp;See a solution to the challenge.\nUsing Web X-Ray Goggles\nWeb X-Ray Goggles shows less information than DOM&nbsp;Inspector, but is simpler to install and use.\n Go to the home page for Web X-Ray Goggles. Drag the bookmarklet link in that page to your browser toolbar. Open your sample HTML&nbsp;document. Activate Web X-Ray Goggles by clicking the bookmarklet on the toolbar. Move your mouse pointer around over your document to see the elements in the document.\n\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nIf you took the challenge, you saw that style information from more than one place interacts to create the final style for an element.\nThe next page explains more about these interactions: Cascading and inheritance\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Cascading_and_inheritance","title":"Cascading and inheritance","description":"Information: Cascading and inheritance\nThe final style for an element can be specified in many different places, which can interact in a complex way. This complex interaction makes CSS powerful, but it can also make it confusing and difficult to debug.\nThree main sources of style information form a cascade. They are:\n The browser's default styles for the markup language. Styles specified by a user who is reading the document. The styles linked to the document by its author. These can be specified in three places:  In an external file: this tutorial primarily discusses this method of defining styles. In a definition at the beginning of the document: use this method only for styles that are used only on that page. On a specific element in the body of the document:&nbsp;this is the least maintainable method, but can be used for testing.  \n\nThe user's style modifies the browser's default style. The document author's style then modifies the style some more. In this tutorial, you are the author of your sample document, and you only work with author stylesheets.\n Example    When you read this document in a browser, part of the style that you see comes from your browser's defaults for HTML. Part of the style might come from customized browser settings or a customized style definition file. In Firefox, settings can be customized in the Preferences dialog , or you can specify styles in a file named userContent.css file in your browser profile. Part of the style comes from stylesheets linked to the document by the wiki server.   \n\n\nWhen you open your sample document in your browser, the &lt;strong&gt;\n elements are bolder than the rest of the text. This comes from the browser's default style for HTML.\nThe &lt;strong&gt;\n elements are red. This comes from your own sample stylesheet.\nThe &lt;strong&gt;\n elements also inherit much of the &lt;p&gt;\n element's style, because they are its children. In the same way, the &lt;p&gt;\nelement inherits much of the &lt;body&gt;\n element's style.\nFor styles in the cascade, author stylesheets have priority, then reader stylesheets, then the browser's defaults.\nFor inherited styles, a child node's own style has priority over style inherited from its parent.\nThese are not the only priorities that apply. A later page in this tutorial will explain more.\n More details    CSS also provides a way for the reader to override the document author's style, by using the keyword !important. This means that as a document author, you cannot always predict exactly what your readers will see. If you want to know all the details of cascading and inheritance, see Assigning property values, Cascading, and Inheritance in the CSS Specification.   \n\nAction: Using inheritance\n Edit your sample CSS file. Add this line by copying and pasting it. It does not really matter whether you add it above or below the line that is already there. However, adding it at the top is more logical because in your document the &lt;p&gt;\n element is the parent of the &lt;strong&gt;\n element: \np {color: blue; text-decoration: underline;}\n  Now refresh your browser to see the effect on your sample document. The underlining affects all the text in the paragraph, including the initial letters. The &lt;strong&gt;\n elements have inherited the underlined style from their parent &lt;p&gt;\n element.   But the &lt;strong&gt;\n elements are still red. The red color is their own style, so it has priority over the blue color of their parent &lt;p&gt;\n element.      Before    Cascading Style Sheets       After    Cascading Style Sheets        \n\n Challenge    Change your stylesheet so that only the red letters are underlined:    Cascading Style Sheets      \n\n&nbsp;See a solution to this challenge.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nYour sample style sheet specifies styles for tags, P and STRONG, changing the style of the corresponding elements throughout your document. The next page describes how to specify style in more selective ways: Selectors\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Selectors","title":"Selectors","description":"Information: Selectors\nCSS has its own terminology to describe the CSS language. Previously in this tutorial, you created a line in your stylesheet like this:\n\n\nstrong {color: red;}\n\n\nIn CSS terminology, this entire line is a rule. This rule starts with strong, which is a selector. It selects which elements in the DOM the rule applies to.\n More details    The part inside the curly braces is the declaration. The keyword color is a property, and red is a value. The semicolon after the property-value pair separates it from other property-value pairs in the same declaration. This tutorial refers to a selector like strong as a tag selector. The CSS Specification refers to it as a type selector.   \n\nThis page of the tutorial explains more about the selectors that you can use in CSS rules.\nIn addition to tag names, you can use attribute values in selectors. This allows your rules to be more specific.\nTwo attributes have special status for CSS. They are class and id.\nClass selectors\nUse the class attribute in an element to assign the element to a named class. It is up to you what name you choose for the class. Multiple elements in a document can have the same class value.\nIn your stylesheet, type a full stop (period) before the class name when you use it in a selector.\nID&nbsp;selectors\nUse the id attribute in an element to assign an ID to the element. It is up to you what name you choose for the ID. The ID name must be unique in the document.\nIn your stylesheet, type a number sign (hash) before the ID when you use it in a selector.\n Examples    This HTML tag has both a class attribute and an id attribute:  \n&lt;P class=&quot;key&quot; id=&quot;principal&quot;&gt;\n  The id value, principal, must be unique in the document, but other tags in the document can have the same class name, key. In a CSS stylesheet, this rule makes all the elements with class key green. (They might not all be &lt;p&gt;\n elements.)  \n.key {color: green;}\n  This rule makes the one element with the id principal bold:  \n#principal {font-weight: bolder;}\n    \n\n\nIf more than one rule applies to an element and specifies the same property, then CSS gives priority to the rule that has the more specific selector. An ID selector is more specific than a class selector, which in turn is more specific than a tag selector.\n More details    You can also combine selectors, making a more specific selector. For example, the selector .key selects all elements that have the class name key. The selector p.key selects only &lt;p&gt;\n elements that have the class name key. You are not restricted to the two special attrbutes, class and id. You can specify other attributes by using square brackets. For example, the selector [type='button'] selects all elements that have a type attribute with the value button. A later page of this tutorial (Tables) has information about complex selectors based on relationships. For complete information on selectors, see Selectors in the CSS Specification.   \n\n\nIf the stylesheet has conflicting rules and they are equally specific, then CSS gives priority to the rule that is later in the stylesheet.\nWhen you have a problem with conflicting rules, try to resolve it by making one of the rules more specific, so that it has priority. If you cannot do that, try moving one of the rules nearer the end of the stylesheet so that it has priority.\nClass selectors\nUse the class attribute in an element to assign the element to a named class. It is up to you what name you choose for the class. Multiple elements in a document can have the same class value.\nIn your stylesheet, type a full stop (period) before the class name when you use it in a selector.\nID&nbsp;selectors\nUse the id attribute in an element to assign an ID to the element. It is up to you what name you choose for the ID. The ID name must be unique in the document.\nIn your stylesheet, type a number sign (hash) before the ID when you use it in a selector.\n Examples    This HTML tag has both a class attribute and an id attribute:  \n&lt;P class=&quot;key&quot; id=&quot;principal&quot;&gt;\n  The id value, principal, must be unique in the document, but other tags in the document can have the same class name, key. In a CSS stylesheet, this rule makes all the elements with class key green. (They might not all be &lt;p&gt;\n elements.)  \n.key {color: green;}\n  This rule makes the one element with the id principal bold:  \n#principal {font-weight: bolder;}\n    \n\n\nIf more than one rule applies to an element and specifies the same property, then CSS gives priority to the rule that has the more specific selector. An ID selector is more specific than a class selector, which in turn is more specific than a tag selector.\n More details    You can also combine selectors, making a more specific selector. For example, the selector .key selects all elements that have the class name key. The selector p.key selects only &lt;p&gt;\n elements that have the class name key. You are not restricted to the two special attrbutes, class and id. You can specify other attributes by using square brackets. For example, the selector [type='button'] selects all elements that have a type attribute with the value button. A later page of this tutorial (Tables) has information about complex selectors based on relationships. For complete information on selectors, see Selectors in the CSS Specification.   \n\n\nIf the stylesheet has conflicting rules and they are equally specific, then CSS gives priority to the rule that is later in the stylesheet.\nWhen you have a problem with conflicting rules, try to resolve it by making one of the rules more specific, so that it has priority. If you cannot do that, try moving one of the rules nearer the end of the stylesheet so that it has priority.\nAction: Using class and ID selectors\n Edit your HTML file, and duplicate the paragraph by copying and pasting it. Then add id and class attributes to the first copy, and an id attribute to the second copy as shown below. Alternatively, copy and paste the entire file again:  \n&lt;!DOCTYPE html PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.01\/\/EN&quot;\n&quot;http:\/\/www.w3.org\/TR\/html4\/strict.dtd&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text\/html; \n  charset=iso-8859-1&quot;&gt;\n  &lt;title&gt;Sample document&lt;\/title&gt;\n  &lt;link rel=&quot;stylesheet&quot; type=&quot;text\/css&quot; href=&quot;style1.css&quot;&gt;\n  &lt;\/head&gt;\n  &lt;body&gt;\n    &lt;p id=&quot;first&quot;&gt;\n      &lt;strong class=&quot;carrot&quot;&gt;C&lt;\/strong&gt;ascading\n      &lt;strong class=&quot;spinach&quot;&gt;S&lt;\/strong&gt;tyle\n      &lt;strong class=&quot;spinach&quot;&gt;S&lt;\/strong&gt;heets\n    &lt;\/P&gt;\n    &lt;P id=&quot;second&quot;&gt;          &lt;strong&gt;C&lt;\/strong&gt;ascading          &lt;strong&gt;S&lt;\/strong&gt;tyle          &lt;strong&gt;S&lt;\/strong&gt;heets        &lt;\/p&gt;\n  &lt;\/body&gt;\n&lt;\/html&gt;\n   Now edit your CSS file. Replace the entire contents with:  \nstrong {color: red;}\n.carrot {color: orange;}\n.spinach {color: green;}\n#first {font-style: italic;}\n   Save the files and refresh your browser to see the result:    Cascading Style Sheets   Cascading Style Sheets    You can try rearranging the lines in your CSS file to show that the order has no effect. The class selectors .carrot and .spinach have priority over the tag selector strong. The ID selector #first has priority over the class and tag selectors. \n\n Challenges    Without changing your HTML file, add a single rule to your CSS file that keeps all the initial letters that same color as they are now, but makes all the other text in the second paragraph blue:    Cascading Style Sheets   Cascading Style Sheets    Now change the rule you have just added (without changing anything else), to make the first paragraph blue too:    Cascading Style Sheets   Cascading Style Sheets      \n\n&nbsp;See solutions to these challenges.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nYour sample stylesheet is starting to look dense and complicated. The next page describes ways to make CSS easier to read: Readable CSS\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Readable_CSS","title":"Readable CSS","description":"Information: Readable CSS\nYou can add white space and comments to your stylesheets to make them more readable. You can also group selectors together, when the same style rules apply to elements selected in different ways.\nWhite space\nWhite space means actual spaces, tabs and new lines. You can add white space to make your stylesheets more readable.\nYour sample CSS file currently has one rule per line, and almost the minimum of white space. In a complex stylesheet this layout would be difficult to read, making the stylesheet difficult to maintain.\nThe layout you choose is usually a personal preference, but if your stylesheets are part of shared projects, those projects might have their own conventions.\nExamples\nSome people like the compact layout that we have been using, only splitting a line when it becomes very long:\n\r\n          .carrot {color: orange; text-decoration: underline; font-style: italic;}\r\n        \nSome people prefer one property-value per line:\n\n\r\n          .carrot\n{\ncolor: orange;\ntext-decoration: underline;\nfont-style: italic;\n}\r\n        \n\nSome people use indention&mdash;two spaces, four spaces, or a tab are common:\n\n\r\n          .carrot {\n  color: orange;\n  text-decoration: underline;\n  font-style: italic;\n}\r\n        \n\nSome people like everything to line up vertically (but a layout like this is difficult to maintain):\n\n\r\n          .carrot\n    {\n    color           : orange;\n    text-decoration : underline;\n    font-style      : italic;\n    }\r\n        \n\nSome people use tabs for the layout. Some people only use spaces.\nComments\nComments in CSS begin with \/* and end with *\/.\nYou can use comments to make actual comments in your stylesheet, and also to comment out parts of it temporarily for testing purposes.\nTo comment out part of a stylesheet, place that part in a comment so that the browser ignores it. Be careful where you start and end the comment. The rest of the stylesheet must still have correct syntax.\nExample\n\r\n          \/* style for initial letter C in first paragraph *\/\n.carrot {\n  color:            orange;\n  text-decoration:  underline;\n  font-style:       italic;\n  }\r\n        \nGrouped selectors\nWhen many elements have the same style, you can specify a group of selectors, separating them with commas. The declaration applies to all the selected elements.\nElsewhere in your stylesheet you can specify the same selectors again individually, to apply individual style rules to them.\nExample\nThis rule makes &lt;h1&gt;\n, &lt;h2&gt;\n, and &lt;h3&gt;\n elements the same color.\nIt is convenient to specify the color in only one place, in case it has to be changed.\n\n\r\n          \/* color for headings *\/\nh1, h2, h3 {color: navy;}\r\n        \n\nWhite space\nWhite space means actual spaces, tabs and new lines. You can add white space to make your stylesheets more readable.\nYour sample CSS file currently has one rule per line, and almost the minimum of white space. In a complex stylesheet this layout would be difficult to read, making the stylesheet difficult to maintain.\nThe layout you choose is usually a personal preference, but if your stylesheets are part of shared projects, those projects might have their own conventions.\nExamples\nSome people like the compact layout that we have been using, only splitting a line when it becomes very long:\n\r\n          .carrot {color: orange; text-decoration: underline; font-style: italic;}\r\n        \nSome people prefer one property-value per line:\n\n\r\n          .carrot\n{\ncolor: orange;\ntext-decoration: underline;\nfont-style: italic;\n}\r\n        \n\nSome people use indention&mdash;two spaces, four spaces, or a tab are common:\n\n\r\n          .carrot {\n  color: orange;\n  text-decoration: underline;\n  font-style: italic;\n}\r\n        \n\nSome people like everything to line up vertically (but a layout like this is difficult to maintain):\n\n\r\n          .carrot\n    {\n    color           : orange;\n    text-decoration : underline;\n    font-style      : italic;\n    }\r\n        \n\nSome people use tabs for the layout. Some people only use spaces.\nExamples\nSome people like the compact layout that we have been using, only splitting a line when it becomes very long:\n\r\n          .carrot {color: orange; text-decoration: underline; font-style: italic;}\r\n        \nSome people prefer one property-value per line:\n\n\r\n          .carrot\n{\ncolor: orange;\ntext-decoration: underline;\nfont-style: italic;\n}\r\n        \n\nSome people use indention&mdash;two spaces, four spaces, or a tab are common:\n\n\r\n          .carrot {\n  color: orange;\n  text-decoration: underline;\n  font-style: italic;\n}\r\n        \n\nSome people like everything to line up vertically (but a layout like this is difficult to maintain):\n\n\r\n          .carrot\n    {\n    color           : orange;\n    text-decoration : underline;\n    font-style      : italic;\n    }\r\n        \n\nSome people use tabs for the layout. Some people only use spaces.\nComments\nComments in CSS begin with \/* and end with *\/.\nYou can use comments to make actual comments in your stylesheet, and also to comment out parts of it temporarily for testing purposes.\nTo comment out part of a stylesheet, place that part in a comment so that the browser ignores it. Be careful where you start and end the comment. The rest of the stylesheet must still have correct syntax.\nExample\n\r\n          \/* style for initial letter C in first paragraph *\/\n.carrot {\n  color:            orange;\n  text-decoration:  underline;\n  font-style:       italic;\n  }\r\n        \nExample\n\r\n          \/* style for initial letter C in first paragraph *\/\n.carrot {\n  color:            orange;\n  text-decoration:  underline;\n  font-style:       italic;\n  }\r\n        \nGrouped selectors\nWhen many elements have the same style, you can specify a group of selectors, separating them with commas. The declaration applies to all the selected elements.\nElsewhere in your stylesheet you can specify the same selectors again individually, to apply individual style rules to them.\nExample\nThis rule makes &lt;h1&gt;\n, &lt;h2&gt;\n, and &lt;h3&gt;\n elements the same color.\nIt is convenient to specify the color in only one place, in case it has to be changed.\n\n\r\n          \/* color for headings *\/\nh1, h2, h3 {color: navy;}\r\n        \n\nExample\nThis rule makes &lt;h1&gt;\n, &lt;h2&gt;\n, and &lt;h3&gt;\n elements the same color.\nIt is convenient to specify the color in only one place, in case it has to be changed.\n\n\r\n          \/* color for headings *\/\nh1, h2, h3 {color: navy;}\r\n        \n\nAction: Adding comments and improving the layout\n Edit your CSS file, and ensure that it has these rules in it (in any order):  \r\n          strong {color: red;}\n.carrot {color: orange;}\n.spinach {color: green;}\n#first {font-style: italic;}\np {color: blue;}\r\n           Make it more readable by rearranging it in a way that you find logical, and by adding white space and comments in whatever way you think best. Save the file and refresh your browser's display, to make sure that your changes do not affect how the stylesheet works:    Cascading Style Sheets   Cascading Style Sheets    \n\nChallenge\nComment out part of your stylesheet, without changing anything else, to make the very first letter of your document red:\n   Cascading Style Sheets   Cascading Style Sheets  \n\n(There is more than one way to do this.)\n&nbsp;See a solution to this challenge.\nChallenge\nComment out part of your stylesheet, without changing anything else, to make the very first letter of your document red:\n   Cascading Style Sheets   Cascading Style Sheets  \n\n(There is more than one way to do this.)\n&nbsp;See a solution to this challenge.\nWhat next?\nYour sample stylesheet has used italic text and underlined text. The next page describes more ways to specify the appearance of text in your document: Text styles\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Text_styles","title":"Text styles","description":"Information: Text styles\nCSS has several properties for styling text.\nThere is a convenient shorthand property, font\n, which you can use to specify several aspects at once&mdash;for example:\n Bold, italic, and small-caps (small capitals) The size The line height The font typeface\n\n Example      \np {font: italic 75%\/125% &quot;Comic Sans MS&quot;, cursive;}\n  This rule sets various font properties, making all paragraphs italic. The font size is set to three-quarters of the size in each paragraph's parent element, and the line height is set to 125% (a little more spaced than normal). The font typeface is set to Comic Sans MS, but if this typeface is not available then the browser will use its default cursive (hand-written) typeface. The rule has the side-effect of turning off of bold and small-caps (setting them to normal):   \n\nFont faces\nYou cannot predict what typefaces the readers of your document will have. So when you specify font typefaces, it is a good idea to give a list of alternatives in order of preference.\nEnd the list with one of the built-in default typefaces: serif, sans-serif, cursive, fantasy or monospace.\nIf the typeface does not support some features in the document, then the browser can substitute a different typeface. For example, the document might contain special characters that the typeface does not support. If the browser can find another typeface that has those characters, then it will use the other typeface.\nTo specify a typeface on its own, use the font-family\n property.\nFont sizes\nBrowser users can override the default font sizes or change the text size while they read a page, so it makes good sense for you to use relative sizes wherever you can.\nYou can use some built-in values for font sizes, like small, medium and large. You can also use values relative to the font size of the parent element, like: smaller, larger, 150% or 1.5em. An &quot;em&quot; is equivalent to the width of the letter &quot;m&quot; (for the font size of the parent element); thus 1.5em is one-and-a-half times the size of the font of the parent element.\nIf necessary you can specify an actual size, like: 14px (14 pixels) for a display device or 14pt (14 points) for a printer. This is not accessible for visually impaired users, because it does not allow them to change the size. A more accessible strategy is to set a built-in value like medium on a top-level element of the document, and then set relative sizes for all its descendent elements.\nTo specify a font size on its own, use the font-size\n property.\nLine height\nThe line height specifies the spacing between lines. If your document has long paragraphs with many lines, a larger-than-normal spacing makes it easier to read, especially if the font size is small.\nTo specify a line height on its own, use the line-height\n property.\nDecoration\nThe separate text-decoration\n property can specify other styles, like underline or line-through. You can set it to none to explicitly remove any decoration.\nOther properties\nTo specify italic on its own, use font-style\n: italic;\nTo specify bold on its own, use font-weight\n: bold;\nTo specify small capitals on its own, use font-variant\n: small-caps;\nTo turn any of these off individually, you can specify the value normal or inherit.\n More details    You can specify text styles in a variety of other ways. For example, some of the properties mentioned here have other values that you can use. In a complex stylesheet, avoid using the shorthand font property, because of its side-effects (resetting other individual properties). For full details of the properties that relate to fonts, see Fonts in the CSS Specification. For full details of text decoration, see Text there. If you don't want to depend on the typefaces installed on users' systems, you can use @font-face to specify an online font. However, this requires that the users have a browser that supports this rule.   \n\nFont faces\nYou cannot predict what typefaces the readers of your document will have. So when you specify font typefaces, it is a good idea to give a list of alternatives in order of preference.\nEnd the list with one of the built-in default typefaces: serif, sans-serif, cursive, fantasy or monospace.\nIf the typeface does not support some features in the document, then the browser can substitute a different typeface. For example, the document might contain special characters that the typeface does not support. If the browser can find another typeface that has those characters, then it will use the other typeface.\nTo specify a typeface on its own, use the font-family\n property.\nFont sizes\nBrowser users can override the default font sizes or change the text size while they read a page, so it makes good sense for you to use relative sizes wherever you can.\nYou can use some built-in values for font sizes, like small, medium and large. You can also use values relative to the font size of the parent element, like: smaller, larger, 150% or 1.5em. An &quot;em&quot; is equivalent to the width of the letter &quot;m&quot; (for the font size of the parent element); thus 1.5em is one-and-a-half times the size of the font of the parent element.\nIf necessary you can specify an actual size, like: 14px (14 pixels) for a display device or 14pt (14 points) for a printer. This is not accessible for visually impaired users, because it does not allow them to change the size. A more accessible strategy is to set a built-in value like medium on a top-level element of the document, and then set relative sizes for all its descendent elements.\nTo specify a font size on its own, use the font-size\n property.\nLine height\nThe line height specifies the spacing between lines. If your document has long paragraphs with many lines, a larger-than-normal spacing makes it easier to read, especially if the font size is small.\nTo specify a line height on its own, use the line-height\n property.\nDecoration\nThe separate text-decoration\n property can specify other styles, like underline or line-through. You can set it to none to explicitly remove any decoration.\nOther properties\nTo specify italic on its own, use font-style\n: italic;\nTo specify bold on its own, use font-weight\n: bold;\nTo specify small capitals on its own, use font-variant\n: small-caps;\nTo turn any of these off individually, you can specify the value normal or inherit.\n More details    You can specify text styles in a variety of other ways. For example, some of the properties mentioned here have other values that you can use. In a complex stylesheet, avoid using the shorthand font property, because of its side-effects (resetting other individual properties). For full details of the properties that relate to fonts, see Fonts in the CSS Specification. For full details of text decoration, see Text there. If you don't want to depend on the typefaces installed on users' systems, you can use @font-face to specify an online font. However, this requires that the users have a browser that supports this rule.   \n\nAction: Specifying fonts\nFor a simple document, you can set the font of the &lt;body&gt;\n element and the rest of the document inherits the settings.\n Edit your CSS file. Add the following rule to change the font throughout the document. The top of the CSS file is a logical place for it, but it has the same effect wherever you put it:  \nbody {font: 16px &quot;Comic Sans MS&quot;, cursive;}\n   Add a comment explaining the rule, and add white space to make it match your preferred layout. Save the file and refresh your browser to see the effect. If your system has Comic Sans MS, or another cursive font that does not support italic, then your browser chooses a different font face for the italic text in the first line:    Cascading Style Sheets   Cascading Style Sheets     From your browser's menu bar, choose View &gt; Text Size &gt; Increase (or View &gt; Zoom &gt; Zoom In). Even though you specified 16 pixels in the style, a user reading the document can change the size.\n\n Challenge    Without changing anything else, make all six initial letters twice the size in the browser's default serif font:    Cascading Style Sheets   Cascading Style Sheets      \n\n&nbsp;\nSee a solution to this challenge.\nWhat next?\nYour sample document already uses several named colors. The next page lists the names of standard colors and explains how you can specify others: Color\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Color","title":"Color","description":"Information: Color\nIn this tutorial so far, you have used a limited number of named colors. CSS 2 supports 17 named colors in all. Some of the names might not be what you expect:\n   &nbsp; black &nbsp; gray &nbsp; silver &nbsp; white &nbsp;   primaries red &nbsp; lime &nbsp; blue &nbsp;   secondaries yellow &nbsp; aqua &nbsp; fuchsia &nbsp;   &nbsp; maroon &nbsp; orange &nbsp; olive &nbsp; purple &nbsp; green &nbsp; navy &nbsp; teal &nbsp;  \n\n&nbsp;\n More details    Your browser might support many more named colors, like:    dodgerblue &nbsp; peachpuff &nbsp; tan &nbsp; firebrick &nbsp; aquamarine &nbsp;    For details of this extended list, see: SVG color keywords in the CSS 3 Color Module. Beware of using color names that your reader's browsers might not support.   \n\nFor a larger palette, specify the red, green and blue components of the color you want by using a number sign (hash) and three hexadecimal digits in the range 0 &ndash; 9, a &ndash; f. The letters a &ndash; f represent the values 10 &ndash; 15:\n   black &nbsp; #000   pure red &nbsp; #f00   pure green &nbsp; #0f0   pure blue &nbsp; #00f   white &nbsp; #fff  \n\n\nFor the full palette, specify two hexadcimal digits for each component:\n   black &nbsp; #000000   pure red &nbsp; #ff0000   pure green &nbsp; #00ff00   pure blue &nbsp; #0000ff   white &nbsp; #ffffff  \n\nYou can usually get these six-digit hexadecimal codes from your graphics program or some other tool.\n Examples    With a little practice, you can adjust the three-digit colors manually for most purposes:    Start with pure red: &nbsp; #f00   To make it paler, add some green and blue: &nbsp; #f77   To make it more orange, add a little extra green: &nbsp; #fa7   To darken it, reduce all its components: &nbsp; #c74   To reduce its saturation, make its components more equal: &nbsp; #c98   If you make them exactly equal, you get gray: &nbsp; #ccc       For a pastel shade like pale blue:    Start with pure white: &nbsp; #fff   Reduce the other components a little: &nbsp; #eef      \n\n&nbsp;\n More details    You can also specify a color using decimal RGB values in the range 0 &ndash; 255, or percentages. For example, this is maroon (dark red):  \nrgb(128, 0, 0)\n   For full details of how to specify colors, see: Colors in the CSS Specification. For information on matching system colors like Menu and ThreeDFace, see: CSS2 System Colors in the CSS Specification.   \n\nColor properties\nYou have already used the color\n property on text.\nYou can also use the background-color\n property to change elements' backgrounds.\nBackgrounds can be set to transparent to explicitly remove any color, revealing the parent element's background.\n Example    The Example boxes in this tutorial use this pale yellow background:  \nbackground-color: #fffff4;\n  The More details boxes use this pale gray:  \nbackground-color: #f4f4f4;\n    \n\nColor properties\nYou have already used the color\n property on text.\nYou can also use the background-color\n property to change elements' backgrounds.\nBackgrounds can be set to transparent to explicitly remove any color, revealing the parent element's background.\n Example    The Example boxes in this tutorial use this pale yellow background:  \nbackground-color: #fffff4;\n  The More details boxes use this pale gray:  \nbackground-color: #f4f4f4;\n    \n\nAction: Using color codes\n Edit your CSS file. Make the change shown here in bold, to give the initial letters a pale blue background. (The layout and comments in your file probably differ from the file shown here. Keep the layout and comments the way you prefer them.)  \n\/*** CSS Tutorial: Color page ***\/\n&nbsp;\n\/* page font *\/\nbody {font: 16px &quot;Comic Sans MS&quot;, cursive;}\n&nbsp;\n\/* paragraphs *\/\np {color: blue;}\n#first {font-style: italic;}\n&nbsp;\n\/* initial letters *\/\nstrong {\n  color: red;\n  background-color: #ddf;\n  font: 200% serif;\n  }\n&nbsp;\n.carrot {color: red;}\n.spinach {color: green;}\n   Save the file and refresh your browser to see the result:    Cascading Style Sheets   Cascading Style Sheets    &nbsp;  Challenge    In your CSS file, change all the color names to 3-digit color codes without affecting the result. (This cannot be done exactly, but you can get close. To do it exactly you need 6-digit codes, and you need to look up the CSS Specification or use a graphics tool to match the colors.)     See a solution to this challenge. What next? Your sample document and your sample stylesheet strictly separate content from style. The next page explains how you can make exceptions to this strict separation: Content\n\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n \nWhat next? Your sample document and your sample stylesheet strictly separate content from style. The next page explains how you can make exceptions to this strict separation: Content\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Content","title":"Content","description":"Information: Content\nOne of the important advantages of CSS is that it helps you to separate a document's style from its content. Yet there are situations where it makes sense to specify certain content as part of the stylesheet, not as part of the document.\nContent specified in a stylesheet can consist of text or images. You specify content in your stylesheet when the content is closely linked to the document's structure.\n More details    Specifying content in a stylesheet can cause complications. For example, you might have different language versions of your document that share a stylesheet. If part of the stylesheet has to be translated, it means that you must put those parts of the stylesheet in separate files and arrange for them to be linked with the appropriate language versions of your document. These complications do not arise if the content you specify consists of symbols or images that apply in all languages and cultures. Content specified in a stylesheet does not become part of the DOM.   \n\nText content\nCSS can insert text content before or after an element. To specify this, make a rule and add :before\n or :after\n to the selector. In the declaration, specify the content\n property with the text content as its value.\n Example    This rule adds the text Reference: before every element with the class ref:  \n.ref:before {\n  font-weight: bold;\n  color: navy;\n  content: &quot;Reference: &quot;;\n  }\n    \n\n More details    The character set of a stylesheet is UTF-8 by default, but it can be specified in the link, or in the stylesheet itself, or in other ways. For details, see 4.4 CSS style sheet representation in the CSS Specification. Individual characters can also be specified by an escape mechanism that uses backslash as the escape character. For example, \\265B is the chess symbol for a black queen &#9819;. For details, see Referring to characters not represented in a character encoding and also Characters and case in the CSS Specification.   \n\nImage content\nTo add an image before or after an element, you can specify the URL of an image file in the value of the content\n property.\n Example    This rule adds a space and an icon after every link that has the class glossary:  \na.glossary:after {content: &quot; &quot; url(&quot;..\/images\/glossary-icon.gif&quot;);}\n    \n\n\nTo add an image as an element's background, specify the URL of an image file in the value of the background\n property. This is a shorthand property that specifies the background color, the image, how the image repeats, and some other details.\n Example    This rule sets the background of a specific element, using a URL to specify an image file. The selector specifies the element's id. The value no-repeat makes the image appear only once:  \n#sidebar-box {background: url(&quot;..\/images\/sidebar-ground.png&quot;) no-repeat;}\n    \n\n More details    For information about individual properties affecting backgrounds, and about other options when you specify background images, see the&nbsp; background\n reference page.  \n\nText content\nCSS can insert text content before or after an element. To specify this, make a rule and add :before\n or :after\n to the selector. In the declaration, specify the content\n property with the text content as its value.\n Example    This rule adds the text Reference: before every element with the class ref:  \n.ref:before {\n  font-weight: bold;\n  color: navy;\n  content: &quot;Reference: &quot;;\n  }\n    \n\n More details    The character set of a stylesheet is UTF-8 by default, but it can be specified in the link, or in the stylesheet itself, or in other ways. For details, see 4.4 CSS style sheet representation in the CSS Specification. Individual characters can also be specified by an escape mechanism that uses backslash as the escape character. For example, \\265B is the chess symbol for a black queen &#9819;. For details, see Referring to characters not represented in a character encoding and also Characters and case in the CSS Specification.   \n\nImage content\nTo add an image before or after an element, you can specify the URL of an image file in the value of the content\n property.\n Example    This rule adds a space and an icon after every link that has the class glossary:  \na.glossary:after {content: &quot; &quot; url(&quot;..\/images\/glossary-icon.gif&quot;);}\n    \n\n\nTo add an image as an element's background, specify the URL of an image file in the value of the background\n property. This is a shorthand property that specifies the background color, the image, how the image repeats, and some other details.\n Example    This rule sets the background of a specific element, using a URL to specify an image file. The selector specifies the element's id. The value no-repeat makes the image appear only once:  \n#sidebar-box {background: url(&quot;..\/images\/sidebar-ground.png&quot;) no-repeat;}\n    \n\n More details    For information about individual properties affecting backgrounds, and about other options when you specify background images, see the&nbsp; background\n reference page.  \n\nAction: Adding a background image\nThis image is a white square with a blue line at the bottom:\n     \n\n Download the image file into the same directory as your CSS file. (For example, right-click it to get a context menu, then choose Save Image As and specify the directory that you are using for this tutorial.) Edit your CSS file and add this rule to the body, setting a background image for the entire page.  \nbackground: url(&quot;Blue-rule.png&quot;);\n  The value repeat is the default, so it does not need to be specified. The image repeats horizontally and vertically, giving an appearance like lined writing paper:     Cascading Style Sheets   Cascading Style Sheets    \n\n Challenge    Download this image:        Add a one rule to your stylesheet so that it displays the image at the start of each line:     Cascading Style Sheets  Cascading Style Sheets     \n\nSee a solution to this challenge.\nWhat next?\nA common way that stylesheets add content is to mark items in lists.\nThe next page describes how to specify style for list elements: Lists\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Boxes","title":"Boxes","description":"Information: Boxes\nWhen your browser displays an element, the element takes up space. There are four parts to the space that it takes up.\nIn the middle, there is the space that the element needs to display its content. Around that, there is padding. Around that, there is a border. Around that, there is a margin that separates the element from other elements.\n     margin border  padding  element    The pale gray shows parts of the layout.    &nbsp; &nbsp;  &nbsp;  element    This is what you see in your browser.   \n\nThe padding, border and margin can have different sizes on the top, right, bottom and left of the element. Any or all of these sizes can be zero.\nColoring\nThe padding is always the same color as the element's background. So when you set the background color, you see the color applied to the element itself and its padding. The margin is always transparent.\n     margin border  padding  element    The element has a green background.    &nbsp; &nbsp;  &nbsp;  element    This is what you see in your browser.   \n\nBorders\nYou can use borders to decorate elements with lines or boxes.\nTo specify the same border all around an element, use the border\n property. Specify the width (usually in pixels for display on a screen), the style, and the color.\nThe styles are:\n    solid   dotted   dashed   double     inset   outset   ridge   groove   \n\nYou can also set the style to none or hidden to explicitly remove the border, or set the color to transparent to make the border invisible without changing the layout.\nTo specify borders one side at a time, use the properties: border-top\n, border-right\n, {{cssxref(&quot;border-bottom&quot;), {{cssxref(&quot;border-left&quot;)}}. You can use these to specify a border on only one side, or different borders on different sides.\n Examples    This rule sets the background color and the top border of heading elements:  \nh3 {\n  border-top: 4px solid #7c7; \/* mid green *\/\n  background-color: #efe;     \/* pale green *\/\n  color: #050;                \/* dark green *\/\n  }\n  The result looks like:     Stylish heading      This rule makes images easier to see by giving them a mid-gray border all round:  \nimg {border: 2px solid #ccc;}\n  The result looks like:    Image:       \n\nMargins and padding\nUse margins and padding to adjust elements' positions and to create space around them.\nUse the margin\n property or the padding\n property to set the margin or padding widths respectively.\nIf you specify one width, it applies all around the element (top, right, bottom and left).\nIf you specify two widths, the first applies to the top and bottom, the second to the right and left.\nYou can specify all four widths in the order: top, right, bottom, left.\n Example    This rule marks out paragraphs with the class remark by giving them a red border all round. Padding all round separates the border from the text a little. A left margin indents the paragraph relative to the rest of the text:  \np.remark {\n  border: 2px solid red;\n  padding: 4px;\n  margin-left: 24px;\n  }\n  The result looks like:     Here is a normal paragraph. Here is a remark.       \n\n More details    When you use margins and padding to adjust the way elements are laid out, your style rules interact with the browser's defaults in ways that can be complex. Different browsers lay elements out differently. The results might look similar until your stylesheet changes things. Sometimes this can make your stylesheet give surprising results. To get the result you want, you might have to change your document's markup. The next page of this tutorial has more information on this. For detailed information about padding, margins and borders, see the Box model reference page.   \n\nColoring\nThe padding is always the same color as the element's background. So when you set the background color, you see the color applied to the element itself and its padding. The margin is always transparent.\n     margin border  padding  element    The element has a green background.    &nbsp; &nbsp;  &nbsp;  element    This is what you see in your browser.   \n\nBorders\nYou can use borders to decorate elements with lines or boxes.\nTo specify the same border all around an element, use the border\n property. Specify the width (usually in pixels for display on a screen), the style, and the color.\nThe styles are:\n    solid   dotted   dashed   double     inset   outset   ridge   groove   \n\nYou can also set the style to none or hidden to explicitly remove the border, or set the color to transparent to make the border invisible without changing the layout.\nTo specify borders one side at a time, use the properties: border-top\n, border-right\n, {{cssxref(&quot;border-bottom&quot;), {{cssxref(&quot;border-left&quot;)}}. You can use these to specify a border on only one side, or different borders on different sides.\n Examples    This rule sets the background color and the top border of heading elements:  \nh3 {\n  border-top: 4px solid #7c7; \/* mid green *\/\n  background-color: #efe;     \/* pale green *\/\n  color: #050;                \/* dark green *\/\n  }\n  The result looks like:     Stylish heading      This rule makes images easier to see by giving them a mid-gray border all round:  \nimg {border: 2px solid #ccc;}\n  The result looks like:    Image:       \n\nMargins and padding\nUse margins and padding to adjust elements' positions and to create space around them.\nUse the margin\n property or the padding\n property to set the margin or padding widths respectively.\nIf you specify one width, it applies all around the element (top, right, bottom and left).\nIf you specify two widths, the first applies to the top and bottom, the second to the right and left.\nYou can specify all four widths in the order: top, right, bottom, left.\n Example    This rule marks out paragraphs with the class remark by giving them a red border all round. Padding all round separates the border from the text a little. A left margin indents the paragraph relative to the rest of the text:  \np.remark {\n  border: 2px solid red;\n  padding: 4px;\n  margin-left: 24px;\n  }\n  The result looks like:     Here is a normal paragraph. Here is a remark.       \n\n More details    When you use margins and padding to adjust the way elements are laid out, your style rules interact with the browser's defaults in ways that can be complex. Different browsers lay elements out differently. The results might look similar until your stylesheet changes things. Sometimes this can make your stylesheet give surprising results. To get the result you want, you might have to change your document's markup. The next page of this tutorial has more information on this. For detailed information about padding, margins and borders, see the Box model reference page.   \n\nAction: Adding borders\nEdit your CSS file, style2.css. Add this rule to draw a line across the page over each heading:\n\n\nh3 {border-top: 1px solid gray;}\n\n\nIf you took the challenge on the last page, modify the rule you created, otherwise add this new rule to add space underneath each list item:\n\n\nli {\n  list-style: lower-roman;\n  margin-bottom: 8px;\n  }\n\n\nRefresh your browser to see the result:\n    (A) The oceans  Arctic Atlantic Pacific Indian Southern  (B) Numbered paragraphs 1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum   \n\n&nbsp;\n Challenge    Add one rule to your stylesheet, making a wide border all around the oceans in a color that reminds you of the sea&mdash;something like this:     (A) The oceans   Arctic Atlantic Pacific Indian Southern   (B) Numbered paragraphs . . .     (There is no need to match the width and color you see here exactly.)   \n\nSee a solution to this challenge.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nBy specifying margins and padding, you modified the layout of your document. On the next page you cange your document's layout in other ways: Layout\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Lists","title":"Lists","description":"Information: Lists\nIf you took the challenge on the last page (Content), then you saw how you can add content before any element to display it like a list item.\nCSS provides special properties that are designed for lists. It is usually more convenient to use these properties whenever you can.\nTo specify the style for a list, use the list-style\n property to specify the type of marker.\nThe selector in your CSS rule can either select the list item elements (for example, &lt;li&gt;\n), or it can select the parent list element (for example, &lt;ul&gt;\n) so that the list elements inherit the style.\nUnordered lists\nIn an unordered list, each list item is marked in the same way.\nCSS has three types of markers, and here is how your browser displays them:\n disc circle square\n\nAlternatively, you can specify the URL of an image.\n Example    These rules specify different markers for different classes of list item:  \nli.open {list-style: circle;}\nli.closed {list-style: disc;}\n  When these classes are used in a list, they distinguish between open and closed items (for example, in a to-do list):  \n&lt;ul&gt;\n  &lt;li class=&quot;open&quot;&gt;Lorem ipsum&lt;\/li&gt;\n  &lt;li class=&quot;closed&quot;&gt;Dolor sit&lt;\/li&gt;\n  &lt;li class=&quot;closed&quot;&gt;Amet consectetuer&lt;\/li&gt;\n  &lt;li class=&quot;open&quot;&gt;Magna aliquam&lt;\/li&gt;\n  &lt;li class=&quot;closed&quot;&gt;Autem veleum&lt;\/li&gt;\n&lt;\/ul&gt;\n  The result might look like:      Lorem ipsum Dolor sit Amet consectetuer Magna aliquam Autem veleum        \n\nOrdered lists\nIn an ordered list, each list item is marked differently to show its position in the sequence.\nUse the list-style\n property to specify the type of marker:\n decimal lower-roman upper-roman lower-latin upper-latin\n\n Example    This rule specifies that in &lt;ol&gt;\n elements with the class info, the items are identified with capital letters.  \nol.info {list-style: upper-latin;}\n  The &lt;li&gt;\n elements in the list inherit this style:      Lorem ipsum Dolor sit Amet consectetuer Magna aliquam Autem veleum        \n\n More details     The list-style\n property is a shorthand property. In complex stylesheets you might prefer to use separate properties to set separate values. For links to these separate properties, and more details of how CSS specifies lists, see the list-style\n reference page. If you are using a markup language like HTML that provides conventional tags for unordered (&lt;ul&gt;\n) and ordered (&lt;ol&gt;\n) lists, then it is good practice to use the tags in the way they were intended. However, you can use CSS to make &lt;ul&gt;\n display ordered and &lt;ol&gt;\n display unordered if you wish. Browsers differ in the way they implement the styles for lists. Do not expect your stylesheet to give identical results in all browsers.   \n\nCounters\n\nNote:&nbsp; Some browsers do not support counters. The CSS&nbsp;contents and browser compatibility page on the Quirks Mode site contains a detailed chart of browser compatibility for this and other CSS features. Individual pages in the CSS&nbsp;Reference on this site also have browser compatibility tables.\n\nYou can use counters to number any elements, not only list items. For example, in some documents you might want to number headings or paragraphs.\nTo specify numbering, you need a counter with a name that you specify.\nIn some element before the counting is to start, reset the counter with the property counter-reset\n and the name of your counter. The parent of the elements you are counting is a good place to do this, but you can use any element that comes before the list items.\nIn each element where the counter increments, use the property counter-increment\n and the name of your counter.\nTo display your counter, add :before\n or :after\n to the selector and use the content property (as you did on the previous page, Content).\nIn the value of the content property, specify counter() with the name of your counter. Optionally specify a type. The types are the same as in the Ordered lists section above.\nNormally the element that displays the counter also increments it.\n Example    This rule initializes a counter for every &lt;h3&gt;\n element with the class numbered:  \nh3.numbered {counter-reset: mynum;}\n  This rule displays and increments the counter for every &lt;p&gt;\n element with the class numbered:  \np.numbered:before {\n  content: counter(mynum) &quot;: &quot;;\n  counter-increment: mynum;\n  font-weight: bold;}\n  The result looks like this:    Heading 1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum       \n\n More details    You cannot use counters unless you know that everyone who reads your document has a browser that supports them. If you are able to use counters, they have the advantage that you can style the counters separately from the list items. In the example above, the counters are bold but the list items are not. You can also use counters in more complex ways&mdash;for example, to number sections, headings, subheadings and paragraphs in formal documents. For details, see Automatic counters and numbering in the CSS Specification.   \n\nUnordered lists\nIn an unordered list, each list item is marked in the same way.\nCSS has three types of markers, and here is how your browser displays them:\n disc circle square\n\nAlternatively, you can specify the URL of an image.\n Example    These rules specify different markers for different classes of list item:  \nli.open {list-style: circle;}\nli.closed {list-style: disc;}\n  When these classes are used in a list, they distinguish between open and closed items (for example, in a to-do list):  \n&lt;ul&gt;\n  &lt;li class=&quot;open&quot;&gt;Lorem ipsum&lt;\/li&gt;\n  &lt;li class=&quot;closed&quot;&gt;Dolor sit&lt;\/li&gt;\n  &lt;li class=&quot;closed&quot;&gt;Amet consectetuer&lt;\/li&gt;\n  &lt;li class=&quot;open&quot;&gt;Magna aliquam&lt;\/li&gt;\n  &lt;li class=&quot;closed&quot;&gt;Autem veleum&lt;\/li&gt;\n&lt;\/ul&gt;\n  The result might look like:      Lorem ipsum Dolor sit Amet consectetuer Magna aliquam Autem veleum        \n\nOrdered lists\nIn an ordered list, each list item is marked differently to show its position in the sequence.\nUse the list-style\n property to specify the type of marker:\n decimal lower-roman upper-roman lower-latin upper-latin\n\n Example    This rule specifies that in &lt;ol&gt;\n elements with the class info, the items are identified with capital letters.  \nol.info {list-style: upper-latin;}\n  The &lt;li&gt;\n elements in the list inherit this style:      Lorem ipsum Dolor sit Amet consectetuer Magna aliquam Autem veleum        \n\n More details     The list-style\n property is a shorthand property. In complex stylesheets you might prefer to use separate properties to set separate values. For links to these separate properties, and more details of how CSS specifies lists, see the list-style\n reference page. If you are using a markup language like HTML that provides conventional tags for unordered (&lt;ul&gt;\n) and ordered (&lt;ol&gt;\n) lists, then it is good practice to use the tags in the way they were intended. However, you can use CSS to make &lt;ul&gt;\n display ordered and &lt;ol&gt;\n display unordered if you wish. Browsers differ in the way they implement the styles for lists. Do not expect your stylesheet to give identical results in all browsers.   \n\nCounters\n\nNote:&nbsp; Some browsers do not support counters. The CSS&nbsp;contents and browser compatibility page on the Quirks Mode site contains a detailed chart of browser compatibility for this and other CSS features. Individual pages in the CSS&nbsp;Reference on this site also have browser compatibility tables.\n\nYou can use counters to number any elements, not only list items. For example, in some documents you might want to number headings or paragraphs.\nTo specify numbering, you need a counter with a name that you specify.\nIn some element before the counting is to start, reset the counter with the property counter-reset\n and the name of your counter. The parent of the elements you are counting is a good place to do this, but you can use any element that comes before the list items.\nIn each element where the counter increments, use the property counter-increment\n and the name of your counter.\nTo display your counter, add :before\n or :after\n to the selector and use the content property (as you did on the previous page, Content).\nIn the value of the content property, specify counter() with the name of your counter. Optionally specify a type. The types are the same as in the Ordered lists section above.\nNormally the element that displays the counter also increments it.\n Example    This rule initializes a counter for every &lt;h3&gt;\n element with the class numbered:  \nh3.numbered {counter-reset: mynum;}\n  This rule displays and increments the counter for every &lt;p&gt;\n element with the class numbered:  \np.numbered:before {\n  content: counter(mynum) &quot;: &quot;;\n  counter-increment: mynum;\n  font-weight: bold;}\n  The result looks like this:    Heading 1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum       \n\n More details    You cannot use counters unless you know that everyone who reads your document has a browser that supports them. If you are able to use counters, they have the advantage that you can style the counters separately from the list items. In the example above, the counters are bold but the list items are not. You can also use counters in more complex ways&mdash;for example, to number sections, headings, subheadings and paragraphs in formal documents. For details, see Automatic counters and numbering in the CSS Specification.   \n\nAction: Styled lists\nMake a new HTML document, doc2.html. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\n&lt;!DOCTYPE html PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.01\/\/EN&quot;\n&quot;http:\/\/www.w3.org\/TR\/html4\/strict.dtd&quot;&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text\/html; \ncharset=iso-8859-1&quot;&gt;\n&lt;title&gt;Sample document 2&lt;\/title&gt;\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text\/css&quot; href=&quot;style2.css&quot;&gt;\n&lt;\/head&gt;\n&lt;body&gt;\n&nbsp;\n&lt;h3 id=&quot;oceans&quot;&gt;The oceans&lt;\/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;Arctic&lt;\/li&gt;\n&lt;li&gt;Atlantic&lt;\/li&gt;\n&lt;li&gt;Pacific&lt;\/li&gt;\n&lt;li&gt;Indian&lt;\/li&gt;\n&lt;li&gt;Southern&lt;\/li&gt;\n&lt;\/ul&gt;\n&nbsp;\n&lt;h3 class=&quot;numbered&quot;&gt;Numbered paragraphs&lt;\/h3&gt;\n&lt;p class=&quot;numbered&quot;&gt;Lorem ipsum&lt;\/p&gt;\n&lt;p class=&quot;numbered&quot;&gt;Dolor sit&lt;\/p&gt;\n&lt;p class=&quot;numbered&quot;&gt;Amet consectetuer&lt;\/p&gt;\n&lt;p class=&quot;numbered&quot;&gt;Magna aliquam&lt;\/p&gt;\n&lt;p class=&quot;numbered&quot;&gt;Autem veleum&lt;\/p&gt;\n&nbsp;\n&lt;\/body&gt;\n&lt;\/html&gt;\n\n\nMake a new stylesheet, style2.css. Copy and paste the content from here:\n\n\n\/* numbered paragraphs *\/\nh3.numbered {counter-reset: mynum;}\n&nbsp;\np.numbered:before {\n  content: counter(mynum) &quot;: &quot;;\n  counter-increment: mynum;\n  font-weight: bold;}\n\n\nIf the layout and comment are not to your taste, change them.\nOpen the document in your browser. If your browser supports counters, you see something like the example below. If your browser does not support counters, then you do not see the numbers (and probably not even the colons):\n    The oceans  Arctic Atlantic Pacific Indian Southern  Numbered paragraphs 1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum   \n\n&nbsp;\n Challenges    Add a rule to your stylesheet, to number the oceans using Roman numerals from i to v:     The oceans  Arctic Atlantic Pacific Indian Southern       Change your stylesheet to identify the headings with capital letters in parentheses like this:     (A) The oceans . . . (B) Numbered paragraphs . . .       \n\n&nbsp;See solutions to these challenges.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nWhen your browser displays your sample document, it creates space around the elements when it lays them out on the page.\nThe next page describes how you can use CSS to work with the underlying shapes of elements: Boxes\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Layout","title":"Layout","description":"Information: Layout\nYou can use CSS to specify various visual effects that change the layout of your document. Some of the techniques for specifying layout are advanced, and beyond the scope of this basic tutorial.\nWhen you design a layout to look similar in many browsers, your stylesheet interacts with the browser's default stylesheet and layout engine in ways that can be complex. This is also an advanced subject, beyond the scope of this basic tutorial.\nThis page describes some simple techniques that you can try.\nDocument structure\nIf you want to control the layout of your document, then you might have to change its structure.\nYour document's markup language might have general-purpose tags for creating structure. For example, in HTML you can use the &lt;div&gt;\n element to create structure.\n Example    In your sample document, the numbered paragraphs under the second heading do not have a container of their own. Your stylesheet cannot draw a border around those paragraphs, because there is no element to specify in the selector. To fix this structural problem, you can add a DIV tag around the paragraphs. This tag is unique, so it can by identified by an id attribute:  \n&lt;H3 class=&quot;numbered&quot;&gt;Numbered paragraphs&lt;\/H3&gt;\n&lt;DIV id=&quot;numbered&quot;&gt;\n&lt;P class=&quot;numbered&quot;&gt;Lorem ipsum&lt;\/P&gt;\n&lt;P class=&quot;numbered&quot;&gt;Dolor sit&lt;\/P&gt;\n&lt;P class=&quot;numbered&quot;&gt;Amet consectetuer&lt;\/P&gt;\n&lt;P class=&quot;numbered&quot;&gt;Magna aliquam&lt;\/P&gt;\n&lt;P class=&quot;numbered&quot;&gt;Autem veleum&lt;\/P&gt;\n&lt;\/DIV&gt;\n  Now your stylesheet can use one rule to specify borders around both lists:  \nul, #numbered {\n  border: 1em solid #69b;\n  padding-right:1em;\n  }\n  The result looks like:     (A) The oceans   Arctic Atlantic Pacific Indian Southern   (B) Numbered paragraphs  1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum        \n\nSize units\nSo far in this tutorial, you have specified sizes in pixels (px). These are appropriate for some purposes on a display device like a computer screen. But when the user changes the font size, your layout can look wrong.\nFor many purposes it is better to specify sizes as a percentage or in ems (em). An em is nominally the size of the current font (the width of a letter m). When the user changes the font size, your layout adjusts automatically.\n Example    The border on the left of this text has its size specified in pixels. The border on the right has its size specified in ems. In your browser, change the size of the font to see how the border on the right adjusts but the border on the left does not:     RESIZE ME PLEASE       \n\n More details    For other devices, other length units are appropriate. There is more information about this in a later page of this tutorial. For full details of the values and units that you can use, see Values in the CSS Specification.   \n\nText layout\nTwo properties specify how the content of an element is aligned. You can use them for simple layout adjustments:\n text-align\n Aligns the content. Use one of these values: left, right, center, justify text-indent\n Indents the content by an amount that you specify.\n\nThese properties apply to any text-like content in the element, not only to actual text. Remember that they are inherited by the element's children, so you might have to explicitly turn them off in the children to avoid surprising results.\n Example    To center headings:  \nh3 {\n  border-top: 1px solid gray;\n  text-align: center;\n  }\n  Resulting in:     (A) The oceans     In an HTML document, the content that you see below a heading is not structurally contained by the heading. So when you align a heading like this, the tags below the heading do not inherit the style.   \n\nFloats\nThe float\n property forces an element to the left or right. This is a simple way to control its position and size.\nThe rest of the document's content normally flows around the floated element. You can control this by using the clear\n property on other elements to make them stay clear of floats.\n Example    In your sample document, the lists stretch across the window. You can prevent this by floating them to the left. To keep the headings in place, you must also specify that they stay clear of floats on their left:  \nul, #numbered {float: left;}\nh3 {clear: left;}\n  The result looks like:     (A) The oceans   Arctic Atlantic Pacific Indian Southern   (B) Numbered paragraphs  1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum      (A little padding is needed on the right of the boxes, where the border is too close to the text.)   \n\nPositioning\nYou can specify an element's position in four ways by specifying the position\n property and one of the following values.\nThese are advanced properties. It is possible to use them in simple ways&mdash;that is why they are mentioned in this basic tutorial. But using them for complex layouts can be difficult.\n relative The element's position is shifted relative to its normal position. Use this to shift an element by a specified amount. You can sometimes use the element's margin to achieve the same effect. fixed The element's position is fixed. Specify the element's position relative to the document window. Even if the rest of the document scrolls, the element remains fixed. absolute The element's position is fixed relative to a parent element. Only a parent that is itself positioned with relative, fixed or absolute will do. You can make any parent element suitable by specifying position: relative; for it without specifying any shift. static The default. Use this value if you need to turn positioning off explicitly.\n\nAlong with these values of the position property (except for static), specify one or more of the properties: top, right, bottom, left, width, height to identify where you want the element to appear, and perhaps also its size.\n Example    To position two elements on top of each other, create a parent container in your document with the two elements inside it:  \n&lt;DIV id=&quot;parent-div&quot;&gt;\n&lt;P id=&quot;forward&quot;&gt;\/&lt;\/P&gt;\n&lt;P id=&quot;back&quot;&gt;\\&lt;\/P&gt;\n&lt;\/DIV&gt;\n  In your stylesheet, make the parent's position relative. There is no need to specify any actual shift. Make the children's position absolute:  \n#parent-div {\n  position: relative;\n  font: bold 200% sans-serif;\n  }\n\n#forward, #back {\n  position: absolute;\n  margin:0px; \/* no margin around the elements *\/\n&nbsp; top: 0px; \/* distance from top *\/\n&nbsp; left: 0px; \/* distance from left *\/\n&nbsp; }\n\n#forward {\n  color: blue;\n  }\n\n#back {\n  color: red;\n  }\n  The result looks like this, with the backslash on top of the forward slash:  \/ \\     &nbsp;    &nbsp;   \n\n More details    The full story on positioning takes up two complex chapters in the CSS Specification: Visual formatting model and Visual formatting model details. If you are designing stylesheets to work in many browsers, then you also need to take into account differences in the way browsers interpret the standard, and perhaps bugs in particular versions of particular browsers.   \n\nDocument structure\nIf you want to control the layout of your document, then you might have to change its structure.\nYour document's markup language might have general-purpose tags for creating structure. For example, in HTML you can use the &lt;div&gt;\n element to create structure.\n Example    In your sample document, the numbered paragraphs under the second heading do not have a container of their own. Your stylesheet cannot draw a border around those paragraphs, because there is no element to specify in the selector. To fix this structural problem, you can add a DIV tag around the paragraphs. This tag is unique, so it can by identified by an id attribute:  \n&lt;H3 class=&quot;numbered&quot;&gt;Numbered paragraphs&lt;\/H3&gt;\n&lt;DIV id=&quot;numbered&quot;&gt;\n&lt;P class=&quot;numbered&quot;&gt;Lorem ipsum&lt;\/P&gt;\n&lt;P class=&quot;numbered&quot;&gt;Dolor sit&lt;\/P&gt;\n&lt;P class=&quot;numbered&quot;&gt;Amet consectetuer&lt;\/P&gt;\n&lt;P class=&quot;numbered&quot;&gt;Magna aliquam&lt;\/P&gt;\n&lt;P class=&quot;numbered&quot;&gt;Autem veleum&lt;\/P&gt;\n&lt;\/DIV&gt;\n  Now your stylesheet can use one rule to specify borders around both lists:  \nul, #numbered {\n  border: 1em solid #69b;\n  padding-right:1em;\n  }\n  The result looks like:     (A) The oceans   Arctic Atlantic Pacific Indian Southern   (B) Numbered paragraphs  1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum        \n\nSize units\nSo far in this tutorial, you have specified sizes in pixels (px). These are appropriate for some purposes on a display device like a computer screen. But when the user changes the font size, your layout can look wrong.\nFor many purposes it is better to specify sizes as a percentage or in ems (em). An em is nominally the size of the current font (the width of a letter m). When the user changes the font size, your layout adjusts automatically.\n Example    The border on the left of this text has its size specified in pixels. The border on the right has its size specified in ems. In your browser, change the size of the font to see how the border on the right adjusts but the border on the left does not:     RESIZE ME PLEASE       \n\n More details    For other devices, other length units are appropriate. There is more information about this in a later page of this tutorial. For full details of the values and units that you can use, see Values in the CSS Specification.   \n\nText layout\nTwo properties specify how the content of an element is aligned. You can use them for simple layout adjustments:\n text-align\n Aligns the content. Use one of these values: left, right, center, justify text-indent\n Indents the content by an amount that you specify.\n\nThese properties apply to any text-like content in the element, not only to actual text. Remember that they are inherited by the element's children, so you might have to explicitly turn them off in the children to avoid surprising results.\n Example    To center headings:  \nh3 {\n  border-top: 1px solid gray;\n  text-align: center;\n  }\n  Resulting in:     (A) The oceans     In an HTML document, the content that you see below a heading is not structurally contained by the heading. So when you align a heading like this, the tags below the heading do not inherit the style.   \n\nFloats\nThe float\n property forces an element to the left or right. This is a simple way to control its position and size.\nThe rest of the document's content normally flows around the floated element. You can control this by using the clear\n property on other elements to make them stay clear of floats.\n Example    In your sample document, the lists stretch across the window. You can prevent this by floating them to the left. To keep the headings in place, you must also specify that they stay clear of floats on their left:  \nul, #numbered {float: left;}\nh3 {clear: left;}\n  The result looks like:     (A) The oceans   Arctic Atlantic Pacific Indian Southern   (B) Numbered paragraphs  1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum      (A little padding is needed on the right of the boxes, where the border is too close to the text.)   \n\nPositioning\nYou can specify an element's position in four ways by specifying the position\n property and one of the following values.\nThese are advanced properties. It is possible to use them in simple ways&mdash;that is why they are mentioned in this basic tutorial. But using them for complex layouts can be difficult.\n relative The element's position is shifted relative to its normal position. Use this to shift an element by a specified amount. You can sometimes use the element's margin to achieve the same effect. fixed The element's position is fixed. Specify the element's position relative to the document window. Even if the rest of the document scrolls, the element remains fixed. absolute The element's position is fixed relative to a parent element. Only a parent that is itself positioned with relative, fixed or absolute will do. You can make any parent element suitable by specifying position: relative; for it without specifying any shift. static The default. Use this value if you need to turn positioning off explicitly.\n\nAlong with these values of the position property (except for static), specify one or more of the properties: top, right, bottom, left, width, height to identify where you want the element to appear, and perhaps also its size.\n Example    To position two elements on top of each other, create a parent container in your document with the two elements inside it:  \n&lt;DIV id=&quot;parent-div&quot;&gt;\n&lt;P id=&quot;forward&quot;&gt;\/&lt;\/P&gt;\n&lt;P id=&quot;back&quot;&gt;\\&lt;\/P&gt;\n&lt;\/DIV&gt;\n  In your stylesheet, make the parent's position relative. There is no need to specify any actual shift. Make the children's position absolute:  \n#parent-div {\n  position: relative;\n  font: bold 200% sans-serif;\n  }\n\n#forward, #back {\n  position: absolute;\n  margin:0px; \/* no margin around the elements *\/\n&nbsp; top: 0px; \/* distance from top *\/\n&nbsp; left: 0px; \/* distance from left *\/\n&nbsp; }\n\n#forward {\n  color: blue;\n  }\n\n#back {\n  color: red;\n  }\n  The result looks like this, with the backslash on top of the forward slash:  \/ \\     &nbsp;    &nbsp;   \n\n More details    The full story on positioning takes up two complex chapters in the CSS Specification: Visual formatting model and Visual formatting model details. If you are designing stylesheets to work in many browsers, then you also need to take into account differences in the way browsers interpret the standard, and perhaps bugs in particular versions of particular browsers.   \n\nAction: Specifying layout\n Change your sample document, doc2.html, and stylesheet, style2.css, using the examples above in the sections Document structure and Floats. In the Floats example, add padding to separate the text from the right border by 0.5 em.\n\n Challenges    Change your sample document, doc2.html, adding this tag to it near the end, just before &lt;\/BODY&gt;. \n&lt;IMG id=&quot;fixed-pin&quot; src=&quot;Yellow-pin.png&quot; alt=&quot;Yellow map pin&quot;&gt;\n If you did not download the image file earlier in this tutorial, download it now, and place it in the same directory as the other sample files:        Predict where the image will appear in your document. Then refresh your browser to see if you were correct. Add a rule to your stylesheet that places the image in the top right of your document. Refresh your browser and make the window small. Check that the image stays in the top right even when you scroll your document:   (A) The oceans   Arctic Atlantic Pacific Indian Southern   (B) Numbered paragraphs  1: Lorem ipsum 2: Dolor sit 3: Amet consectetuer 4: Magna aliquam 5: Autem veleum  &nbsp;      \n\n&nbsp;See a solution to this challenge.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nYou have just about covered all the topics in this basic CSS tutorial. The next page describes more advanced selectors for CSS rules, and some specific ways that you can style tables: Tables\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Tables","title":"Tables","description":"Information: More selectors\nCSS has some ways to select elements based on the relationships between elements. You can use these to make selectors that are more specific.\n Selectors based on relationships   Selector Selects   A E Any E element that is a descendant of an A element (that is: a child, or a child of a child, etc.)   A &gt; E Any E element that is a child of an A element   E:first-child Any E element that is the first child of its parent   B + E Any E element that is the next sibling of a B element (that is: the next child of the same parent)  \n\nYou can combine these to express complex relationships.\nYou can also use the symbol * (asterisk) to mean &quot;any element&quot;.\n Example    An HTML table has an id attribute, but its rows and cells do not have individual identifiers:  \n&lt;TABLE id=&quot;data-table-1&quot;&gt;\n...\n&lt;TR&gt;\n&lt;TD&gt;Prefix&lt;\/TD&gt;\n&lt;TD&gt;0001&lt;\/TD&gt;\n&lt;TD&gt;default&lt;\/TD&gt;\n&lt;\/TR&gt;\n...\n  These rules make the first cell in each row bold, and the second cell in each row monospaced. They only affect one specific table in the document:   data-table-1 td:first-child {font-weight: bolder;}  data-table-1 td:first-child + td {font-family: monospace;}   The result looks like:        Prefix 0001 default          \n\n More details    In the usual way, if you make a selector more specific, then you increase its priority. If you use these techniques, you avoid the need to specify class or id attributes on so many tags in your document. Instead, CSS does the work. In large designs where speed is important, you can make your stylesheets more efficient by avoiding complex rules that depend on relationships between elements. For full details of selectors, see Selectors in the CSS Reference page.   \n\nInformation: Tables\nA table is an arrangement of information in a rectangular grid. Some tables can be complex, and for complex tables different browsers can give different results.\nWhen you design your document, use a table to express the relationships between the pieces of information. Then it does not matter if different browsers present the information in slightly different ways, because the meaning is still clear.\nDo not use tables in unusual ways to produce particular visual layouts. The techniques on the previous page of this tutorial (Layout) are better for that purpose.\nTable structure\nIn a table, each piece of information is displayed in a cell.\nThe cells in a line across the page make up a row.\nIn some tables, the rows might be grouped. A special group of rows at the start of the table is the header. A special group of rows at the end of the table is the footer. The main rows in the table are the body, and they might also be in groups.\nThe cells in a line down the page make up a column, but columns have limited use in CSS tables.\n Example    The table of Selectors based on relationships near the top of this page has ten cells in five rows. The first row is the header. The other four rows are the body. There is no footer. It has two columns.   \n\n\nThis tutorial only covers simple tables, where the results are fairly predictable. In a simple table, every cell occupies only one row and column. You can use CSS for complex tables where cells span (extend across) more than one row or column, but tables like that are beyond the scope of this basic tutorial.\nBorders\nCells have no margins.\nCells do have borders and padding. By default, the borders are separated by the value of the table's border-spacing\n property. You can also remove the spacing completely by setting the table's border-collapse\n property to collapse.\n Example    Here are three tables. The table on the left has 0.5 em border spacing. The table in the center has zero border spacing. The table on the right has collapsed borders:        Clubs Hearts   Diamonds Spades         Clubs Hearts   Diamonds Spades         Clubs Hearts   Diamonds Spades          \n\nCaptions\nA &lt;caption&gt;\n element is a label that applies to the entire table. By default, it is displayed at the top of the table.\nTo move it to the bottom, set its caption-side\n property to bottom. The property is inherited, so alternatively you can set it on the table or another ancestor element.\nTo style the text of the caption, use any of the usual properties for text.\n Example    This table has a caption at the bottom:  \n#demo-table &gt; caption {\n  caption-side: bottom;\n  font-style: italic;\n  text-align: right;\n  }\n       Suits        Clubs Hearts   Diamonds Spades              \n\nEmpty cells\nYou can display empty cells (that is, their borders and backgrounds) by specifying empty-cells\n: show; for the table element.\nYou can hide them by specifying empty-cells: hide;. Then, if a cell's parent element has a background, it shows through the empty cell.\n Example    These tables have a pale green background. Their cells have a pale gray background and dark gray borders. In the table on the left, the empty cell is shown. On the right, it is hidden:        &nbsp; Hearts   Diamonds Spades         &nbsp; Hearts   Diamonds Spades          \n\n&nbsp;\n More details    For detailed information about tables, see Tables in the CSS Specification. The information there goes further than this tutorial, but it does not cover differences between browsers that can affect complex tables.   \n\nTable structure\nIn a table, each piece of information is displayed in a cell.\nThe cells in a line across the page make up a row.\nIn some tables, the rows might be grouped. A special group of rows at the start of the table is the header. A special group of rows at the end of the table is the footer. The main rows in the table are the body, and they might also be in groups.\nThe cells in a line down the page make up a column, but columns have limited use in CSS tables.\n Example    The table of Selectors based on relationships near the top of this page has ten cells in five rows. The first row is the header. The other four rows are the body. There is no footer. It has two columns.   \n\n\nThis tutorial only covers simple tables, where the results are fairly predictable. In a simple table, every cell occupies only one row and column. You can use CSS for complex tables where cells span (extend across) more than one row or column, but tables like that are beyond the scope of this basic tutorial.\nBorders\nCells have no margins.\nCells do have borders and padding. By default, the borders are separated by the value of the table's border-spacing\n property. You can also remove the spacing completely by setting the table's border-collapse\n property to collapse.\n Example    Here are three tables. The table on the left has 0.5 em border spacing. The table in the center has zero border spacing. The table on the right has collapsed borders:        Clubs Hearts   Diamonds Spades         Clubs Hearts   Diamonds Spades         Clubs Hearts   Diamonds Spades          \n\nCaptions\nA &lt;caption&gt;\n element is a label that applies to the entire table. By default, it is displayed at the top of the table.\nTo move it to the bottom, set its caption-side\n property to bottom. The property is inherited, so alternatively you can set it on the table or another ancestor element.\nTo style the text of the caption, use any of the usual properties for text.\n Example    This table has a caption at the bottom:  \n#demo-table &gt; caption {\n  caption-side: bottom;\n  font-style: italic;\n  text-align: right;\n  }\n       Suits        Clubs Hearts   Diamonds Spades              \n\nEmpty cells\nYou can display empty cells (that is, their borders and backgrounds) by specifying empty-cells\n: show; for the table element.\nYou can hide them by specifying empty-cells: hide;. Then, if a cell's parent element has a background, it shows through the empty cell.\n Example    These tables have a pale green background. Their cells have a pale gray background and dark gray borders. In the table on the left, the empty cell is shown. On the right, it is hidden:        &nbsp; Hearts   Diamonds Spades         &nbsp; Hearts   Diamonds Spades          \n\n&nbsp;\n More details    For detailed information about tables, see Tables in the CSS Specification. The information there goes further than this tutorial, but it does not cover differences between browsers that can affect complex tables.   \n\nAction: Styling a table\n Make a new HTML document, doc3.html. Copy and paste the content from here, making sure that you scroll to get all of it:  \n&lt;DOCTYPE HTML PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.0\/\/EN&quot;&gt;\n&lt;HTML&gt;\n&lt;HEAD&gt;\n&lt;TITLE&gt;Sample document 3&lt;\/TITLE&gt;\n&lt;LINK rel=&quot;stylesheet&quot; type=&quot;text\/css&quot; href=&quot;style3.css&quot;&gt;\n&lt;\/HEAD&gt;\n&lt;BODY&gt;\n\n&lt;TABLE id=&quot;demo-table&quot;&gt;\n&lt;CAPTION&gt;Oceans&lt;\/CAPTION&gt;\n\n&lt;THEAD&gt;\n&lt;TR&gt;\n&lt;TH&gt;&lt;\/TH&gt;\n&lt;TH&gt;Area&lt;\/TH&gt;\n&lt;TH&gt;Mean depth&lt;\/TH&gt;\n&lt;\/TR&gt;\n&lt;TR&gt;\n&lt;TH&gt;&lt;\/TH&gt;\n&lt;TH&gt;million km&lt;SUP&gt;2&lt;\/SUP&gt;&lt;\/TH&gt;\n&lt;TH&gt;m&lt;\/TH&gt;\n&lt;\/TR&gt;\n&lt;\/THEAD&gt;\n\n&lt;TBODY&gt;\n&lt;TR&gt;\n&lt;TH&gt;Arctic&lt;\/TH&gt;\n&lt;TD&gt;13,000&lt;\/TD&gt;\n&lt;TD&gt;1,200&lt;\/TD&gt;\n&lt;\/TR&gt;\n&lt;TR&gt;\n&lt;TH&gt;Atlantic&lt;\/TH&gt;\n&lt;TD&gt;87,000&lt;\/TD&gt;\n&lt;TD&gt;3,900&lt;\/TD&gt;\n&lt;\/TR&gt;\n&lt;TR&gt;\n&lt;TH&gt;Pacific&lt;\/TH&gt;\n&lt;TD&gt;180,000&lt;\/TD&gt;\n&lt;TD&gt;4,000&lt;\/TD&gt;\n&lt;\/TR&gt;\n&lt;TR&gt;\n&lt;TH&gt;Indian&lt;\/TH&gt;\n&lt;TD&gt;75,000&lt;\/TD&gt;\n&lt;TD&gt;3,900&lt;\/TD&gt;\n&lt;\/TR&gt;\n&lt;TR&gt;\n&lt;TH&gt;Southern&lt;\/TH&gt;\n&lt;TD&gt;20,000&lt;\/TD&gt;\n&lt;TD&gt;4,500&lt;\/TD&gt;\n&lt;\/TR&gt;\n&lt;\/TBODY&gt;\n\n&lt;TFOOT&gt;\n&lt;TR&gt;\n&lt;TH&gt;Total&lt;\/TH&gt;\n&lt;TD&gt;361,000&lt;\/TD&gt;\n&lt;TD&gt;&lt;\/TD&gt;\n&lt;\/TR&gt;\n&lt;TR&gt;\n&lt;TH&gt;Mean&lt;\/TH&gt;\n&lt;TD&gt;72,000&lt;\/TD&gt;\n&lt;TD&gt;3,800&lt;\/TD&gt;\n&lt;\/TR&gt;\n&lt;\/TFOOT&gt;\n\n&lt;\/TABLE&gt;\n   \n&lt;\/BODY&gt;\n&lt;\/HTML&gt;\n   Make a new stylesheet, style3.css. Copy and paste the content from here, making sure that you scroll to get all of it:  \n\/*** Style for doc3.html (Tables) ***\/\n\n#demo-table {\n  font: 100% sans-serif;\n  background-color: #efe;\n  border-collapse: collapse;\n  empty-cells: show;\n  border: 1px solid #7a7;\n  }\n\n#demo-table &gt; caption {\n  text-align: left;\n  font-weight: bold;\n  font-size: 200%;\n  border-bottom: .2em solid #4ca;\n  margin-bottom: .5em;\n  }\n\n\n\/* basic shared rules *\/\n#demo-table th,\n#demo-table td {\n  text-align: right;\n  padding-right: .5em;\n  }\n\n#demo-table th {\n  font-weight: bold;\n  padding-left: .5em;\n  }\n\n\n\/* header *\/\n#demo-table &gt; thead &gt; tr:first-child &gt; th {\n  text-align: center;\n  color: blue;\n  }\n\n#demo-table &gt; thead &gt; tr + tr &gt; th {\n  font-style: italic;\n  color: gray;\n  }\n\n\/* fix size of superscript *\/\n#demo-table sup {\n  font-size: 75%;\n  }\n\n\/* body *\/\n#demo-table td {\n  background-color: #cef;\n  padding:.5em .5em .5em 3em;\n  }\n\n#demo-table tbody th:after {\n  content: &quot;:&quot;;\n  }\n\n\n\/* footer *\/\n#demo-table tfoot {\n  font-weight: bold;\n  }\n\n#demo-table tfoot th {\n  color: blue;\n  }\n\n#demo-table tfoot th:after {\n  content: &quot;:&quot;;\n  }\n\n#demo-table &gt; tfoot td {\n  background-color: #cee;\n  }\n\n#demo-table &gt; tfoot &gt; tr:first-child td {\n  border-top: .2em solid #7a7;\n  }\n   Open the document in your browser. It should look very similar to this:      Oceans     &nbsp; Area Mean&nbsp;depth   &nbsp; million km2 m   Arctic: 13,000 1,200   Atlantic: 87,000 3,900   Pacific: 180,000 4,000   Indian: 75,000 3,900   Southern: 20,000 4,500   Total: 361,000 &nbsp;   Mean: 72,000 3,800           Compare the rules in the stylesheet with the displayed table, to ensure that you understand the effect of each rule. If you find a rule that you are not sure about, comment it out and refresh your browser to see what happens. Here are some notes about this table:  The caption lies outside the table border. If you have a minimum point size set in Options, it might affect the superscript in km2. There are three empty cells. Two of them allow the table background to show through. The third has a background and a top border. The colons are added by the stylesheet.  \n\n Challenges    Change the stylesheet to make the table look like this:          &nbsp; Area Mean&nbsp;depth   &nbsp; million km2 m   Arctic: 13,000 1,200   Atlantic: 87,000 3,900   Pacific: 180,000 4,000   Indian: 75,000 3,900   Southern: 20,000 4,500   Total: 361,000 &nbsp;   Mean: 72,000 3,800     Oceans        \n\n&nbsp;\nSee a solution to this challenge.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nThis is the last page in this tutorial that focusses on CSS properties and values. For a complete summary of properties and values, see Full property table in the CSS Specification.\nThe next page looks again at the purpose and structure of CSS stylesheets: Media\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/JavaScript","title":"JavaScript and CSS","description":"Information: JavaScript\nJavaScript is a programming language. JavaScript is widely used to provide interactivity in web sites and applications.\nJavaScript can interact with stylesheets, allowing you to write programs that change a document's style dynamically.\nThere are three ways to do this:\n By working with the document's list of stylesheets&mdash;for example: adding, removing or modifying a stylesheet. By working with the rules in a stylesheet&mdash;for example: adding, removing or modifying a rule. By working with an individual element in the DOM&mdash;modifying its style independently of the document's stylesheets\n\n More details    For more information about JavaScript, see the JavaScript page in this wiki.  \n\nAction: A JavaScript demonstration\nMake a new HTML document, doc5.html. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\n&lt;!DOCTYPE HTML PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.0\/\/EN&quot;&gt;\n&lt;HTML&gt;\n\n&lt;HEAD&gt;\n&lt;TITLE&gt;Mozilla CSS Getting Started - JavaScript demonstration&lt;\/TITLE&gt;\n&lt;LINK rel=&quot;stylesheet&quot; type=&quot;text\/css&quot; href=&quot;style5.css&quot;&gt;\n&lt;SCRIPT type=&quot;text\/javascript&quot; src=&quot;script5.js&quot;&gt;&lt;\/SCRIPT&gt;\n&lt;\/HEAD&gt;\n\n&lt;BODY&gt;\n&lt;H1&gt;JavaScript sample&lt;\/H1&gt;\n\n&lt;DIV id=&quot;square&quot;&gt;&lt;\/DIV&gt;\n\n&lt;BUTTON type=&quot;button&quot; onclick=&quot;doDemo(this);&quot;&gt;Click Me&lt;\/BUTTON&gt;\n\n&lt;\/BODY&gt;\n&lt;\/HTML&gt;\n\n\nMake a new CSS file, style5.css. Copy and paste the content from here:\n\n\n\/*** JavaScript demonstration ***\/\n#square {\n  width: 20em;\n  height: 20em;\n  border: 2px inset gray;\n  margin-bottom: 1em;\n  }\n\nbutton {\n  padding: .5em 2em;\n  }\n\n\nMake a new text file, script5.js. Copy and paste the content from here:\n\n\n\/\/ JavaScript demonstration\nfunction doDemo (button) {\n  var square = document.getElementById(&quot;square&quot;);\n  square.style.backgroundColor = &quot;#fa4&quot;;\n  button.setAttribute(&quot;disabled&quot;, &quot;true&quot;);\n  setTimeout(clearDemo, 2000, button);\n  }\n\nfunction clearDemo (button) {\n  var square = document.getElementById(&quot;square&quot;);\n  square.style.backgroundColor = &quot;transparent&quot;;\n  button.removeAttribute(&quot;disabled&quot;);\n  }\n\n\nOpen the document in your browser and press the button.\nThis wiki does not support JavaScript in pages, so it is not possible to show the demonstration here. It looks something like this, before and after you press the button:\n        JavaScript demonstration           JavaScript demonstration       \n\nImportant notes about this demonstration:\n The HTML document links the stylesheet as usual, and it also links the script. The script works with individual elements in the DOM. It modifies the square's style directly. It modifies the button's style indirectly by changing an attribute. In JavaScript, document.getElementById(&quot;square&quot;) is similar in function to to the CSS selector #square. In JavaScript, backgroundColor corresponds to the CSS property background-color. JavaScript does not allow hyphens in names, so &quot;camelCase&quot; is used instead. Your browser has a built-in CSS rule for button[disabled=&quot;true&quot;] that changes the button's appearance when it is disabled.\n\n\n Challenge    Change the script so that the square jumps to the right by 20 em when its color changes, and jumps back afterwards.  \n\nSee a solution to this challenge.\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nIn this demonstration, the HTML document links the script even though only the button element uses the script. Mozilla extends CSS so that it can link JavaScript code (and also content and other stylesheets) to selected elements. The next page demonstrates this: XBL bindings\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/SVG_graphics","title":"SVG and CSS","description":"Information: SVG\nSVG (Scalable Vector Graphics) is an XML-based language for creating graphics.\nIt can be used for static images, and also for animations and user interfaces.\nLike other XML-based languages, SVG supports CSS stylesheets so that you can separate the style of a graphic from its content.\nAlso, stylesheets that you use with other document markup languages can specify the URL of an SVG graphic where an image is required. For example, a stylesheet that you use with an HTML document can specify the URL of an SVG graphic in the value of a background property.\n More details     At the time of writing (mid 2011), most modern browsers have basic support for SVG, including Internet Explorer 9 or later. Some SVG&nbsp;features are supported only partially or not at all on some browsers. See the SVG tables on caniuse.com for an overview of SVG support, or the compatibility tables in the SVG element reference for support of specific items. You can add SVG support to other versions by installing a plugin such as the one provided by Adobe. For more information about SVG in Mozilla, see the SVG page in this wiki.   \n\nAction: An SVG demonstration\nMake a new SVG document as a plain text file, doc8.svg. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\r\n          &lt;?xml version=&quot;1.0&quot; standalone=&quot;no&quot;?&gt;\n\n&lt;?xml-stylesheet type=&quot;text\/css&quot; href=&quot;style8.css&quot;?&gt;\n\n&lt;!DOCTYPE svg PUBLIC &quot;-\/\/W3C\/\/DTD SVG 1.1\/\/EN&quot;\n  &quot;http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd&quot;&gt;\n\n&lt;svg width=&quot;600px&quot; height=&quot;600px&quot; viewBox=&quot;-300 -300 600 600&quot;\n  xmlns=&quot;http:\/\/www.w3.org\/2000\/svg&quot; version=&quot;1.1&quot;\n  xmlns:xlink=&quot;http:\/\/www.w3.org\/1999\/xlink&quot;&gt;\n\n&lt;title&gt;SVG demonstration&lt;\/title&gt;\n&lt;desc&gt;Mozilla CSS Getting Started - SVG demonstration&lt;\/desc&gt;\n\n&lt;defs&gt;\n  &lt;g id=&quot;segment&quot; class=&quot;segment&quot;&gt;\n    &lt;path class=&quot;segment-fill&quot; d=&quot;M0,0 v-200 a40,40 0 0,0 -62,10 z&quot;\/&gt;\n    &lt;path class=&quot;segment-edge&quot; d=&quot;M0,-200 a40,40 0 0,0 -62,10&quot;\/&gt;\n    &lt;\/g&gt;\n  &lt;g id=&quot;quadrant&quot;&gt;\n    &lt;use xlink:href=&quot;#segment&quot;\/&gt;\n    &lt;use xlink:href=&quot;#segment&quot; transform=&quot;rotate(18)&quot;\/&gt;\n    &lt;use xlink:href=&quot;#segment&quot; transform=&quot;rotate(36)&quot;\/&gt;\n    &lt;use xlink:href=&quot;#segment&quot; transform=&quot;rotate(54)&quot;\/&gt;\n    &lt;use xlink:href=&quot;#segment&quot; transform=&quot;rotate(72)&quot;\/&gt;\n    &lt;\/g&gt;\n  &lt;g id=&quot;petals&quot;&gt;\n    &lt;use xlink:href=&quot;#quadrant&quot;\/&gt;\n    &lt;use xlink:href=&quot;#quadrant&quot; transform=&quot;rotate(90)&quot;\/&gt;\n    &lt;use xlink:href=&quot;#quadrant&quot; transform=&quot;rotate(180)&quot;\/&gt;\n    &lt;use xlink:href=&quot;#quadrant&quot; transform=&quot;rotate(270)&quot;\/&gt;\n    &lt;\/g&gt;\n  &lt;radialGradient id=&quot;fade&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;200&quot;\n      gradientUnits=&quot;userSpaceOnUse&quot;&gt;\n    &lt;stop id=&quot;fade-stop-1&quot; offset=&quot;33%&quot;\/&gt;\n    &lt;stop id=&quot;fade-stop-2&quot; offset=&quot;95%&quot;\/&gt;\n    &lt;\/radialGradient&gt;\n  &lt;\/defs&gt;\n\n&lt;text id=&quot;heading&quot; x=&quot;-280&quot; y=&quot;-270&quot;&gt;\n  SVG demonstration&lt;\/text&gt;\n&lt;text  id=&quot;caption&quot; x=&quot;-280&quot; y=&quot;-250&quot;&gt;\n  Move your mouse pointer over the flower.&lt;\/text&gt;\n\n&lt;g id=&quot;flower&quot;&gt;\n  &lt;circle id=&quot;overlay&quot; cx=&quot;0&quot; cy=&quot;0&quot; r=&quot;200&quot;\n    stroke=&quot;none&quot; fill=&quot;url(#fade)&quot;\/&gt;\n  &lt;use id=&quot;outer-petals&quot; xlink:href=&quot;#petals&quot;\/&gt;\n  &lt;use id=&quot;inner-petals&quot; xlink:href=&quot;#petals&quot;\n    transform=&quot;rotate(9) scale(0.33)&quot;\/&gt;\n  &lt;\/g&gt;\n\n&lt;\/svg&gt;\r\n        \n\nMake a new CSS file, style8.css. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\r\n          \/*** SVG demonstration ***\/\n\n\/* page *\/\nsvg {\n  background-color: beige;\n  }\n\n#heading {\n  font-size: 24px;\n  font-weight: bold;\n  }\n\n#caption {\n  font-size: 12px;\n  }\n\n\/* flower *\/\n#flower:hover {\n  cursor: crosshair;\n  }\n\n\/* gradient *\/\n#fade-stop-1 {\n  stop-color: blue;\n  }\n\n#fade-stop-2 {\n  stop-color: white;\n  }\n\n\/* outer petals *\/\n#outer-petals {\n  opacity: .75;\n  }\n\n#outer-petals .segment-fill {\n  fill: azure;\n  stroke: lightsteelblue;\n  stroke-width: 1;\n  }\n\n#outer-petals .segment-edge {\n  fill: none;\n  stroke: deepskyblue;\n  stroke-width: 3;\n  }\n\n#outer-petals .segment:hover &gt; .segment-fill {\n  fill: plum;\n  stroke: none;\n  }\n\n#outer-petals .segment:hover &gt; .segment-edge {\n  stroke: slateblue;\n  }\n\n\/* inner petals *\/\n#inner-petals .segment-fill {\n  fill: yellow;\n  stroke: yellowgreen;\n  stroke-width: 1;\n  }\n\n#inner-petals .segment-edge {\n  fill: none;\n  stroke: yellowgreen;\n  stroke-width: 9;\n  }\n\n#inner-petals .segment:hover &gt; .segment-fill {\n  fill: darkseagreen;\n  stroke: none;\n  }\n\n#inner-petals .segment:hover &gt; .segment-edge {\n  stroke: green;\n  }\r\n        \n\nOpen the document in your SVG-enabled browser. Move your mouse pointer over the graphic.\nThis wiki does not support SVG in pages, so it is not possible to show the demonstration here. The graphic looks like this:\n     \n\nNotes about this demonstration:\n The SVG document links the styesheet in the usual way. SVG has its own CSS properties and values. Some of them are similar to CSS properties for HTML.\n\n Challenge    Change the stylesheet so that the inner petals all turn pink when the mouse pointer is over any one of them, without changing the way the outer petals work.  \n\n&nbsp;\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nIn this demonstration, your SVG-enabled browser already knows how to display SVG elements. The stylesheet only modifies the display in certain ways. This is also true for HTML and XUL documents. But you can use CSS for general-purpose XML documents, where there is no predefined way to display the elements. The next page demonstrates this: XML data\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nIn this demonstration, your SVG-enabled browser already knows how to display SVG elements. The stylesheet only modifies the display in certain ways. This is also true for HTML and XUL documents. But you can use CSS for general-purpose XML documents, where there is no predefined way to display the elements. The next page demonstrates this: XML data\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/XML_data","title":"XML data","description":"Information: XML data\nXML (eXtensible Markup Language) is a general-purpose language for any kind of structured data.\nBy default, your Mozilla browser displays XML in a format very similar to the original data in the XML file. You see the actual tags that define the data's structure.\nBy linking a CSS stylesheet with the XML document, you can define other ways to display it. To do this, your stylesheet uses rules that map tags in the XML document to the display types used by HTML.\n Example    Data in an XML document uses &lt;INFO&gt; tags. You want the document's INFO elements to be displayed like HTML paragraphs. In the document's stylesheet, you specify how INFO elements are to be displayed:  \nINFO {\n  display: block;\n  margin: 1em 0;\n  }\n    \n\nThe most common values for the display property are:\n   block Displayed like HTML's DIV (for headings, paragraphs)   inline Displayed like HTML's SPAN (for emphasis within text)  \n\nAdd your own style rules that specify the font, spacing and other details in the same way as for HTML.\n More details    Other values of display display the element like a list item, or like a component of a table. For the full list of display types, see The display property in the CSS Specification. Using CSS alone, the structure of the display must be the same as the structure of the document. Other technologies can modify the structure of the display&mdash;for example, XBL can add content, and JavaScript can modify the DOM. For more information about XML in Mozilla, see the XML page in this wiki.   \n\nAction: An XML demonstration\nMake a new XML file, doc9.xml. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\n&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;!-- XML demonstration --&gt;\n\n&lt;?xml-stylesheet type=&quot;text\/css&quot; href=&quot;style9.css&quot;?&gt;\n\n&lt;!DOCTYPE planet&gt;\n&lt;planet&gt;\n\n&lt;ocean&gt;\n&lt;name&gt;Arctic&lt;\/name&gt;\n&lt;area&gt;13,000&lt;\/area&gt;\n&lt;depth&gt;1,200&lt;\/depth&gt;\n&lt;\/ocean&gt;\n\n&lt;ocean&gt;\n&lt;name&gt;Atlantic&lt;\/name&gt;\n&lt;area&gt;87,000&lt;\/area&gt;\n&lt;depth&gt;3,900&lt;\/depth&gt;\n&lt;\/ocean&gt;\n\n&lt;ocean&gt;\n&lt;name&gt;Pacific&lt;\/name&gt;\n&lt;area&gt;180,000&lt;\/area&gt;\n&lt;depth&gt;4,000&lt;\/depth&gt;\n&lt;\/ocean&gt;\n\n&lt;ocean&gt;\n&lt;name&gt;Indian&lt;\/name&gt;\n&lt;area&gt;75,000&lt;\/area&gt;\n&lt;depth&gt;3,900&lt;\/depth&gt;\n&lt;\/ocean&gt;\n\n&lt;ocean&gt;\n&lt;name&gt;Southern&lt;\/name&gt;\n&lt;area&gt;20,000&lt;\/area&gt;\n&lt;depth&gt;4,500&lt;\/depth&gt;\n&lt;\/ocean&gt;\n\n&lt;\/planet&gt;\n\n\nMake a new CSS file, style9.css. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\n\/*** XML demonstration ***\/\n\nplanet:before {\n  display: block;\n  width: 8em;\n  font-weight: bold;\n  font-size: 200%;\n  content: &quot;Oceans&quot;;\n  margin: -.75em 0px .25em -.25em;\n  padding: .1em .25em;\n  background-color: #cdf;\n  }\n\nplanet {\n  display: block;\n  margin: 2em 1em;\n  border: 4px solid #cdf;\n  padding: 0px 1em;\n  background-color: white;\n  }\n\nocean {\n  display: block;\n  margin-bottom: 1em;\n  }\n\nname {\n  display: block;\n  font-weight: bold;\n  font-size: 150%;\n  }\n\narea {\n  display: block;\n  }\n\narea:before {\n  content: &quot;Area: &quot;;\n  }\n\narea:after {\n  content: &quot; million km\\B2&quot;;\n  }\n\ndepth {\n  display: block;\n  }\n\ndepth:before {\n  content: &quot;Mean depth: &quot;;\n  }\n\ndepth:after {\n  content: &quot; m&quot;;\n  }\n\n\nOpen the document in your browser:\n     Oceans Arctic Area: 13,000 million km&sup2; Mean depth: 1,200 m Atlantic Area: 87,000 million km&sup2; Mean depth: 3,900 m . . .    \n\n\nNotes about this demonstration:\n The superscript 2 (in &quot;million km&sup2;&quot;) a Unicode character, coded as \\B2 in the CSS file. The heading, &quot;Oceans&quot;, has a negative top margin, moving it up so it is displayed on top of the border.\n\n&nbsp;\n Challenge    Change the stylesheet so that it displays the document as a table. (See the Tables chapter in the CSS Specification for examples that you can adapt.)   \n\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nThis is the last page of the tutorial. For more information about CSS in Mozilla, see the main CSS page in this wiki.\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nThis is the last page of the tutorial. For more information about CSS in Mozilla, see the main CSS page in this wiki.\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/XBL_bindings","title":"XBL bindings","description":"Information: XBL bindings\nThe structure provided by markup languages and CSS is not ideal for complex applications where parts need to be self-contained and reusable. You can place stylesheets in separate files, and you can place scripts in separate files. But you must link those files from the document as a whole.\nAnother structural limitation concerns content. You can use CSS to provide content for selected elements, but the content is limited to text and images, and its positioning is limited to before or after the selected element.\nMozilla provides a mechanism that overcomes these limitations: XBL (XML Bindings Language). You can use XBL to link selected elements to their own:\n Stylesheets Content Properties and methods Event handlers\n\nBecause you avoid linking everything at the document level, you can make self-contained parts that are easy to maintain and reuse.\n More details    For more information about XBL bindings, see the XBL page in this wiki.  \nAction: An XBL demonstration\nMake a new HTML document, doc6.html. Copy and paste the content from here:\n\n\r\n          &lt;!DOCTYPE HTML PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.0\/\/EN&quot;&gt;\n&lt;HTML&gt;\n\n&lt;HEAD&gt;\n&lt;TITLE&gt;Mozilla CSS Getting Started - XBL demonstration&lt;\/TITLE&gt;\n&lt;LINK rel=&quot;stylesheet&quot; type=&quot;text\/css&quot; href=&quot;style6.css&quot;&gt;\n&lt;\/HEAD&gt;\n\n&lt;BODY&gt;\n&lt;H1&gt;XBL demonstration&lt;\/H1&gt;\n&lt;DIV id=&quot;square&quot;&gt;Click Me&lt;\/DIV&gt;\n&lt;\/BODY&gt;\n\n&lt;\/HTML&gt;\r\n        \n\nMake a new CSS file, style6.css. This stylesheet contains the document style. Copy and paste the content from here:\n\n\r\n          \/*** XBL demonstration ***\/\n#square {\n  -moz-binding: url(&quot;square.xbl#square&quot;);\n  }\r\n        \n\nMake a new text file, square.xbl. This file contains the XBL binding. Copy and paste the content from here:\n\n\r\n          &lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;!DOCTYPE bindings&gt;\n&lt;bindings xmlns=&quot;http:\/\/www.mozilla.org\/xbl&quot;\n          xmlns:xul=&quot;http:\/\/www.mozilla.org\/keymaster\/gatekeeper\/there.is.only.xul&quot;\n          xmlns:html=&quot;http:\/\/www.w3.org\/1999\/xhtml&quot;&gt;\n\n&lt;binding id=&quot;square&quot;&gt;\n\n  &lt;resources&gt;\n    &lt;stylesheet src=&quot;bind6.css&quot;\/&gt;\n    &lt;\/resources&gt;\n\n  &lt;content&gt;\n    &lt;html:div anonid=&quot;square&quot;\/&gt;\n    &lt;xul:button anonid=&quot;button&quot; type=&quot;button&quot;&gt;\n      &lt;children\/&gt;\n      &lt;\/xul:button&gt;\n    &lt;\/content&gt;\n\n  &lt;implementation&gt;\n\n    &lt;field name=&quot;square&quot;&gt;&lt;![CDATA[\n      document.getAnonymousElementByAttribute(this, &quot;anonid&quot;, &quot;square&quot;)\n      ]]&gt;&lt;\/field&gt;\n\n    &lt;field name=&quot;button&quot;&gt;&lt;![CDATA[\n      document.getAnonymousElementByAttribute(this, &quot;anonid&quot;, &quot;button&quot;)\n      ]]&gt;&lt;\/field&gt;\n\n    &lt;method name=&quot;doDemo&quot;&gt;\n      &lt;body&gt;&lt;![CDATA[\n        this.square.style.backgroundColor = &quot;#cf4&quot;\n        this.square.style.marginLeft = &quot;20em&quot;\n        this.button.setAttribute(&quot;disabled&quot;, &quot;true&quot;)\n        setTimeout(this.clearDemo, 2000, this)\n        ]]&gt;&lt;\/body&gt;\n      &lt;\/method&gt;\n\n    &lt;method name=&quot;clearDemo&quot;&gt;\n      &lt;parameter name=&quot;me&quot;\/&gt;\n      &lt;body&gt;&lt;![CDATA[\n        me.square.style.backgroundColor = &quot;transparent&quot;\n        me.square.style.marginLeft = &quot;0&quot;\n        me.button.removeAttribute(&quot;disabled&quot;)\n        ]]&gt;&lt;\/body&gt;\n      &lt;\/method&gt;\n\n    &lt;\/implementation&gt;\n\n  &lt;handlers&gt;\n    &lt;handler event=&quot;click&quot; button=&quot;0&quot;&gt;&lt;![CDATA[\n     if (event.originalTarget == this.button) this.doDemo()\n     ]]&gt;&lt;\/handler&gt;\n    &lt;\/handlers&gt;\n\n  &lt;\/binding&gt;\n\n&lt;\/bindings&gt;\r\n        \n\nMake a new CSS file, bind6.css. This separate stylesheet contains style for the binding. Copy and paste the content from here:\n\n\r\n          \/*** XBL demonstration ***\/\n[anonid=&quot;square&quot;] {\n  width: 20em;\n  height: 20em;\n  border: 2px inset gray;\n  }\n\n[anonid=&quot;button&quot;] {\n  margin-top: 1em;\n  padding: .5em 2em;\n  }\r\n        \n\nOpen the document in your browser and press the button.\nThis wiki does not support JavaScript in pages, so it is not possible to show the demonstration here. It looks something like this, before and after you press the button:\n      \n\nNotes about this demonstration:\n The HTML document links the document stylesheet as usual, but it does not link any JavaScript code. The document does not contain any button. It only contains the text of the button's label. The button is added by the binding. The document stylesheet links the binding. The binding links its own stylesheet, and it supplies its own content and JavaScript code. So the binding is self-contained.\n\n  Challenges    Change the XBL file so that the square doubles in width when it changes color, instead of jumping to the right. Use the DOM Inspector tool to inspect the document, revealing the added content.   \nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nIn this demonstration, the square and the button make a self-contained widget that functions within an HTML document. Mozilla has a specialized markup language for creating user interfaces. The next page demonstrates it: XUL user interfaces\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/XUL_user_interfaces","title":"XUL user interfaces","description":"Information: User interfaces\nAlthough HTML has some support for user interfaces, it does not support all the features that you need to make a standalone application.\nMozilla overcomes this limitation by providing a specialized language for creating user interfaces: XUL (XML User-interface Language, usually pronounced like &quot;zool&quot;).\nIn XUL, many common user interface features are built in. For example, XUL provides specialized windows like dialogs and wizards, as well as status bars, menus, tool bars, and even browsers.\nMore specialized features can be built from parts by using XUL together with other technologies that you have seen in this tutorial: CSS style, JavaScript code, and XBL bindings.\nLike other XML-based languages, XUL uses CSS stylesheets.\n More details    For more information about XUL user interfaces, see the XUL page in this wiki.  \n\nAction: A XUL demonstration\nMake a new XUL document as a plain text file, doc7.xul. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\n&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;?xml-stylesheet type=&quot;text\/css&quot; href=&quot;style7.css&quot;?&gt;\n&lt;!DOCTYPE window&gt;\n\n&lt;window\n  xmlns=&quot;http:\/\/www.mozilla.org\/keymaster\/gatekeeper\/there.is.only.xul&quot;\n  title=&quot;CSS Getting Started - XUL demonstration&quot;\n  onload=&quot;init();&quot;&gt;\n\n&lt;script type=&quot;application\/javascript&quot; src=&quot;script7.js&quot;\/&gt;\n\n&lt;label class=&quot;head-1&quot; value=&quot;XUL demonstration&quot;\/&gt;\n\n&lt;vbox&gt;\n\n  &lt;groupbox class=&quot;demo-group&quot;&gt;\n    &lt;caption label=&quot;Day of week calculator&quot;\/&gt;\n    &lt;grid&gt;\n      &lt;columns&gt;\n        &lt;column\/&gt;\n        &lt;column\/&gt;\n        &lt;\/columns&gt;\n      &lt;rows&gt;\n        &lt;row&gt;\n          &lt;label class=&quot;text-prompt&quot; value=&quot;Date:&quot; \n            accesskey=&quot;D&quot; control=&quot;date-text&quot;\/&gt;\n          &lt;textbox id=&quot;date-text&quot; type=&quot;timed&quot; \n            timeout=&quot;750&quot; oncommand=&quot;refresh();&quot;\/&gt;\n          &lt;\/row&gt;\n        &lt;row&gt;\n          &lt;label value=&quot;Day:&quot;\/&gt;\n          &lt;hbox id=&quot;day-box&quot;&gt;\n            &lt;label class=&quot;day&quot; value=&quot;Sunday&quot; disabled=&quot;true&quot;\/&gt;\n            &lt;label class=&quot;day&quot; value=&quot;Monday&quot; disabled=&quot;true&quot;\/&gt;\n            &lt;label class=&quot;day&quot; value=&quot;Tuesday&quot; disabled=&quot;true&quot;\/&gt;\n            &lt;label class=&quot;day&quot; value=&quot;Wednesday&quot; disabled=&quot;true&quot;\/&gt;\n            &lt;label class=&quot;day&quot; value=&quot;Thursday&quot; disabled=&quot;true&quot;\/&gt;\n            &lt;label class=&quot;day&quot; value=&quot;Friday&quot; disabled=&quot;true&quot;\/&gt;\n            &lt;label class=&quot;day&quot; value=&quot;Saturday&quot; disabled=&quot;true&quot;\/&gt;\n            &lt;\/hbox&gt;\n          &lt;\/row&gt;\n        &lt;\/rows&gt;\n      &lt;\/grid&gt;\n    &lt;hbox class=&quot;buttons&quot;&gt;\n      &lt;button id=&quot;clear&quot; label=&quot;Clear&quot; accesskey=&quot;C&quot; \n        oncommand=&quot;clearDate();&quot;\/&gt;\n      &lt;button id=&quot;today&quot; label=&quot;Today&quot; accesskey=&quot;T&quot;\n        oncommand=&quot;setToday();&quot;\/&gt;\n      &lt;\/hbox&gt;\n    &lt;\/groupbox&gt;\n\n  &lt;statusbar&gt;\n    &lt;statusbarpanel id=&quot;status&quot;\/&gt;\n    &lt;\/statusbar&gt;\n\n&lt;\/vbox&gt;\n\n&lt;\/window&gt;\n\n\nMake a new CSS file, style7.css. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\n\/*** XUL demonstration ***\/\nwindow {\n  -moz-box-align: start;\n  background-color: -moz-dialog;\n  font: -moz-dialog;\n  padding: 2em;\n  }\n\n.head-1 {\n  font-weight: bold;\n  font-size: 200%;\n  padding-left: 5px;\n  }\n\n\n\/* the group box *\/\n.demo-group {\n  padding: 1em;\n  }\n\n.demo-group grid {\n  margin-bottom: 1em;\n  }\n\n.demo-group column {\n  margin-right: .5em;\n  }\n\n.demo-group row {\n  margin-bottom: .5em;\n  }\n\n.demo-group .buttons {\n  -moz-box-pack: end;\n  }\n\n\n\/* the day-of-week labels *\/\n.day {\n  margin-left: 1em;\n  }\n\n.day[disabled] {\n  color: #777;\n  }\n\n.day:first-child {\n  margin-left: 4px;\n  }\n\n\n\/* the left column labels *\/\n.text-prompt {\n  padding-top: .25em;\n  }\n\n\n\/* the date input box *\/\n#date-text {\n  max-width: 8em;\n  }\n\n\n\/* the status bar *\/\nstatusbar {\n  width: 100%;\n  border: 1px inset -moz-dialog;\n  margin: 4px;\n  padding: 0px 4px;\n  }\n\n#status {\n  padding: 4px;\n  }\n\n#status[warning] {\n  color: red;\n  }\n\n\nMake a new text file, script7.js. Copy and paste the content from here, making sure that you scroll to get all of it:\n\n\n\/\/ XUL demonstration\n\nvar dateBox, dayBox, currentDay, status; \/\/ elements\n\n\/\/ called by window onLoad\nfunction init() {\n  dateBox = document.getElementById(&quot;date-text&quot;)\n  dayBox = document.getElementById(&quot;day-box&quot;)\n  status = document.getElementById(&quot;status&quot;)\n  setToday();\n  }\n\n\/\/ called by Clear button\nfunction clearDate() {\n  dateBox.value = &quot;&quot;\n  refresh()\n  }\n\n\/\/ called by Today button\nfunction setToday() {\n  var d = new Date()\n  dateBox.value = (d.getMonth() + 1)\n    + &quot;\/&quot; + d.getDate()\n    + &quot;\/&quot; + d.getFullYear()\n  refresh()\n  }\n\n\/\/ called by Date textbox\nfunction refresh() {\n  var d = dateBox.value\n  var theDate = null\n\n  showStatus(null)\n  if (d&nbsp;!= &quot;&quot;) {\n    try {\n      var a = d.split(&quot;\/&quot;)\n      var theDate = new Date(a[2], a[0] - 1, a[1])\n      showStatus(theDate)\n      }\n    catch (ex) {}\n    }\n  setDay(theDate)\n  }\n\n\/\/ internal\nfunction setDay(aDate) {\n  if (currentDay) currentDay.setAttribute(&quot;disabled&quot;, &quot;true&quot;)\n  if (aDate == null) currentDay = null\n  else {\n    var d = aDate.getDay()\n    currentDay = dayBox.firstChild\n    while (d-- &gt; 0) currentDay = currentDay.nextSibling\n    currentDay.removeAttribute(&quot;disabled&quot;)\n    }\n  dateBox.focus();\n  }\n\nfunction showStatus(aDate) {\n  if (aDate == null) {\n    status.removeAttribute(&quot;warning&quot;)\n    status.setAttribute(&quot;label&quot;, &quot;&quot;)\n    }\n  else if (aDate === false || isNaN(aDate.getTime())) {\n    status.setAttribute(&quot;warning&quot;, &quot;true&quot;)\n    status.setAttribute(&quot;label&quot;, &quot;Date is not valid&quot;)\n    }\n  else {\n    status.removeAttribute(&quot;warning&quot;)\n    status.setAttribute(&quot;label&quot;, aDate.toLocaleDateString())\n    }\n  }\n\n\nTo see the result exactly as intended, use the default theme in your browser. If you use a different theme, it changes some user-interface styles and the demonstration might look strange.\nOpen the document in your Mozilla browser and use the interface.\nThis wiki does not support XUL and JavaScript in pages, so it is not possible to show the demonstration here. It looks something like this:\n    XUL demonstration  Day of week calculator    Date: 6\/27\/2005   Day: Sunday Monday Tuesday Wednesday Thurdsay Friday Saturday   &nbsp;   Clear Today        June 27, 2005    \n\nNotes about this demonstration:\n The XUL document links the stylesheet as usual, and it also links the script. The script is not important in this demonstration. Much of the style that you see is determined by your browser's theme.\n\nExamine the document's stylesheet to ensure that you understand all the rules there. If there is a rule that you do not understand, comment it out and refresh your browser to see the effect on the document.\n Challenge    Use the DOM Inspector tool to examine the Date textbox. It is made up of other elements that are generated by its XBL binding. Discover the class of its html:input element. This is the element that actually receives user input. Using this knowledge, add a rule to the stylesheet that makes the background of the Date box pale blue when it has keyboard focus (but white when keyboard focus is somewhere else).   \n\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nIn this demonstration, you see the standard rectangular shapes that are common to most user interfaces. Mozilla also supports a specialized graphics language for creating shapes, using CSS stylesheets to specify the style. The next page demonstrates this: SVG graphics\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nIn this demonstration, you see the standard rectangular shapes that are common to most user interfaces. Mozilla also supports a specialized graphics language for creating shapes, using CSS stylesheets to specify the style. The next page demonstrates this: SVG graphics\n\n   CSS Getting Started Tutorial    Part I 1. What is CSS? &gt; 2. Why use CSS? &gt; 3. How CSS works &gt; 4. Cascading and inheritance &gt; 5. Selectors &gt; 6. Readable CSS &gt; 7. Text styles &gt; 8. Color &gt; 9. Content &gt; 10. Lists &gt; 11. Boxes &gt; 12. Layout &gt; 13. Tables &gt; 14. Media    Part II 1. JavaScript &gt; 2. SVG &gt; 3. XML data &gt; 4. XBL binding &gt; 5. XUL user interfaces&nbsp;  \n\n\n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Challenge_solutions","title":"Challenge solutions","description":"Why use CSS\nColors\n Challenge\n\n Without looking up a reference, find five more color names that work in your stylesheet. Solution CSS&nbsp;supports common color names like orange, yellow, blue, green, or black. It also supports some more exotic color names like chartreuse, fuschia, or burlywood. See CSS Color value for a complete list as well as other ways of specifying colors.\n\nColors\n Challenge\n\n Without looking up a reference, find five more color names that work in your stylesheet. Solution CSS&nbsp;supports common color names like orange, yellow, blue, green, or black. It also supports some more exotic color names like chartreuse, fuschia, or burlywood. See CSS Color value for a complete list as well as other ways of specifying colors.\n\nHow CSS works\nDOM inspector\n Challenge In DOMi, click on a STRONG node. Use DOMi's right-hand pane to find out where the node's color is set to red, and where its appearance is made bolder than normal text. Solution In the menu above the right-hand pane, choose CSS Rules.&nbsp; You see two items listed, one that references an internal resource and one that references your stylesheet file. The internal resource defines the font-weight property as bolder; your stylesheet defines the color property as red.\n\nDOM inspector\n Challenge In DOMi, click on a STRONG node. Use DOMi's right-hand pane to find out where the node's color is set to red, and where its appearance is made bolder than normal text. Solution In the menu above the right-hand pane, choose CSS Rules.&nbsp; You see two items listed, one that references an internal resource and one that references your stylesheet file. The internal resource defines the font-weight property as bolder; your stylesheet defines the color property as red.\n\nCascading and inheritance\nInherited styles\n Challenge Change your stylesheet so that only the red letters are underlined. Solution Move the declaration for underlining from the rule for &lt;p&gt;\n to the one for &lt;strong&gt;\n. The resulting file looks like this: \r\n          p {color: blue; }\nstrong {color: orange; text-decoration: underline;}\r\n         \n\nLater sections of this tutorial describe style rules and declarations in greater detail.\nInherited styles\n Challenge Change your stylesheet so that only the red letters are underlined. Solution Move the declaration for underlining from the rule for &lt;p&gt;\n to the one for &lt;strong&gt;\n. The resulting file looks like this: \r\n          p {color: blue; }\nstrong {color: orange; text-decoration: underline;}\r\n         \n\nLater sections of this tutorial describe style rules and declarations in greater detail.\nSelectors\nSecond paragraph blue\n Challenge Without changing your HTML file, add a single rule to your CSS file that keeps all the initial letters that same color as they are now, but makes all the other text in the second paragraph blue. Solution Add a rule with an ID selector of #second and a declaration color:&nbsp;blue;, as shown below: \r\n          #second { color: blue; }\r\n         A more specific selector, p#second also works.\n\nBoth paragraphs blue\n Challenge Now change the rule you have just added (without changing anything else), to make the first paragraph blue too. Solution Change the selector of the new rule to be a tag selector using p: \r\n          p { color: blue; }\r\n         \n\nThe rules for the other colors all have more specific selectors, so they override the blue of the paragraph.\nSecond paragraph blue\n Challenge Without changing your HTML file, add a single rule to your CSS file that keeps all the initial letters that same color as they are now, but makes all the other text in the second paragraph blue. Solution Add a rule with an ID selector of #second and a declaration color:&nbsp;blue;, as shown below: \r\n          #second { color: blue; }\r\n         A more specific selector, p#second also works.\n\nBoth paragraphs blue\n Challenge Now change the rule you have just added (without changing anything else), to make the first paragraph blue too. Solution Change the selector of the new rule to be a tag selector using p: \r\n          p { color: blue; }\r\n         \n\nThe rules for the other colors all have more specific selectors, so they override the blue of the paragraph.\nReadable CSS\nCommenting out a rule\n Challenge Comment out part of your stylesheet, without changing anything else, to make the very first letter of your document red. Solution One way to do this is to put comment delimiters around the rule for .carrot: \r\n          \/*\n.carrot {\n  color: orange;\n}\n*\/\r\n         \n\nCommenting out a rule\n Challenge Comment out part of your stylesheet, without changing anything else, to make the very first letter of your document red. Solution One way to do this is to put comment delimiters around the rule for .carrot: \r\n          \/*\n.carrot {\n  color: orange;\n}\n*\/\r\n         \n\nText styles\nBig initial letters\n Challenge Without changing anything else, make all six initial letters twice the size in the browser's default serif font. Solution Add the following style declaration to the strong rule: \r\n          font: 200% serif;\r\n         If you use separate declarations for font-size and font-family, then the font-style setting on the first paragraph is not overridden.\n\nBig initial letters\n Challenge Without changing anything else, make all six initial letters twice the size in the browser's default serif font. Solution Add the following style declaration to the strong rule: \r\n          font: 200% serif;\r\n         If you use separate declarations for font-size and font-family, then the font-style setting on the first paragraph is not overridden.\n\nColor\nThree-digit color codes\n Challenge In your CSS file, change all the color names to 3-digit color codes without affecting the result. Solution The following values are reasonable approximations of the named colors: \r\n          strong {\n  color: #f00; \/* red *\/\n  background-color: #ddf; \/* pale blue *\/\n  font: 200% serif;\n}\n\n.carrot {\n  color: #fa0; \/* orange *\/\n}\n\n.spinach {\n  color: #080; \/* dark green *\/\n}\n\np {\n  color: #00f; \/* blue *\/\n}\r\n         \n\nThree-digit color codes\n Challenge In your CSS file, change all the color names to 3-digit color codes without affecting the result. Solution The following values are reasonable approximations of the named colors: \r\n          strong {\n  color: #f00; \/* red *\/\n  background-color: #ddf; \/* pale blue *\/\n  font: 200% serif;\n}\n\n.carrot {\n  color: #fa0; \/* orange *\/\n}\n\n.spinach {\n  color: #080; \/* dark green *\/\n}\n\np {\n  color: #00f; \/* blue *\/\n}\r\n         \n\nContent\nAdd an image\n Challenge Add a one rule to your stylesheet so that it displays the image at the start of each line. Solution Add this rule to your stylesheet: \r\n          p:before{\n  content: url(&quot;yellow-pin.png&quot;);\n}\r\n         \n\nAdd an image\n Challenge Add a one rule to your stylesheet so that it displays the image at the start of each line. Solution Add this rule to your stylesheet: \r\n          p:before{\n  content: url(&quot;yellow-pin.png&quot;);\n}\r\n         \n\nLists\nLower Roman numerals\n Challenge Add a rule to your stylesheet, to number the oceans using Roman numerals from i to v. Solution Define a rule for list items to use the lower-roman list style: \r\n          li {\n  list-style: lower-roman;\n}\r\n         \n\nCapital letters\n Challenge Change your stylesheet to identify the headings with capital letters in parentheses. Solution Add a rule to the body element (parent of the headings) to reset a new counter, and one to display and increment the counter on the headings: \r\n          \/* numbered headings *\/\nbody {counter-reset: headnum;}\nh3:before {\n  content: &quot;(&quot; counter(headnum, upper-latin) &quot;) &quot;;\n  counter-increment: headnum;\n}\r\n         \n\nLower Roman numerals\n Challenge Add a rule to your stylesheet, to number the oceans using Roman numerals from i to v. Solution Define a rule for list items to use the lower-roman list style: \r\n          li {\n  list-style: lower-roman;\n}\r\n         \n\nCapital letters\n Challenge Change your stylesheet to identify the headings with capital letters in parentheses. Solution Add a rule to the body element (parent of the headings) to reset a new counter, and one to display and increment the counter on the headings: \r\n          \/* numbered headings *\/\nbody {counter-reset: headnum;}\nh3:before {\n  content: &quot;(&quot; counter(headnum, upper-latin) &quot;) &quot;;\n  counter-increment: headnum;\n}\r\n         \n\nBoxes\nOcean border\n Challenge Add one rule to your stylesheet, making a wide border all around the oceans in a color that reminds you of the sea. Solution The following rule achieves this effect: \r\n          ul {\n  border: 10px solid lightblue;\n}\r\n         \n\nOcean border\n Challenge Add one rule to your stylesheet, making a wide border all around the oceans in a color that reminds you of the sea. Solution The following rule achieves this effect: \r\n          ul {\n  border: 10px solid lightblue;\n}\r\n         \n\nLayout\nDefault image position\n Challenge Change your sample document, doc2.html, adding this tag to it near the end, just before &lt;\/BODY&gt;:  &lt;IMG id=&quot;fixed-pin&quot; src=&quot;Yellow-pin.png&quot; alt=&quot;Yellow map pin&quot;&gt; Predict where the image will appear in your document. Then refresh your browser to see if you were correct. Solution The image appears to the right of the second list.  Fixed image position Challenge Add a rule to your stylesheet that places the image in the top right of your document. Solution The following rule achieves the desired result: \n#fixed-pin  {\n  position:fixed;\n  top: 3px;\n  right: 3px;\n}  \n\nDefault image position\n Challenge Change your sample document, doc2.html, adding this tag to it near the end, just before &lt;\/BODY&gt;:  &lt;IMG id=&quot;fixed-pin&quot; src=&quot;Yellow-pin.png&quot; alt=&quot;Yellow map pin&quot;&gt; Predict where the image will appear in your document. Then refresh your browser to see if you were correct. Solution The image appears to the right of the second list.  Fixed image position Challenge Add a rule to your stylesheet that places the image in the top right of your document. Solution The following rule achieves the desired result: \n#fixed-pin  {\n  position:fixed;\n  top: 3px;\n  right: 3px;\n}  \n\nFixed image position Challenge Add a rule to your stylesheet that places the image in the top right of your document. Solution The following rule achieves the desired result: \n#fixed-pin  {\n  position:fixed;\n  top: 3px;\n  right: 3px;\n}  \nTables\nBorders on data cells only\n Challenge Change the stylesheet to make the table have a green border around only the data cells. Solution The following rule puts borders around only &lt;td&gt;\n elements that are inside the &lt;tbody&gt;\n element of the table with id=demo-table: \n#demo-table tbody td {\n  border:1px solid #7a7;\n}\n \n\nBorders on data cells only\n Challenge Change the stylesheet to make the table have a green border around only the data cells. Solution The following rule puts borders around only &lt;td&gt;\n elements that are inside the &lt;tbody&gt;\n element of the table with id=demo-table: \n#demo-table tbody td {\n  border:1px solid #7a7;\n}\n \n\nMedia\nSeparate print style file\n Challenge Move the print-specific style rules to a separate CSS file and import them into your style4.css stylesheet. Solution Cut and paste the lines between \/* print only *\/ and \/* end print only *\/ into a file named style4_print.css. In style4.css, add the following line at the beginning of the file: \n@import url(&quot;style4_print.css&quot;) print;\n \n\nHeading hover color\n Challenge Make the headings turn blue when the mouse pointer is over them. Solution The following rule achieves the desired result: \nh1:hover {\n  color: blue;\n}\n \n\nSeparate print style file\n Challenge Move the print-specific style rules to a separate CSS file and import them into your style4.css stylesheet. Solution Cut and paste the lines between \/* print only *\/ and \/* end print only *\/ into a file named style4_print.css. In style4.css, add the following line at the beginning of the file: \n@import url(&quot;style4_print.css&quot;) print;\n \n\nHeading hover color\n Challenge Make the headings turn blue when the mouse pointer is over them. Solution The following rule achieves the desired result: \nh1:hover {\n  color: blue;\n}\n \n\nJavaScript\nMove box to the right\n Challenge Change the script so that the square jumps to the right by 20 em when its color changes, and jumps back afterwards. Solution Add lines to modify the margin-left property. Be sure to specify it as marginLeft in JavaScript. The following script achieves the desired result: \r\n          \/\/ JavaScript demonstration\nfunction doDemo (button) {\n  var square = document.getElementById(&quot;square&quot;);\n  square.style.backgroundColor = &quot;#fa4&quot;;\n  square.style.marginLeft = &quot;20em&quot;;\n  button.setAttribute(&quot;disabled&quot;, &quot;true&quot;);\n  setTimeout(clearDemo, 2000, button);\n}\n\nfunction clearDemo (button) {\n  var square = document.getElementById(&quot;square&quot;);\n  square.style.backgroundColor = &quot;transparent&quot;;\n  square.style.marginLeft = &quot;0em&quot;;\n  button.removeAttribute(&quot;disabled&quot;);\n}\r\n         \nMove box to the right\n Challenge Change the script so that the square jumps to the right by 20 em when its color changes, and jumps back afterwards. Solution Add lines to modify the margin-left property. Be sure to specify it as marginLeft in JavaScript. The following script achieves the desired result: \r\n          \/\/ JavaScript demonstration\nfunction doDemo (button) {\n  var square = document.getElementById(&quot;square&quot;);\n  square.style.backgroundColor = &quot;#fa4&quot;;\n  square.style.marginLeft = &quot;20em&quot;;\n  button.setAttribute(&quot;disabled&quot;, &quot;true&quot;);\n  setTimeout(clearDemo, 2000, button);\n}\n\nfunction clearDemo (button) {\n  var square = document.getElementById(&quot;square&quot;);\n  square.style.backgroundColor = &quot;transparent&quot;;\n  square.style.marginLeft = &quot;0em&quot;;\n  button.removeAttribute(&quot;disabled&quot;);\n}\r\n         \n"},{"url":"https:\/\/developer.mozilla.org\/en\/CSS\/Getting_Started\/Why_use_CSS%3F","title":"Why use CSS?","description":"Information: Why use CSS?\nCSS helps you to keep the information content of a document separate from the details of how to display it. The details of how to display the document are known as its style. You keep the style separate from the content so that you can:\n Avoid duplication Make maintenance easier Use the same content with different styles for different purposes\n\n Example    Your web site might have thousands of pages that look similar. Using CSS, you store the style information in common files that all the pages share. When a user displays a web page, the user's browser loads the style information along with the content of the page. When a user prints a web page, you provide different style information that makes the printed page easy to read.   \n\nIn general with CSS, you use the markup language to describe the information content of the document, not its style. You use CSS to specify its style, not its content. (Later in this tutorial, you will see some exceptions to this arrangement.)\n More details    A markup language like HTML also provides some ways to specify style. For example, in HTML you can use a &lt;B&gt; tag to make text bold, and you can specify the background color of a page in it's &lt;BODY&gt; tag. When you use CSS, you normally avoid using these features of the markup language so that all your document's style information is in one place.   \n\nAction: Creating a stylesheet\n Create another text file in the same directory as before. This file will be your stylesheet. Name it: style1.css In your CSS file, copy and paste this one line, then save the file: \nstrong {color: red;}\n \n\nLinking your document to your stylesheet\n To link your document to your stylesheet, edit your HTML file. Add the line shown here in bold: \n&lt;!DOCTYPE HTML PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.01\/\/EN&quot;&gt;\n&lt;HTML&gt;\n  &lt;HEAD&gt;\n  &lt;TITLE&gt;Sample document&lt;\/TITLE&gt;\n  &lt;LINK rel=&quot;stylesheet&quot; href=&quot;style1.css&quot;&gt;\n  &lt;\/HEAD&gt;\n  &lt;BODY&gt;\n    &lt;P&gt;\n      &lt;STRONG&gt;C&lt;\/STRONG&gt;ascading\n      &lt;STRONG&gt;S&lt;\/STRONG&gt;tyle\n      &lt;STRONG&gt;S&lt;\/STRONG&gt;heets\n    &lt;\/P&gt;\n  &lt;\/BODY&gt;\n&lt;\/HTML&gt;\n  Save the file and refresh your browser's display. The stylesheet makes the initial letters red, like this:    Cascading Style Sheets     Challenge    In addition to red, CSS allows some other color names. Without looking up a reference, find five more color names that work in your stylesheet.     \n\nLinking your document to your stylesheet\n To link your document to your stylesheet, edit your HTML file. Add the line shown here in bold: \n&lt;!DOCTYPE HTML PUBLIC &quot;-\/\/W3C\/\/DTD HTML 4.01\/\/EN&quot;&gt;\n&lt;HTML&gt;\n  &lt;HEAD&gt;\n  &lt;TITLE&gt;Sample document&lt;\/TITLE&gt;\n  &lt;LINK rel=&quot;stylesheet&quot; href=&quot;style1.css&quot;&gt;\n  &lt;\/HEAD&gt;\n  &lt;BODY&gt;\n    &lt;P&gt;\n      &lt;STRONG&gt;C&lt;\/STRONG&gt;ascading\n      &lt;STRONG&gt;S&lt;\/STRONG&gt;tyle\n      &lt;STRONG&gt;S&lt;\/STRONG&gt;heets\n    &lt;\/P&gt;\n  &lt;\/BODY&gt;\n&lt;\/HTML&gt;\n  Save the file and refresh your browser's display. The stylesheet makes the initial letters red, like this:    Cascading Style Sheets     Challenge    In addition to red, CSS allows some other color names. Without looking up a reference, find five more color names that work in your stylesheet.     \n\nWhat next?\nIf you had difficulty understanding this page, or if you have other comments about it, please contribute to its Discussion page.\nNow you have a sample document linked to a separate stylesheet, you are ready to learn more about how your browser combines them when it displays the document: How CSS works"}]